{
	"talon-lists" : {
		"user.cursorless_simple_action list": [
			{"spoken" : "bottom","action" : "scrollToBottom"},
			{"spoken" : "breakpoint","action" : "toggleLineBreakpoint"},
			{"spoken" : "carve","action" : "cutToClipboard"},
			{"spoken" : "center","action" : "scrollToCenter"},
			{"spoken" : "chuck","action" : "remove"},
			{"spoken" : "clear","action" : "clearAndSetSelection"},
			{"spoken" : "clone up","action" : "insertCopyBefore"},
			{"spoken" : "clone","action" : "insertCopyAfter"},
			{"spoken" : "comment","action" : "toggleLineComment"},
			{"spoken" : "copy","action" : "copyToClipboard"},
			{"spoken" : "crown","action" : "scrollToTop"},
			{"spoken" : "dedent","action" : "outdentLine"},
			{"spoken" : "drink","action" : "editNewLineBefore"},
			{"spoken" : "drop","action" : "insertEmptyLineBefore"},
			{"spoken" : "extract","action" : "extractVariable"},
			{"spoken" : "float","action" : "insertEmptyLineAfter"},
			{"spoken" : "fold","action" : "foldRegion"},
			{"spoken" : "follow","action" : "followLink"},
			{"spoken" : "give","action" : "deselect"},
			{"spoken" : "highlight","action" : "highlight"},
			{"spoken" : "indent","action" : "indentLine"},
			{"spoken" : "post","action" : "setSelectionAfter"},
			{"spoken" : "pour","action" : "editNewLineAfter"},
			{"spoken" : "pre","action" : "setSelectionBefore"},
			{"spoken" : "puff","action" : "insertEmptyLinesAround"},
			{"spoken" : "shuffle","action" : "randomizeTargets"},
			{"spoken" : "reverse","action" : "reverseTargets"},
			{"spoken" : "scout all","action" : "findInWorkspace"},
			{"spoken" : "snippet make","action" : "generateSnippet"},
			{"spoken" : "sort","action" : "sortTargets"},
			{"spoken" : "take","action" : "setSelection"},
			{"spoken" : "unfold","action" : "unfoldRegion"},

		],
		"user.cursorless_positional_action list": [
			{"spoken" : "paste","action" : "pasteFromClipboard"},

		],
		"user.cursorless_callback_action list": [
			{"spoken" : "call","action" : "callAsFunction"},
			{"spoken" : "scout","action" : "findInDocument"},
			{"spoken" : "phones","action" : "nextHomophone"},

		],
		"user.cursorless_makeshift_action list": [
			{"spoken" : "define","action" : "revealDefinition"},
			{"spoken" : "type deaf","action" : "revealTypeDefinition"},
			{"spoken" : "hover","action" : "showHover"},
			{"spoken" : "inspect","action" : "showDebugHover"},
			{"spoken" : "quick fix","action" : "showQuickFix"},
			{"spoken" : "reference","action" : "showReferences"},
			{"spoken" : "rename","action" : "rename"},

		],
		"user.cursorless_swap_action list": [
			{"spoken" : "swap","action" : "swapTargets"},

		],
		"user.cursorless_move_bring_action list": [
			{"spoken" : "bring","action" : "replaceWithTarget"},
			{"spoken" : "move","action" : "moveToTarget"},

		],
		"user.cursorless_wrap_action list": [
			{"spoken" : "wrap","action" : "wrapWithPairedDelimiter"},
			{"spoken" : "repack","action" : "rewrap"},

		],
		"user.cursorless_insert_snippet_action list": [
			{"spoken" : "snippet","action" : "insertSnippet"},

		],
		"user.cursorless_reformat_action list": [
			{"spoken" : "format","action" : "applyFormatter"},

		],
		"user.cursorless_wrapper_only_paired_delimiter list": [
			{"spoken" : "void","action" : "whitespace"},

		],
		"user.cursorless_selectable_only_paired_delimiter list": [
			{"spoken" : "pair","action" : "any"},

		],
		"user.cursorless_wrapper_selectable_paired_delimiter list": [
			{"spoken" : "curly","action" : "curlyBrackets"},
			{"spoken" : "diamond","action" : "angleBrackets"},
			{"spoken" : "escaped quad","action" : "escapedDoubleQuotes"},
			{"spoken" : "escaped twin","action" : "escapedSingleQuotes"},
			{"spoken" : "escaped round","action" : "escapedParentheses"},
			{"spoken" : "escaped square","action" : "escapedSquareBrackets"},
			{"spoken" : "quad","action" : "doubleQuotes"},
			{"spoken" : "round","action" : "parentheses"},
			{"spoken" : "skis","action" : "backtickQuotes"},
			{"spoken" : "square","action" : "squareBrackets"},
			{"spoken" : "twin","action" : "singleQuotes"},

		],
		"user.cursorless_range_connective list": [
			{"spoken" : "between","action" : "rangeExclusive"},
			{"spoken" : "past","action" : "rangeInclusive"},
			{"spoken" : "until","action" : "rangeExcludingEnd"},

		],
		"user.cursorless_list_connective list": [
			{"spoken" : "and","action" : "listConnective"},

		],
		"user.cursorless_swap_connective list": [
			{"spoken" : "with","action" : "swapConnective"},

		],
		"user.cursorless_source_destination_connective list": [
			{"spoken" : "to","action" : "sourceDestinationConnective"},

		],
		"user.cursorless_special_mark list": [
			{"spoken" : "this","action" : "currentSelection"},
			{"spoken" : "that","action" : "previousTarget"},
			{"spoken" : "source","action" : "previousSource"},
			{"spoken" : "nothing","action" : "nothing"},

		],
		"user.cursorless_line_direction list": [
			{"spoken" : "row","action" : "lineNumberModulo100"},
			{"spoken" : "up","action" : "lineNumberRelativeUp"},
			{"spoken" : "down","action" : "lineNumberRelativeDown"},

		],
		"user.cursorless_hat_color list": [
			{"spoken" : "blue","action" : "blue"},
			{"spoken" : "green","action" : "green"},
			{"spoken" : "rose","action" : "red"},
			{"spoken" : "plum","action" : "pink"},
			{"spoken" : "squash","action" : "yellow"},

		],
		"user.cursorless_scope_type list": [
			{"spoken" : "arg","action" : "argumentOrParameter"},
			{"spoken" : "attribute","action" : "attribute"},
			{"spoken" : "call","action" : "functionCall"},
			{"spoken" : "callee","action" : "functionCallee"},
			{"spoken" : "class name","action" : "className"},
			{"spoken" : "class","action" : "class"},
			{"spoken" : "comment","action" : "comment"},
			{"spoken" : "funk name","action" : "functionName"},
			{"spoken" : "funk","action" : "namedFunction"},
			{"spoken" : "if state","action" : "ifStatement"},
			{"spoken" : "item","action" : "collectionItem"},
			{"spoken" : "key","action" : "collectionKey"},
			{"spoken" : "lambda","action" : "anonymousFunction"},
			{"spoken" : "list","action" : "list"},
			{"spoken" : "map","action" : "map"},
			{"spoken" : "name","action" : "name"},
			{"spoken" : "regex","action" : "regularExpression"},
			{"spoken" : "section","action" : "section"},
			{"spoken" : "selector","action" : "selector"},
			{"spoken" : "state","action" : "statement"},
			{"spoken" : "type","action" : "type"},
			{"spoken" : "value","action" : "value"},
			{"spoken" : "condition","action" : "condition"},
			{"spoken" : "element","action" : "xmlElement"},
			{"spoken" : "tags","action" : "xmlBothTags"},
			{"spoken" : "start tag","action" : "xmlStartTag"},
			{"spoken" : "end tag","action" : "xmlEndTag"},
			{"spoken" : "block","action" : "paragraph"},
			{"spoken" : "cell","action" : "notebookCell"},
			{"spoken" : "file","action" : "document"},
			{"spoken" : "line","action" : "line"},
			{"spoken" : "paint","action" : "nonWhitespaceSequence"},
			{"spoken" : "short paint","action" : "boundedNonWhitespaceSequence"},
			{"spoken" : "link","action" : "url"},
			{"spoken" : "token","action" : "token"},

		],
		"user.cursorless_surrounding_pair_scope_type list": [
			{"spoken" : "string","action" : "string"},

		],
		"user.cursorless_subtoken_scope_type list": [
			{"spoken" : "word","action" : "word"},
			{"spoken" : "char","action" : "character"},

		],
		"user.cursorless_simple_modifier list": [
			{"spoken" : "bound","action" : "excludeInterior"},
			{"spoken" : "just","action" : "toRawSelection"},
			{"spoken" : "leading","action" : "leading"},
			{"spoken" : "trailing","action" : "trailing"},

		],
		"user.cursorless_interior_modifier list": [
			{"spoken" : "inside","action" : "interiorOnly"},

		],
		"user.cursorless_head_tail_modifier list": [
			{"spoken" : "head","action" : "extendThroughStartOf"},
			{"spoken" : "tail","action" : "extendThroughEndOf"},

		],
		"user.cursorless_range_type list": [
			{"spoken" : "slice","action" : "verticalRange"},

		],
		"user.cursorless_position list": [
			{"spoken" : "start of","action" : "start"},
			{"spoken" : "end of","action" : "end"},
			{"spoken" : "before","action" : "before"},
			{"spoken" : "after","action" : "after"},

		],
		"user.cursorless_delimiter_force_direction list": [
			{"spoken" : "left","action" : "left"},
			{"spoken" : "right","action" : "right"},

		],
		"user.language_mode list": [
			{"spoken" : "batch","action" : "batch"},
			{"spoken" : "c","action" : "c"},
			{"spoken" : "see sharp","action" : "csharp"},
			{"spoken" : "c s s","action" : "css"},
			{"spoken" : "g d b","action" : "gdb"},
			{"spoken" : "go","action" : "go"},
			{"spoken" : "go lang","action" : "go"},
			{"spoken" : "go language","action" : "go"},
			{"spoken" : "java","action" : "java"},
			{"spoken" : "javascript","action" : "javascript"},
			{"spoken" : "javascriptreact","action" : "javascriptreact"},
			{"spoken" : "markdown","action" : "markdown"},
			{"spoken" : "php","action" : "php"},
			{"spoken" : "python","action" : "python"},
			{"spoken" : "protobuf","action" : "protobuf"},
			{"spoken" : "are language","action" : "r"},
			{"spoken" : "ruby","action" : "ruby"},
			{"spoken" : "rust","action" : "rust"},
			{"spoken" : "scala","action" : "scala"},
			{"spoken" : "scss","action" : "scss"},
			{"spoken" : "sql","action" : "sql"},
			{"spoken" : "talon","action" : "talon"},
			{"spoken" : "terraform","action" : "terraform"},
			{"spoken" : "typescript","action" : "typescript"},
			{"spoken" : "typescriptreact","action" : "typescriptreact"},
			{"spoken" : "vimscript","action" : "vimscript"},

		],
		"user.prose_modifiers list": [
			{"spoken" : "cap","action" : "cap"},
			{"spoken" : "no cap","action" : "no_cap"},
			{"spoken" : "no caps","action" : "no_cap"},
			{"spoken" : "no space","action" : "no_space"},

		],
		"user.prose_snippets list": [
			{"spoken" : "spacebar","action" : " "},
			{"spoken" : "new line","action" : "
"},
			{"spoken" : "new paragraph","action" : "

"},
			{"spoken" : "open quote","action" : "“"},
			{"spoken" : "close quote","action" : "”"},
			{"spoken" : "smiley","action" : ":-)"},
			{"spoken" : "winky","action" : ";-)"},
			{"spoken" : "frowny","action" : ":-("},

		],
		"user.talon_settings_csv list": [
			{"spoken" : "file extensions","action" : "C:\\Users\\devcs\\AppData\\Roaming\\talon\\user\\knausj_talon\\settings\\file_extensions.csv"},
			{"spoken" : "search engines","action" : "C:\\Users\\devcs\\AppData\\Roaming\\talon\\user\\knausj_talon\\settings\\search_engines.csv"},
			{"spoken" : "system paths","action" : "C:\\Users\\devcs\\AppData\\Roaming\\talon\\user\\knausj_talon\\settings\\system_paths.csv"},
			{"spoken" : "websites","action" : "C:\\Users\\devcs\\AppData\\Roaming\\talon\\user\\knausj_talon\\settings\\websites.csv"},
			{"spoken" : "words to replace","action" : "C:\\Users\\devcs\\AppData\\Roaming\\talon\\user\\knausj_talon\\settings\\words_to_replace.csv"},
			{"spoken" : "additional words","action" : "C:\\Users\\devcs\\AppData\\Roaming\\talon\\user\\knausj_talon\\settings\\additional_words.csv"},
			{"spoken" : "homophones","action" : "C:\\Users\\devcs\\AppData\\Roaming\\talon\\user\\knausj_talon\\code\\homophones.csv"},

		],
		"user.file_extension list": [
			{"spoken" : "dot pie","action" : ".py"},
			{"spoken" : "dot talon","action" : ".talon"},
			{"spoken" : "dot mark down","action" : ".md"},
			{"spoken" : "dot shell","action" : ".sh"},
			{"spoken" : "dot vim","action" : ".vim"},
			{"spoken" : "dot see","action" : ".c"},
			{"spoken" : "dot see sharp","action" : ".cs"},
			{"spoken" : "dot com","action" : ".com"},
			{"spoken" : "dot net","action" : ".net"},
			{"spoken" : "dot org","action" : ".org"},
			{"spoken" : "dot us","action" : ".us"},
			{"spoken" : "dot U S","action" : ".us"},
			{"spoken" : "dot exe","action" : ".exe"},
			{"spoken" : "dot bin","action" : ".bin"},
			{"spoken" : "dot bend","action" : ".bin"},
			{"spoken" : "dot jason","action" : ".json"},
			{"spoken" : "dot jay son","action" : ".json"},
			{"spoken" : "dot J S","action" : ".js"},
			{"spoken" : "dot java script","action" : ".js"},
			{"spoken" : "dot TS","action" : ".ts"},
			{"spoken" : "dot type script","action" : ".ts"},
			{"spoken" : "dot csv","action" : ".csv"},
			{"spoken" : "totssv","action" : ".csv"},
			{"spoken" : "tot csv","action" : ".csv"},
			{"spoken" : "dot cassie","action" : ".csv"},
			{"spoken" : "dot text","action" : ".txt"},

		],
		"user.file_manager_directories list": [

		],
		"user.file_manager_files list": [

		],
		"user.formatters list": [
			{"spoken" : "all cap","action" : "all cap"},
			{"spoken" : "all down","action" : "all down"},
			{"spoken" : "camel","action" : "camel"},
			{"spoken" : "dotted","action" : "dotted"},
			{"spoken" : "dub string","action" : "dub string"},
			{"spoken" : "dunder","action" : "dunder"},
			{"spoken" : "hammer","action" : "hammer"},
			{"spoken" : "kebab","action" : "kebab"},
			{"spoken" : "packed","action" : "packed"},
			{"spoken" : "padded","action" : "padded"},
			{"spoken" : "slasher","action" : "slasher"},
			{"spoken" : "smash","action" : "smash"},
			{"spoken" : "snake","action" : "snake"},
			{"spoken" : "string","action" : "string"},
			{"spoken" : "title","action" : "title"},

		],
		"user.prose_formatter list": [
			{"spoken" : "say","action" : "NOOP"},
			{"spoken" : "speak","action" : "NOOP"},
			{"spoken" : "sentence","action" : "CAPITALIZE_FIRST_WORD"},

		],
		"user.modifier_key list": [
			{"spoken" : "alt","action" : "alt"},
			{"spoken" : "control","action" : "ctrl"},
			{"spoken" : "shift","action" : "shift"},
			{"spoken" : "super","action" : "super"},

		],
		"user.letter list": [
			{"spoken" : "alfa","action" : "a"},
			{"spoken" : "bat","action" : "b"},
			{"spoken" : "cap","action" : "c"},
			{"spoken" : "delta","action" : "d"},
			{"spoken" : "echo","action" : "e"},
			{"spoken" : "fine","action" : "f"},
			{"spoken" : "golf","action" : "g"},
			{"spoken" : "hotel","action" : "h"},
			{"spoken" : "imp","action" : "i"},
			{"spoken" : "jury","action" : "j"},
			{"spoken" : "kilo","action" : "k"},
			{"spoken" : "look","action" : "l"},
			{"spoken" : "made","action" : "m"},
			{"spoken" : "near","action" : "n"},
			{"spoken" : "odd","action" : "o"},
			{"spoken" : "papa","action" : "p"},
			{"spoken" : "quebec","action" : "q"},
			{"spoken" : "red","action" : "r"},
			{"spoken" : "sun","action" : "s"},
			{"spoken" : "trap","action" : "t"},
			{"spoken" : "urge","action" : "u"},
			{"spoken" : "vest","action" : "v"},
			{"spoken" : "whiskey","action" : "w"},
			{"spoken" : "plex","action" : "x"},
			{"spoken" : "yank","action" : "y"},
			{"spoken" : "zulu","action" : "z"},

		],
		"user.punctuation list": [
			{"spoken" : "`","action" : "`"},
			{"spoken" : ",","action" : ","},
			{"spoken" : "back tick","action" : "`"},
			{"spoken" : "grave","action" : "`"},
			{"spoken" : "comma","action" : ","},
			{"spoken" : "period","action" : "."},
			{"spoken" : "full stop","action" : "."},
			{"spoken" : "semicolon","action" : ";"},
			{"spoken" : "colon","action" : ":"},
			{"spoken" : "forward slash","action" : "/"},
			{"spoken" : "question mark","action" : "?"},
			{"spoken" : "exclamation mark","action" : "!"},
			{"spoken" : "exclamation point","action" : "!"},
			{"spoken" : "asterisk","action" : "*"},
			{"spoken" : "hash sign","action" : "#"},
			{"spoken" : "number sign","action" : "#"},
			{"spoken" : "percent sign","action" : "%"},
			{"spoken" : "at sign","action" : "@"},
			{"spoken" : "and sign","action" : "&"},
			{"spoken" : "ampersand","action" : "&"},
			{"spoken" : "dollar sign","action" : "$"},
			{"spoken" : "pound sign","action" : "£"},

		],
		"user.symbol_key list": [
			{"spoken" : "dot","action" : "."},
			{"spoken" : "point","action" : "."},
			{"spoken" : "quote","action" : "'"},
			{"spoken" : "question","action" : "?"},
			{"spoken" : "apostrophe","action" : "'"},
			{"spoken" : "L square","action" : "["},
			{"spoken" : "left square","action" : "["},
			{"spoken" : "square","action" : "["},
			{"spoken" : "R square","action" : "]"},
			{"spoken" : "right square","action" : "]"},
			{"spoken" : "slash","action" : "/"},
			{"spoken" : "backslash","action" : "\\"},
			{"spoken" : "minus","action" : "-"},
			{"spoken" : "dash","action" : "-"},
			{"spoken" : "equals","action" : "="},
			{"spoken" : "plus","action" : "+"},
			{"spoken" : "tilde","action" : "~"},
			{"spoken" : "bang","action" : "!"},
			{"spoken" : "down score","action" : "_"},
			{"spoken" : "underscore","action" : "_"},
			{"spoken" : "paren","action" : "("},
			{"spoken" : "L paren","action" : "("},
			{"spoken" : "left paren","action" : "("},
			{"spoken" : "R paren","action" : ")"},
			{"spoken" : "right paren","action" : ")"},
			{"spoken" : "brace","action" : "{"},
			{"spoken" : "left brace","action" : "{"},
			{"spoken" : "brack","action" : "{"},
			{"spoken" : "bracket","action" : "{"},
			{"spoken" : "left bracket","action" : "{"},
			{"spoken" : "r brace","action" : "}"},
			{"spoken" : "right brace","action" : "}"},
			{"spoken" : "r brack","action" : "}"},
			{"spoken" : "r bracket","action" : "}"},
			{"spoken" : "right bracket","action" : "}"},
			{"spoken" : "angle","action" : "<"},
			{"spoken" : "left angle","action" : "<"},
			{"spoken" : "less than","action" : "<"},
			{"spoken" : "rangle","action" : ">"},
			{"spoken" : "R angle","action" : ">"},
			{"spoken" : "right angle","action" : ">"},
			{"spoken" : "greater than","action" : ">"},
			{"spoken" : "star","action" : "*"},
			{"spoken" : "hash","action" : "#"},
			{"spoken" : "percent","action" : "%"},
			{"spoken" : "caret","action" : "^"},
			{"spoken" : "amper","action" : "&"},
			{"spoken" : "pipe","action" : "|"},
			{"spoken" : "dubquote","action" : "\""},
			{"spoken" : "double quote","action" : "\""},
			{"spoken" : "dollar","action" : "$"},
			{"spoken" : "pound","action" : "£"},
			{"spoken" : "`","action" : "`"},
			{"spoken" : ",","action" : ","},
			{"spoken" : "back tick","action" : "`"},
			{"spoken" : "grave","action" : "`"},
			{"spoken" : "comma","action" : ","},
			{"spoken" : "period","action" : "."},
			{"spoken" : "full stop","action" : "."},
			{"spoken" : "semicolon","action" : ";"},
			{"spoken" : "colon","action" : ":"},
			{"spoken" : "forward slash","action" : "/"},
			{"spoken" : "question mark","action" : "?"},
			{"spoken" : "exclamation mark","action" : "!"},
			{"spoken" : "exclamation point","action" : "!"},
			{"spoken" : "asterisk","action" : "*"},
			{"spoken" : "hash sign","action" : "#"},
			{"spoken" : "number sign","action" : "#"},
			{"spoken" : "percent sign","action" : "%"},
			{"spoken" : "at sign","action" : "@"},
			{"spoken" : "and sign","action" : "&"},
			{"spoken" : "ampersand","action" : "&"},
			{"spoken" : "dollar sign","action" : "$"},
			{"spoken" : "pound sign","action" : "£"},

		],
		"user.number_key list": [
			{"spoken" : "zero","action" : "0"},
			{"spoken" : "one","action" : "1"},
			{"spoken" : "two","action" : "2"},
			{"spoken" : "three","action" : "3"},
			{"spoken" : "four","action" : "4"},
			{"spoken" : "five","action" : "5"},
			{"spoken" : "six","action" : "6"},
			{"spoken" : "seven","action" : "7"},
			{"spoken" : "eight","action" : "8"},
			{"spoken" : "nine","action" : "9"},

		],
		"user.arrow_key list": [
			{"spoken" : "down","action" : "down"},
			{"spoken" : "left","action" : "left"},
			{"spoken" : "right","action" : "right"},
			{"spoken" : "up","action" : "up"},

		],
		"user.special_key list": [
			{"spoken" : "end","action" : "end"},
			{"spoken" : "enter","action" : "enter"},
			{"spoken" : "escape","action" : "escape"},
			{"spoken" : "home","action" : "home"},
			{"spoken" : "insert","action" : "insert"},
			{"spoken" : "pagedown","action" : "pagedown"},
			{"spoken" : "pageup","action" : "pageup"},
			{"spoken" : "space","action" : "space"},
			{"spoken" : "tab","action" : "tab"},
			{"spoken" : "wipe","action" : "backspace"},
			{"spoken" : "delete","action" : "backspace"},
			{"spoken" : "forward delete","action" : "delete"},
			{"spoken" : "page up","action" : "pageup"},
			{"spoken" : "page down","action" : "pagedown"},
			{"spoken" : "menu key","action" : "menu"},
			{"spoken" : "print screen","action" : "printscr"},

		],
		"user.function_key list": [
			{"spoken" : "F one","action" : "f1"},
			{"spoken" : "F two","action" : "f2"},
			{"spoken" : "F three","action" : "f3"},
			{"spoken" : "F four","action" : "f4"},
			{"spoken" : "F five","action" : "f5"},
			{"spoken" : "F six","action" : "f6"},
			{"spoken" : "F seven","action" : "f7"},
			{"spoken" : "F eight","action" : "f8"},
			{"spoken" : "F nine","action" : "f9"},
			{"spoken" : "F ten","action" : "f10"},
			{"spoken" : "F eleven","action" : "f11"},
			{"spoken" : "F twelve","action" : "f12"},

		],
		"user.ordinals list": [
			{"spoken" : "first","action" : "first"},
			{"spoken" : "second","action" : "second"},
			{"spoken" : "third","action" : "third"},
			{"spoken" : "fourth","action" : "fourth"},
			{"spoken" : "fifth","action" : "fifth"},
			{"spoken" : "sixth","action" : "sixth"},
			{"spoken" : "seventh","action" : "seventh"},
			{"spoken" : "eighth","action" : "eighth"},
			{"spoken" : "ninth","action" : "ninth"},
			{"spoken" : "tenth","action" : "tenth"},
			{"spoken" : "eleventh","action" : "eleventh"},
			{"spoken" : "twelfth","action" : "twelfth"},
			{"spoken" : "thirteenth","action" : "thirteenth"},
			{"spoken" : "fourteenth","action" : "fourteenth"},
			{"spoken" : "fifteenth","action" : "fifteenth"},
			{"spoken" : "sixteenth","action" : "sixteenth"},
			{"spoken" : "seventeenth","action" : "seventeenth"},
			{"spoken" : "eighteenth","action" : "eighteenth"},
			{"spoken" : "nineteenth","action" : "nineteenth"},
			{"spoken" : "twentieth","action" : "twentieth"},
			{"spoken" : "twenty first","action" : "twenty first"},
			{"spoken" : "twenty second","action" : "twenty second"},
			{"spoken" : "twenty third","action" : "twenty third"},
			{"spoken" : "twenty fourth","action" : "twenty fourth"},
			{"spoken" : "twenty fifth","action" : "twenty fifth"},
			{"spoken" : "twenty sixth","action" : "twenty sixth"},
			{"spoken" : "twenty seventh","action" : "twenty seventh"},
			{"spoken" : "twenty eighth","action" : "twenty eighth"},
			{"spoken" : "twenty ninth","action" : "twenty ninth"},
			{"spoken" : "thirtieth","action" : "thirtieth"},
			{"spoken" : "thirty first","action" : "thirty first"},
			{"spoken" : "thirty second","action" : "thirty second"},
			{"spoken" : "thirty third","action" : "thirty third"},
			{"spoken" : "thirty fourth","action" : "thirty fourth"},
			{"spoken" : "thirty fifth","action" : "thirty fifth"},
			{"spoken" : "thirty sixth","action" : "thirty sixth"},
			{"spoken" : "thirty seventh","action" : "thirty seventh"},
			{"spoken" : "thirty eighth","action" : "thirty eighth"},
			{"spoken" : "thirty ninth","action" : "thirty ninth"},
			{"spoken" : "fortieth","action" : "fortieth"},
			{"spoken" : "forty first","action" : "forty first"},
			{"spoken" : "forty second","action" : "forty second"},
			{"spoken" : "forty third","action" : "forty third"},
			{"spoken" : "forty fourth","action" : "forty fourth"},
			{"spoken" : "forty fifth","action" : "forty fifth"},
			{"spoken" : "forty sixth","action" : "forty sixth"},
			{"spoken" : "forty seventh","action" : "forty seventh"},
			{"spoken" : "forty eighth","action" : "forty eighth"},
			{"spoken" : "forty ninth","action" : "forty ninth"},
			{"spoken" : "fiftieth","action" : "fiftieth"},
			{"spoken" : "fifty first","action" : "fifty first"},
			{"spoken" : "fifty second","action" : "fifty second"},
			{"spoken" : "fifty third","action" : "fifty third"},
			{"spoken" : "fifty fourth","action" : "fifty fourth"},
			{"spoken" : "fifty fifth","action" : "fifty fifth"},
			{"spoken" : "fifty sixth","action" : "fifty sixth"},
			{"spoken" : "fifty seventh","action" : "fifty seventh"},
			{"spoken" : "fifty eighth","action" : "fifty eighth"},
			{"spoken" : "fifty ninth","action" : "fifty ninth"},
			{"spoken" : "sixtieth","action" : "sixtieth"},
			{"spoken" : "sixty first","action" : "sixty first"},
			{"spoken" : "sixty second","action" : "sixty second"},
			{"spoken" : "sixty third","action" : "sixty third"},
			{"spoken" : "sixty fourth","action" : "sixty fourth"},
			{"spoken" : "sixty fifth","action" : "sixty fifth"},
			{"spoken" : "sixty sixth","action" : "sixty sixth"},
			{"spoken" : "sixty seventh","action" : "sixty seventh"},
			{"spoken" : "sixty eighth","action" : "sixty eighth"},
			{"spoken" : "sixty ninth","action" : "sixty ninth"},
			{"spoken" : "seventieth","action" : "seventieth"},
			{"spoken" : "seventy first","action" : "seventy first"},
			{"spoken" : "seventy second","action" : "seventy second"},
			{"spoken" : "seventy third","action" : "seventy third"},
			{"spoken" : "seventy fourth","action" : "seventy fourth"},
			{"spoken" : "seventy fifth","action" : "seventy fifth"},
			{"spoken" : "seventy sixth","action" : "seventy sixth"},
			{"spoken" : "seventy seventh","action" : "seventy seventh"},
			{"spoken" : "seventy eighth","action" : "seventy eighth"},
			{"spoken" : "seventy ninth","action" : "seventy ninth"},
			{"spoken" : "eightieth","action" : "eightieth"},
			{"spoken" : "eighty first","action" : "eighty first"},
			{"spoken" : "eighty second","action" : "eighty second"},
			{"spoken" : "eighty third","action" : "eighty third"},
			{"spoken" : "eighty fourth","action" : "eighty fourth"},
			{"spoken" : "eighty fifth","action" : "eighty fifth"},
			{"spoken" : "eighty sixth","action" : "eighty sixth"},
			{"spoken" : "eighty seventh","action" : "eighty seventh"},
			{"spoken" : "eighty eighth","action" : "eighty eighth"},
			{"spoken" : "eighty ninth","action" : "eighty ninth"},
			{"spoken" : "ninetieth","action" : "ninetieth"},
			{"spoken" : "ninety first","action" : "ninety first"},
			{"spoken" : "ninety second","action" : "ninety second"},
			{"spoken" : "ninety third","action" : "ninety third"},
			{"spoken" : "ninety fourth","action" : "ninety fourth"},
			{"spoken" : "ninety fifth","action" : "ninety fifth"},
			{"spoken" : "ninety sixth","action" : "ninety sixth"},
			{"spoken" : "ninety seventh","action" : "ninety seventh"},
			{"spoken" : "ninety eighth","action" : "ninety eighth"},
			{"spoken" : "ninety ninth","action" : "ninety ninth"},

		],
		"user.ordinals_small list": [
			{"spoken" : "first","action" : "first"},
			{"spoken" : "second","action" : "second"},
			{"spoken" : "third","action" : "third"},
			{"spoken" : "fourth","action" : "fourth"},
			{"spoken" : "fifth","action" : "fifth"},
			{"spoken" : "sixth","action" : "sixth"},
			{"spoken" : "seventh","action" : "seventh"},
			{"spoken" : "eighth","action" : "eighth"},
			{"spoken" : "ninth","action" : "ninth"},
			{"spoken" : "tenth","action" : "tenth"},
			{"spoken" : "eleventh","action" : "eleventh"},
			{"spoken" : "twelfth","action" : "twelfth"},
			{"spoken" : "thirteenth","action" : "thirteenth"},
			{"spoken" : "fourteenth","action" : "fourteenth"},
			{"spoken" : "fifteenth","action" : "fifteenth"},
			{"spoken" : "sixteenth","action" : "sixteenth"},
			{"spoken" : "seventeenth","action" : "seventeenth"},
			{"spoken" : "eighteenth","action" : "eighteenth"},
			{"spoken" : "nineteenth","action" : "nineteenth"},
			{"spoken" : "twentieth","action" : "twentieth"},

		],
		"user.system_paths list": [
			{"spoken" : "user","action" : "C:\\Users\\devcs"},
			{"spoken" : "profile","action" : "C:\\Users\\devcs"},
			{"spoken" : "desktop","action" : "C:\\Users\\devcs\\OneDrive\\Desktop"},
			{"spoken" : "desk","action" : "C:\\Users\\devcs\\Desktop"},
			{"spoken" : "documents","action" : "C:\\Users\\devcs\\OneDrive\\Documents"},
			{"spoken" : "docks","action" : "C:\\Users\\devcs\\Documents"},
			{"spoken" : "downloads","action" : "C:\\Users\\devcs\\Downloads"},
			{"spoken" : "music","action" : "C:\\Users\\devcs\\Music"},
			{"spoken" : "pictures","action" : "C:\\Users\\devcs\\OneDrive\\Pictures"},
			{"spoken" : "videos","action" : "C:\\Users\\devcs\\Videos"},
			{"spoken" : "talon home","action" : "C:\\Users\\devcs\\AppData\\Roaming\\talon"},
			{"spoken" : "talon user","action" : "C:\\Users\\devcs\\AppData\\Roaming\\talon\\user"},
			{"spoken" : "one drive","action" : "C:\\Users\\devcs\\OneDrive"},

		],
		"user.vocabulary list": [
			{"spoken" : "N map","action" : "nmap"},
			{"spoken" : "under documented","action" : "under-documented"},
			{"spoken" : "nmap","action" : "nmap"},
			{"spoken" : "admin","action" : "admin"},
			{"spoken" : "Cisco","action" : "Cisco"},
			{"spoken" : "Citrix","action" : "Citrix"},
			{"spoken" : "VPN","action" : "VPN"},
			{"spoken" : "DNS","action" : "DNS"},
			{"spoken" : "Minecraft","action" : "Minecraft"},
			{"spoken" : "Guardian","action" : "Guardian"},

		],
		"user.website list": [
			{"spoken" : "amazon","action" : "https://www.amazon.com/"},
			{"spoken" : "dropbox","action" : "https://dropbox.com/"},
			{"spoken" : "google","action" : "https://www.google.com/"},
			{"spoken" : "google calendar","action" : "https://calendar.google.com"},
			{"spoken" : "google maps","action" : "https://maps.google.com/"},
			{"spoken" : "google scholar","action" : "https://scholar.google.com/"},
			{"spoken" : "gmail","action" : "https://mail.google.com/"},
			{"spoken" : "github","action" : "https://www.github.com"},
			{"spoken" : "gist","action" : "https://gist.github.com/"},
			{"spoken" : "wikipedia","action" : "https://en.wikipedia.org/"},
			{"spoken" : "youtube","action" : "https://www.youtube.com/"},

		],
		"user.search_engine list": [
			{"spoken" : "amazon","action" : "https://www.amazon.com/s/?field-keywords=%s"},
			{"spoken" : "google","action" : "https://www.google.com/search?q=%s"},
			{"spoken" : "map","action" : "https://maps.google.com/maps?q=%s"},
			{"spoken" : "scholar","action" : "https://scholar.google.com/scholar?q=%s"},
			{"spoken" : "wiki","action" : "https://en.wikipedia.org/w/index.php?search=%s"},

		],
		"user.window_snap_positions list": [
			{"spoken" : "left","action" : "left"},
			{"spoken" : "right","action" : "right"},
			{"spoken" : "top","action" : "top"},
			{"spoken" : "bottom","action" : "bottom"},
			{"spoken" : "center third","action" : "center third"},
			{"spoken" : "left third","action" : "left third"},
			{"spoken" : "right third","action" : "right third"},
			{"spoken" : "left two thirds","action" : "left two thirds"},
			{"spoken" : "right two thirds","action" : "right two thirds"},
			{"spoken" : "top left","action" : "top left"},
			{"spoken" : "top right","action" : "top right"},
			{"spoken" : "bottom left","action" : "bottom left"},
			{"spoken" : "bottom right","action" : "bottom right"},
			{"spoken" : "top left third","action" : "top left third"},
			{"spoken" : "top right third","action" : "top right third"},
			{"spoken" : "top left two thirds","action" : "top left two thirds"},
			{"spoken" : "top right two thirds","action" : "top right two thirds"},
			{"spoken" : "top center third","action" : "top center third"},
			{"spoken" : "bottom left third","action" : "bottom left third"},
			{"spoken" : "bottom right third","action" : "bottom right third"},
			{"spoken" : "bottom left two thirds","action" : "bottom left two thirds"},
			{"spoken" : "bottom right two thirds","action" : "bottom right two thirds"},
			{"spoken" : "bottom center third","action" : "bottom center third"},
			{"spoken" : "center","action" : "center"},
			{"spoken" : "full","action" : "full"},
			{"spoken" : "fullscreen","action" : "fullscreen"},

		],
		"user.css_unit list": [
			{"spoken" : "char","action" : "ch"},
			{"spoken" : "em","action" : "em"},
			{"spoken" : "rem","action" : "rem"},
			{"spoken" : "pixels","action" : "px"},
			{"spoken" : "points","action" : "pt"},
			{"spoken" : "view height","action" : "vh"},
			{"spoken" : "view width","action" : "vw"},
			{"spoken" : "degrees","action" : "deg"},
			{"spoken" : "radians","action" : "rad"},
			{"spoken" : "turn","action" : "turn"},
			{"spoken" : "seconds","action" : "s"},
			{"spoken" : "millis","action" : "ms"},
			{"spoken" : "dots per pixel","action" : "dppx"},
			{"spoken" : "fraction","action" : "fr"},

		],
		"user.css_at_rule list": [
			{"spoken" : "charset","action" : "charset"},
			{"spoken" : "import","action" : "import"},
			{"spoken" : "namespace","action" : "namespace"},
			{"spoken" : "media","action" : "media"},
			{"spoken" : "supports","action" : "supports"},
			{"spoken" : "page","action" : "page"},
			{"spoken" : "font-face","action" : "font-face"},
			{"spoken" : "keyframes","action" : "keyframes"},
			{"spoken" : "value","action" : "value"},

		],
		"user.css_global_value list": [
			{"spoken" : "initial","action" : "initial"},
			{"spoken" : "inherit","action" : "inherit"},
			{"spoken" : "unset","action" : "unset"},
			{"spoken" : "revert","action" : "revert"},

		],
		"user.markdown_code_block_language list": [
			{"spoken" : "typescript","action" : "typescript"},
			{"spoken" : "python","action" : "python"},
			{"spoken" : "code","action" : ""},

		],
		"user.code_function_modifier list": [
			{"spoken" : "pub","action" : "public"},
			{"spoken" : "pro","action" : "protected"},
			{"spoken" : "private","action" : "private"},
			{"spoken" : "static","action" : "static"},

		],
		"user.navigation_action list": [
			{"spoken" : "move","action" : "GO"},
			{"spoken" : "extend","action" : "EXTEND"},
			{"spoken" : "select","action" : "SELECT"},
			{"spoken" : "clear","action" : "DELETE"},
			{"spoken" : "cut","action" : "CUT"},
			{"spoken" : "copy","action" : "COPY"},

		],
		"user.before_or_after list": [
			{"spoken" : "before","action" : "BEFORE"},
			{"spoken" : "after","action" : "AFTER"},

		],
		"user.navigation_target_name list": [
			{"spoken" : "word","action" : "\\w+"},
			{"spoken" : "small","action" : "[A-Z]?[a-z0-9]+"},
			{"spoken" : "big","action" : "[\\S]+"},
			{"spoken" : "parens","action" : "\\((.*?)\\)"},
			{"spoken" : "squares","action" : "\\[(.*?)\\]"},
			{"spoken" : "braces","action" : "\\{(.*?)\\}"},
			{"spoken" : "quotes","action" : "\\\"(.*?)\\\""},
			{"spoken" : "angles","action" : "\\<(.*?)\\>"},
			{"spoken" : "all","action" : "(.+)"},
			{"spoken" : "method","action" : "\\w+\\((.*?)\\)"},
			{"spoken" : "constant","action" : "[A-Z_][A-Z_]+"},

		],
		"user.maths_fractions list": [
			{"spoken" : "half","action" : "2"},
			{"spoken" : "halve","action" : "2"},
			{"spoken" : "third","action" : "3"},
			{"spoken" : "quarter","action" : "4"},
			{"spoken" : "fourth","action" : "4"},
			{"spoken" : "fifth","action" : "5"},
			{"spoken" : "sixth","action" : "6"},
			{"spoken" : "seventh","action" : "7"},
			{"spoken" : "eighth","action" : "8"},
			{"spoken" : "ninth","action" : "9"},
			{"spoken" : "tenth","action" : "10"},
			{"spoken" : "halfs","action" : "2"},
			{"spoken" : "halves","action" : "2"},
			{"spoken" : "thirds","action" : "3"},
			{"spoken" : "quarters","action" : "4"},
			{"spoken" : "fourths","action" : "4"},
			{"spoken" : "fifths","action" : "5"},
			{"spoken" : "sixths","action" : "6"},
			{"spoken" : "sevenths","action" : "7"},
			{"spoken" : "eighths","action" : "8"},
			{"spoken" : "ninths","action" : "9"},
			{"spoken" : "tenths","action" : "10"},

		],
		"user.tex_symbols list": [
			{"spoken" : "product","action" : "prod"},
			{"spoken" : "integral","action" : "int"},
			{"spoken" : "double integral","action" : "iint"},
			{"spoken" : "triple integral","action" : "iiint"},
			{"spoken" : "times","action" : "times"},
			{"spoken" : "divide","action" : "div"},
			{"spoken" : "C dot","action" : "cdot"},
			{"spoken" : "plus or minus","action" : "pm"},
			{"spoken" : "partial","action" : "partial"},
			{"spoken" : "infinity","action" : "infty"},
			{"spoken" : "vector nabla","action" : "nabla"},
			{"spoken" : "accent hat","action" : "hat"},
			{"spoken" : "accent tilde","action" : "tilde"},
			{"spoken" : "accent dot","action" : "dot"},
			{"spoken" : "accent double dot","action" : "ddot"},
			{"spoken" : "accent bar","action" : "bar"},
			{"spoken" : "accent vector","action" : "vec"},
			{"spoken" : "sine","action" : "sin"},
			{"spoken" : "cosine","action" : "cos"},
			{"spoken" : "tangent","action" : "tan"},
			{"spoken" : "secant","action" : "sec"},
			{"spoken" : "cosecant","action" : "csc"},
			{"spoken" : "cotangent","action" : "cot"},
			{"spoken" : "arc sine","action" : "arcsin"},
			{"spoken" : "arc cosine","action" : "arccos"},
			{"spoken" : "arc tan","action" : "arctan"},
			{"spoken" : "hyperbolic sine","action" : "sinh"},
			{"spoken" : "hyperbolic cosine","action" : "cosh"},
			{"spoken" : "hyperbolic cotangent","action" : "coth"},
			{"spoken" : "hyperbolic tangent","action" : "tanh"},
			{"spoken" : "argument","action" : "arg"},
			{"spoken" : "degree","action" : "deg"},
			{"spoken" : "determinant","action" : "det"},
			{"spoken" : "dimension","action" : "dim"},
			{"spoken" : "natural log","action" : "ln"},
			{"spoken" : "logarithm","action" : "log"},
			{"spoken" : "maximum","action" : "max"},
			{"spoken" : "minimum","action" : "min"},
			{"spoken" : "modulus","action" : "bmod"},
			{"spoken" : "infimum","action" : "inf"},
			{"spoken" : "supremum","action" : "sup"},
			{"spoken" : "probability","action" : "Pr"},
			{"spoken" : "not equal to","action" : "neq"},
			{"spoken" : "greater than or equal to","action" : "geq"},
			{"spoken" : "less than or equal to","action" : "leq"},
			{"spoken" : "approximately equal to","action" : "approx"},
			{"spoken" : "proportional to","action" : "propto"},
			{"spoken" : "preference less than","action" : "prec"},
			{"spoken" : "preference less equals","action" : "preceq"},
			{"spoken" : "preference greater than","action" : "succ"},
			{"spoken" : "preference greater equal","action" : "succeq"},
			{"spoken" : "logic and","action" : "land"},
			{"spoken" : "logic or","action" : "lor"},
			{"spoken" : "logic not","action" : "lnot"},
			{"spoken" : "logic exists","action" : "exists"},
			{"spoken" : "logic member","action" : "in"},
			{"spoken" : "logic for all","action" : "forall"},
			{"spoken" : "left arrow","action" : "leftarrow"},
			{"spoken" : "right arrow","action" : "rightarrow"},
			{"spoken" : "up arrow","action" : "uparrow"},
			{"spoken" : "down arrow","action" : "downarrow"},
			{"spoken" : "left right arrow","action" : "leftrightarrow"},
			{"spoken" : "maps to","action" : "mapsto"},
			{"spoken" : "oh plus","action" : "oplus"},
			{"spoken" : "oh times","action" : "otimes"},
			{"spoken" : "big oh plus","action" : "bigoplus"},
			{"spoken" : "big oh times","action" : "bigotimes"},
			{"spoken" : "dot dot dot","action" : "dots"},
			{"spoken" : "diagonal dots","action" : "ddots"},
			{"spoken" : "horizontal dots","action" : "cdots"},
			{"spoken" : "vertical dots","action" : "vdots"},
			{"spoken" : "empty set","action" : "emptyset"},
			{"spoken" : "subset","action" : "subset"},
			{"spoken" : "superset","action" : "supset"},
			{"spoken" : "strict subset","action" : "subsetneq"},
			{"spoken" : "strict superset","action" : "supsetneq"},
			{"spoken" : "intersection","action" : "cap"},
			{"spoken" : "union","action" : "cup"},

		],
		"user.talon_hud_widget_enabled_voice_commands list": [
			{"spoken" : "widget settings","action" : "widget settings"},
			{"spoken" : "letters and keys","action" : "letters and keys"},
			{"spoken" : "text formatting","action" : "text formatting"},
			{"spoken" : "talon draft window","action" : "talon draft window"},
			{"spoken" : "browser usage","action" : "browser usage"},

		],
		"user.talon_hud_numerical_choices list": [

		],
		"user.talon_hud_widget_names list": [
			{"spoken" : "status bar","action" : "status_bar"},
			{"spoken" : "event log","action" : "event_log"},
			{"spoken" : "text panel","action" : "Text panel"},
			{"spoken" : "list inspection","action" : "Text panel"},
			{"spoken" : "documentation","action" : "Documentation"},
			{"spoken" : "documentation panel","action" : "Documentation"},
			{"spoken" : "choices","action" : "Choices"},
			{"spoken" : "toolkit options","action" : "Choices"},
			{"spoken" : "ability bar","action" : "ability_bar"},
			{"spoken" : "walkthrough","action" : "walkthrough"},
			{"spoken" : "context menu","action" : "context_menu"},
			{"spoken" : "cursor tracker","action" : "cursor_tracker"},
			{"spoken" : "screen overlay","action" : "screen_overlay"},

		],
		"user.talon_hud_choices list": [
			{"spoken" : "head up choice empty command","action" : "|"},

		],
		"user.talon_hud_quick_choices list": [
			{"spoken" : "status bar content toolkit","action" : "status_bar|0"},
			{"spoken" : "status bar remove mode indicator","action" : "status_bar|1"},
			{"spoken" : "status bar remove microphone","action" : "status_bar|2"},
			{"spoken" : "status bar add language","action" : "status_bar|3"},
			{"spoken" : "status bar remove code language","action" : "status_bar|4"},
			{"spoken" : "status bar add focus indicator","action" : "status_bar|5"},
			{"spoken" : "event log keep alive","action" : "event_log|0"},
			{"spoken" : "event log clear logs","action" : "event_log|1"},
			{"spoken" : "text panel copy contents","action" : "Text panel|0"},
			{"spoken" : "list inspection copy contents","action" : "Text panel|0"},
			{"spoken" : "documentation copy contents","action" : "Documentation|0"},
			{"spoken" : "documentation panel copy contents","action" : "Documentation|0"},
			{"spoken" : "walkthrough skip this step","action" : "walkthrough|0"},
			{"spoken" : "walkthrough mark as done","action" : "walkthrough|1"},
			{"spoken" : "walkthrough restore current step","action" : "walkthrough|2"},
			{"spoken" : "context menu content toolkit","action" : "context_menu|0"},
			{"spoken" : "context menu remove mode indicator","action" : "context_menu|1"},
			{"spoken" : "context menu remove microphone","action" : "context_menu|2"},
			{"spoken" : "context menu add language","action" : "context_menu|3"},
			{"spoken" : "context menu remove code language","action" : "context_menu|4"},
			{"spoken" : "context menu add focus indicator","action" : "context_menu|5"},
			{"spoken" : "context menu close panel","action" : "context_menu|6"},
			{"spoken" : "context menu dismiss options","action" : "context_menu|7"},

		],
		"user.talon_hud_themes list": [
			{"spoken" : "dark","action" : "dark"},
			{"spoken" : "light","action" : "light"},

		],
		"user.mg_point_of_compass list": [
			{"spoken" : "east","action" : "east"},
			{"spoken" : "east south east","action" : "east south east"},
			{"spoken" : "south east","action" : "south east"},
			{"spoken" : "south south east","action" : "south south east"},
			{"spoken" : "south","action" : "south"},
			{"spoken" : "south south west","action" : "south south west"},
			{"spoken" : "south west","action" : "south west"},
			{"spoken" : "west south west","action" : "west south west"},
			{"spoken" : "west","action" : "west"},
			{"spoken" : "west north west","action" : "west north west"},
			{"spoken" : "north west","action" : "north west"},
			{"spoken" : "north north west","action" : "north north west"},
			{"spoken" : "north","action" : "north"},
			{"spoken" : "north north east","action" : "north north east"},
			{"spoken" : "north east","action" : "north east"},
			{"spoken" : "east north east","action" : "east north east"},

		],
		"user.code_common_function list": [
			{"spoken" : "enumerate","action" : "enumerate"},
			{"spoken" : "integer","action" : "int"},
			{"spoken" : "length","action" : "len"},
			{"spoken" : "list","action" : "list"},
			{"spoken" : "print","action" : "print"},
			{"spoken" : "range","action" : "range"},
			{"spoken" : "set","action" : "set"},
			{"spoken" : "split","action" : "split"},
			{"spoken" : "string","action" : "str"},
			{"spoken" : "update","action" : "update"},

		],
		"user.python_docstring_fields list": [
			{"spoken" : "class","action" : ":class:"},
			{"spoken" : "function","action" : ":func:"},
			{"spoken" : "parameter","action" : ":param:"},
			{"spoken" : "raise","action" : ":raise:"},
			{"spoken" : "returns","action" : ":return:"},
			{"spoken" : "type","action" : ":type:"},
			{"spoken" : "return type","action" : ":rtype:"},
			{"spoken" : "see also","action" : ".. seealso:: "},
			{"spoken" : "notes","action" : ".. notes:: "},
			{"spoken" : "warning","action" : ".. warning:: "},
			{"spoken" : "todo","action" : ".. todo:: "},

		],
		"user.code_type list": [
			{"spoken" : "boolean","action" : "bool"},
			{"spoken" : "integer","action" : "int"},
			{"spoken" : "string","action" : "str"},
			{"spoken" : "none","action" : "None"},
			{"spoken" : "dick","action" : "Dict"},
			{"spoken" : "float","action" : "float"},
			{"spoken" : "any","action" : "Any"},
			{"spoken" : "tuple","action" : "Tuple"},
			{"spoken" : "union","action" : "UnionAny"},
			{"spoken" : "iterable","action" : "Iterable"},
			{"spoken" : "vector","action" : "Vector"},
			{"spoken" : "bytes","action" : "bytes"},
			{"spoken" : "sequence","action" : "Sequence"},
			{"spoken" : "callable","action" : "Callable"},
			{"spoken" : "list","action" : "List"},
			{"spoken" : "no return","action" : "NoReturn"},

		],
		"user.code_keyword list": [
			{"spoken" : "break","action" : "break"},
			{"spoken" : "continue","action" : "continue"},
			{"spoken" : "class","action" : "class "},
			{"spoken" : "return","action" : "return "},
			{"spoken" : "import","action" : "import "},
			{"spoken" : "null","action" : "None"},
			{"spoken" : "none","action" : "None"},
			{"spoken" : "true","action" : "True"},
			{"spoken" : "false","action" : "False"},
			{"spoken" : "yield","action" : "yield "},
			{"spoken" : "from","action" : "from "},

		],
		"user.python_exception list": [
			{"spoken" : "base exception","action" : "BaseException"},
			{"spoken" : "system exit","action" : "SystemExit"},
			{"spoken" : "keyboard interrupt","action" : "KeyboardInterrupt"},
			{"spoken" : "generator exit","action" : "GeneratorExit"},
			{"spoken" : "exception","action" : "Exception"},
			{"spoken" : "stop iteration","action" : "StopIteration"},
			{"spoken" : "stop async iteration","action" : "StopAsyncIteration"},
			{"spoken" : "arithmetic error","action" : "ArithmeticError"},
			{"spoken" : "floating point error","action" : "FloatingPointError"},
			{"spoken" : "overflow error","action" : "OverflowError"},
			{"spoken" : "zero division error","action" : "ZeroDivisionError"},
			{"spoken" : "assertion error","action" : "AssertionError"},
			{"spoken" : "attribute error","action" : "AttributeError"},
			{"spoken" : "buffer error","action" : "BufferError"},
			{"spoken" : "e o f error","action" : "EOFError"},
			{"spoken" : "import error","action" : "ImportError"},
			{"spoken" : "module not found error","action" : "ModuleNotFoundError"},
			{"spoken" : "lookup error","action" : "LookupError"},
			{"spoken" : "index error","action" : "IndexError"},
			{"spoken" : "key error","action" : "KeyError"},
			{"spoken" : "memory error","action" : "MemoryError"},
			{"spoken" : "name error","action" : "NameError"},
			{"spoken" : "unbound local error","action" : "UnboundLocalError"},
			{"spoken" : "o s error","action" : "OSError"},
			{"spoken" : "blocking i o error","action" : "BlockingIOError"},
			{"spoken" : "child process error","action" : "ChildProcessError"},
			{"spoken" : "connection error","action" : "ConnectionError"},
			{"spoken" : "broken pipe error","action" : "BrokenPipeError"},
			{"spoken" : "connection aborted error","action" : "ConnectionAbortedError"},
			{"spoken" : "connection refused error","action" : "ConnectionRefusedError"},
			{"spoken" : "connection reset error","action" : "ConnectionResetError"},
			{"spoken" : "file exists error","action" : "FileExistsError"},
			{"spoken" : "file not found error","action" : "FileNotFoundError"},
			{"spoken" : "interrupted error","action" : "InterruptedError"},
			{"spoken" : "is a directory error","action" : "IsADirectoryError"},
			{"spoken" : "not a directory error","action" : "NotADirectoryError"},
			{"spoken" : "permission error","action" : "PermissionError"},
			{"spoken" : "process lookup error","action" : "ProcessLookupError"},
			{"spoken" : "timeout error","action" : "TimeoutError"},
			{"spoken" : "reference error","action" : "ReferenceError"},
			{"spoken" : "runtime error","action" : "RuntimeError"},
			{"spoken" : "not implemented error","action" : "NotImplementedError"},
			{"spoken" : "recursion error","action" : "RecursionError"},
			{"spoken" : "syntax error","action" : "SyntaxError"},
			{"spoken" : "indentation error","action" : "IndentationError"},
			{"spoken" : "tab error","action" : "TabError"},
			{"spoken" : "system error","action" : "SystemError"},
			{"spoken" : "type error","action" : "TypeError"},
			{"spoken" : "value error","action" : "ValueError"},
			{"spoken" : "unicode error","action" : "UnicodeError"},
			{"spoken" : "unicode decode error","action" : "UnicodeDecodeError"},
			{"spoken" : "unicode encode error","action" : "UnicodeEncodeError"},
			{"spoken" : "unicode translate error","action" : "UnicodeTranslateError"},
			{"spoken" : "warning","action" : "Warning"},
			{"spoken" : "deprecation warning","action" : "DeprecationWarning"},
			{"spoken" : "pending deprecation warning","action" : "PendingDeprecationWarning"},
			{"spoken" : "runtime warning","action" : "RuntimeWarning"},
			{"spoken" : "syntax warning","action" : "SyntaxWarning"},
			{"spoken" : "user warning","action" : "UserWarning"},
			{"spoken" : "future warning","action" : "FutureWarning"},
			{"spoken" : "import warning","action" : "ImportWarning"},
			{"spoken" : "unicode warning","action" : "UnicodeWarning"},
			{"spoken" : "bytes warning","action" : "BytesWarning"},
			{"spoken" : "resource warning","action" : "ResourceWarning"},

		],
		"user.snippets list": [
			{"spoken" : "class funky","action" : "def(class method)"},
			{"spoken" : "class static funky","action" : "def(class static method)"},
			{"spoken" : "class","action" : "class"},
			{"spoken" : "else if","action" : "elif"},
			{"spoken" : "for","action" : "for"},
			{"spoken" : "funky","action" : "def"},
			{"spoken" : "if else","action" : "if/else"},
			{"spoken" : "if","action" : "if"},
			{"spoken" : "lambda","action" : "lambda"},
			{"spoken" : "try except","action" : "try/except"},
			{"spoken" : "while","action" : "while"},
			{"spoken" : "with","action" : "with"},

		],
		"user.cursorless_custom_action list": [

		],
		"user.cursorless_paired_delimiter list": [

		],
		"user.cursorless_hat_shape list": [

		],
		"user.cursorless_to_raw_selection list": [

		],
		"user.cursorless_wrapper_snippet list": [

		],
		"user.cursorless_insertion_snippet_no_phrase list": [

		],
		"user.cursorless_insertion_snippet_single_phrase list": [

		],
		"user.cursorless_phrase_terminator list": [

		],
		"user.kubectl_action list": [

		],
		"user.kubectl_object list": [

		],
		"user.registers list": [

		],
		"user.mouse_button list": [

		],
		"user.emoticon list": [

		],
		"user.emoji list": [

		],
		"user.kaomoji list": [

		],
		"user.c_pointers list": [

		],
		"user.c_signed list": [

		],
		"user.c_keywords list": [

		],
		"user.c_types list": [

		],
		"user.stdint_types list": [

		],
		"user.stdint_signed list": [

		],
		"user.java_boxed_type list": [

		],
		"user.java_common_class list": [

		],
		"user.java_generic_data_structure list": [

		],
		"user.java_modifier list": [

		],
		"user.code_common_member_function list": [

		],
		"user.code_type_modifier list": [

		],
		"user.code_macros list": [

		],
		"user.code_trait list": [

		],
		"user.scala_modifier list": [

		],
		"user.scala_keyword list": [

		],
		"user.code_parameter_name list": [

		],
		"user.code_libraries list": [

		],
		"user.talon_actions list": [

		],
		"user.talon_lists list": [

		],
		"user.talon_captures list": [

		],
		"user.talon_apps list": [

		],
		"user.talon_tags list": [

		],
		"user.talon_modes list": [

		],
		"user.talon_settings list": [

		],
		"user.talon_scopes list": [

		],
		"user.terraform_common_property list": [

		],
		"user.terraform_module_block list": [

		],
		"user.vimscript_functions list": [

		],
		"user.vimscript_scope list": [

		],
		"user.tex_document_classes list": [

		],
		"user.tex_packages list": [

		],
		"user.tex_environments list": [

		],
		"user.tex_commands list": [

		],
		"user.tex_commands_noarg list": [

		],
		"user.tex_templates list": [

		],
		"user.greek_letters list": [

		],
		"user.rango_hint_styles list": [

		],
		"user.rango_hint_weights list": [

		],
		"user.rango_hints_toggle_levels list": [

		],
		"user.rango_page_location_property list": [

		],
		"user.talon_hud_widget_options list": [

		],

},
	"talon-captures" : {
		"user.cursorless_primitive_target capture": [
			{"spoken" : "user.cursorless_primitive_target","action" : "CaptureImpl(\"user.cursorless-primitive-target\", Rule(\" <a href=\"#user-cursorless-modifier-capture\"> &lt;user.cursorless-modifier&gt; </a> + [ <a href=\"#user-cursorless-mark-capture\"> &lt;user.cursorless-mark&gt; </a> ]  |   <a href=\"#user-cursorless-mark-capture\"> &lt;user.cursorless-mark&gt; </a> \"))"},

		],
		"user.cursorless_action_or_vscode_command capture": [
			{"spoken" : "user.cursorless_action_or_vscode_command","action" : "CaptureImpl(\"user.cursorless-action-or-vscode-command\", Rule(\"<a href=\"#user-cursorless-simple-action-list\">  {user.cursorless-simple-action}  </a>  | <a href=\"#user-cursorless-makeshift-action-list\">  {user.cursorless-makeshift-action}  </a>  | <a href=\"#user-cursorless-callback-action-list\">  {user.cursorless-callback-action}  </a>  | <a href=\"#user-cursorless-custom-action-list\">  {user.cursorless-custom-action}  </a>\"))"},

		],
		"user.cursorless_move_bring_targets capture": [
			{"spoken" : "user.cursorless_move_bring_targets","action" : "CaptureImpl(\"user.cursorless-move-bring-targets\", Rule(\" <a href=\"#user-cursorless-target-capture\"> &lt;user.cursorless-target&gt; </a>  [ <a href=\"#user-cursorless-positional-target-capture\"> &lt;user.cursorless-positional-target&gt; </a> ]\"))"},

		],
		"user.cursorless_swap_targets capture": [
			{"spoken" : "user.cursorless_swap_targets","action" : "CaptureImpl(\"user.cursorless-swap-targets\", Rule(\"[ <a href=\"#user-cursorless-target-capture\"> &lt;user.cursorless-target&gt; </a> ] <a href=\"#user-cursorless-swap-connective-list\">  {user.cursorless-swap-connective}  </a>  <a href=\"#user-cursorless-target-capture\"> &lt;user.cursorless-target&gt; </a> \"))"},

		],
		"user.cursorless_wrapper_paired_delimiter capture": [
			{"spoken" : "user.cursorless_wrapper_paired_delimiter","action" : "CaptureImpl(\"user.cursorless-wrapper-paired-delimiter\", Rule(\"<a href=\"#user-cursorless-wrapper-only-paired-delimiter-list\">  {user.cursorless-wrapper-only-paired-delimiter}  </a>  | <a href=\"#user-cursorless-wrapper-selectable-paired-delimiter-list\">  {user.cursorless-wrapper-selectable-paired-delimiter}  </a>\"))"},

		],
		"user.cursorless_selectable_paired_delimiter capture": [
			{"spoken" : "user.cursorless_selectable_paired_delimiter","action" : "CaptureImpl(\"user.cursorless-selectable-paired-delimiter\", Rule(\"<a href=\"#user-cursorless-selectable-only-paired-delimiter-list\">  {user.cursorless-selectable-only-paired-delimiter}  </a>  | <a href=\"#user-cursorless-wrapper-selectable-paired-delimiter-list\">  {user.cursorless-wrapper-selectable-paired-delimiter}  </a>\"))"},

		],
		"user.cursorless_wrapper capture": [
			{"spoken" : "user.cursorless_wrapper","action" : "CaptureImpl(\"user.cursorless-wrapper\", Rule(\" <a href=\"#user-cursorless-wrapper-paired-delimiter-capture\"> &lt;user.cursorless-wrapper-paired-delimiter&gt; </a>   |  <a href=\"#user-cursorless-wrapper-snippet-list\">  {user.cursorless-wrapper-snippet}  </a>\"))"},

		],
		"user.cursorless_range_connective_with_type capture": [
			{"spoken" : "user.cursorless_range_connective_with_type","action" : "CaptureImpl(\"user.cursorless-range-connective-with-type\", Rule(\"[ <a href=\"#user-cursorless-range-type-capture\"> &lt;user.cursorless-range-type&gt; </a> ] <a href=\"#user-cursorless-range-connective-list\">  {user.cursorless-range-connective}  </a>  |   <a href=\"#user-cursorless-range-type-capture\"> &lt;user.cursorless-range-type&gt; </a> \"))"},

		],
		"user.cursorless_range capture": [
			{"spoken" : "user.cursorless_range","action" : "CaptureImpl(\"user.cursorless-range\", Rule(\" <a href=\"#user-cursorless-primitive-target-capture\"> &lt;user.cursorless-primitive-target&gt; </a>   |   <a href=\"#user-cursorless-range-connective-with-type-capture\"> &lt;user.cursorless-range-connective-with-type&gt; </a>   <a href=\"#user-cursorless-primitive-target-capture\"> &lt;user.cursorless-primitive-target&gt; </a>   |   <a href=\"#user-cursorless-primitive-target-capture\"> &lt;user.cursorless-primitive-target&gt; </a>   <a href=\"#user-cursorless-range-connective-with-type-capture\"> &lt;user.cursorless-range-connective-with-type&gt; </a>   <a href=\"#user-cursorless-primitive-target-capture\"> &lt;user.cursorless-primitive-target&gt; </a> \"))"},

		],
		"user.cursorless_target capture": [
			{"spoken" : "user.cursorless_target","action" : "CaptureImpl(\"user.cursorless-target\", Rule(\" <a href=\"#user-cursorless-range-capture\"> &lt;user.cursorless-range&gt; </a>  (<a href=\"#user-cursorless-list-connective-list\">  {user.cursorless-list-connective}  </a>  <a href=\"#user-cursorless-range-capture\"> &lt;user.cursorless-range&gt; </a> )*\"))"},

		],
		"user.cursorless_line_number capture": [
			{"spoken" : "user.cursorless_line_number","action" : "CaptureImpl(\"user.cursorless-line-number\", Rule(\"<a href=\"#user-cursorless-line-direction-list\">  {user.cursorless-line-direction}  </a>  &lt;number-small&gt;  \"))"},

		],
		"user.cursorless_decorated_symbol capture": [
			{"spoken" : "user.cursorless_decorated_symbol","action" : "CaptureImpl(\"user.cursorless-decorated-symbol\", Rule(\"[<a href=\"#user-cursorless-hat-color-list\">  {user.cursorless-hat-color}  </a>] [<a href=\"#user-cursorless-hat-shape-list\">  {user.cursorless-hat-shape}  </a>]  <a href=\"#user-any-alphanumeric-key-capture\"> &lt;user.any-alphanumeric-key&gt; </a> \"))"},

		],
		"user.cursorless_mark capture": [
			{"spoken" : "user.cursorless_mark","action" : "CaptureImpl(\"user.cursorless-mark\", Rule(\" <a href=\"#user-cursorless-decorated-symbol-capture\"> &lt;user.cursorless-decorated-symbol&gt; </a>   |  <a href=\"#user-cursorless-special-mark-list\">  {user.cursorless-special-mark}  </a>  |  <a href=\"#user-cursorless-line-number-capture\"> &lt;user.cursorless-line-number&gt; </a> \"))"},

		],
		"user.cursorless_containing_scope capture": [
			{"spoken" : "user.cursorless_containing_scope","action" : "CaptureImpl(\"user.cursorless-containing-scope\", Rule(\"[every] <a href=\"#user-cursorless-scope-type-list\">  {user.cursorless-scope-type}  </a>\"))"},

		],
		"user.cursorless_head_tail_modifier capture": [
			{"spoken" : "user.cursorless_head_tail_modifier","action" : "CaptureImpl(\"user.cursorless-head-tail-modifier\", Rule(\"<a href=\"#user-cursorless-head-tail-modifier-list\">  {user.cursorless-head-tail-modifier}  </a> [ <a href=\"#user-cursorless-interior-modifier-capture\"> &lt;user.cursorless-interior-modifier&gt; </a> ] [ <a href=\"#user-cursorless-head-tail-swallowed-modifier-capture\"> &lt;user.cursorless-head-tail-swallowed-modifier&gt; </a> ]\"))"},

		],
		"user.cursorless_interior_modifier capture": [
			{"spoken" : "user.cursorless_interior_modifier","action" : "CaptureImpl(\"user.cursorless-interior-modifier\", Rule(\"<a href=\"#user-cursorless-interior-modifier-list\">  {user.cursorless-interior-modifier}  </a>\"))"},

		],
		"user.cursorless_matching_paired_delimiter capture": [
			{"spoken" : "user.cursorless_matching_paired_delimiter","action" : "CaptureImpl(\"user.cursorless-matching-paired-delimiter\", Rule(\"matching\"))"},

		],
		"user.cursorless_range_type capture": [
			{"spoken" : "user.cursorless_range_type","action" : "CaptureImpl(\"user.cursorless-range-type\", Rule(\"<a href=\"#user-cursorless-range-type-list\">  {user.cursorless-range-type}  </a>\"))"},

		],
		"user.cursorless_simple_modifier capture": [
			{"spoken" : "user.cursorless_simple_modifier","action" : "CaptureImpl(\"user.cursorless-simple-modifier\", Rule(\"<a href=\"#user-cursorless-simple-modifier-list\">  {user.cursorless-simple-modifier}  </a>\"))"},

		],
		"user.cursorless_modifier capture": [
			{"spoken" : "user.cursorless_modifier","action" : "CaptureImpl(\"user.cursorless-modifier\", Rule(\" <a href=\"#user-cursorless-position-capture\"> &lt;user.cursorless-position&gt; </a>  |  <a href=\"#user-cursorless-interior-modifier-capture\"> &lt;user.cursorless-interior-modifier&gt; </a>  |  <a href=\"#user-cursorless-head-tail-modifier-capture\"> &lt;user.cursorless-head-tail-modifier&gt; </a>  |  <a href=\"#user-cursorless-simple-modifier-capture\"> &lt;user.cursorless-simple-modifier&gt; </a>  |  <a href=\"#user-cursorless-containing-scope-capture\"> &lt;user.cursorless-containing-scope&gt; </a>  |  <a href=\"#user-cursorless-subtoken-scope-capture\"> &lt;user.cursorless-subtoken-scope&gt; </a>  |  <a href=\"#user-cursorless-surrounding-pair-capture\"> &lt;user.cursorless-surrounding-pair&gt; </a> \"))"},

		],
		"user.cursorless_head_tail_swallowed_modifier capture": [
			{"spoken" : "user.cursorless_head_tail_swallowed_modifier","action" : "CaptureImpl(\"user.cursorless-head-tail-swallowed-modifier\", Rule(\" <a href=\"#user-cursorless-simple-modifier-capture\"> &lt;user.cursorless-simple-modifier&gt; </a>  |  <a href=\"#user-cursorless-containing-scope-capture\"> &lt;user.cursorless-containing-scope&gt; </a>  |  <a href=\"#user-cursorless-subtoken-scope-capture\"> &lt;user.cursorless-subtoken-scope&gt; </a>  |  <a href=\"#user-cursorless-surrounding-pair-capture\"> &lt;user.cursorless-surrounding-pair&gt; </a> \"))"},

		],
		"user.cursorless_position capture": [
			{"spoken" : "user.cursorless_position","action" : "CaptureImpl(\"user.cursorless-position\", Rule(\"<a href=\"#user-cursorless-position-list\">  {user.cursorless-position}  </a>\"))"},

		],
		"user.ordinal_or_last capture": [
			{"spoken" : "user.ordinal_or_last","action" : "CaptureImpl(\"user.ordinal-or-last\", Rule(\" <a href=\"#user-ordinals-small-capture\"> &lt;user.ordinals-small&gt; </a>   |  last\"))"},

		],
		"user.cursorless_ordinal_range capture": [
			{"spoken" : "user.cursorless_ordinal_range","action" : "CaptureImpl(\"user.cursorless-ordinal-range\", Rule(\" <a href=\"#user-ordinal-or-last-capture\"> &lt;user.ordinal-or-last&gt; </a>  [<a href=\"#user-cursorless-range-connective-list\">  {user.cursorless-range-connective}  </a>  <a href=\"#user-ordinal-or-last-capture\"> &lt;user.ordinal-or-last&gt; </a> ]\"))"},

		],
		"user.cursorless_first_last_range capture": [
			{"spoken" : "user.cursorless_first_last_range","action" : "CaptureImpl(\"user.cursorless-first-last-range\", Rule(\"(first  |  last)  &lt;number-small&gt;  \"))"},

		],
		"user.cursorless_subtoken_scope capture": [
			{"spoken" : "user.cursorless_subtoken_scope","action" : "CaptureImpl(\"user.cursorless-subtoken-scope\", Rule(\"( <a href=\"#user-cursorless-ordinal-range-capture\"> &lt;user.cursorless-ordinal-range&gt; </a>   |   <a href=\"#user-cursorless-first-last-range-capture\"> &lt;user.cursorless-first-last-range&gt; </a> ) <a href=\"#user-cursorless-subtoken-scope-type-list\">  {user.cursorless-subtoken-scope-type}  </a>\"))"},

		],
		"user.cursorless_surrounding_pair_scope_type capture": [
			{"spoken" : "user.cursorless_surrounding_pair_scope_type","action" : "CaptureImpl(\"user.cursorless-surrounding-pair-scope-type\", Rule(\" <a href=\"#user-cursorless-selectable-paired-delimiter-capture\"> &lt;user.cursorless-selectable-paired-delimiter&gt; </a>   | <a href=\"#user-cursorless-surrounding-pair-scope-type-list\">  {user.cursorless-surrounding-pair-scope-type}  </a>\"))"},

		],
		"user.cursorless_surrounding_pair capture": [
			{"spoken" : "user.cursorless_surrounding_pair","action" : "CaptureImpl(\"user.cursorless-surrounding-pair\", Rule(\"[<a href=\"#user-cursorless-delimiter-force-direction-list\">  {user.cursorless-delimiter-force-direction}  </a>]  <a href=\"#user-cursorless-surrounding-pair-scope-type-capture\"> &lt;user.cursorless-surrounding-pair-scope-type&gt; </a> \"))"},

		],
		"user.cursorless_to_raw_selection capture": [
			{"spoken" : "user.cursorless_to_raw_selection","action" : "CaptureImpl(\"user.cursorless-to-raw-selection\", Rule(\"<a href=\"#user-cursorless-to-raw-selection-list\">  {user.cursorless-to-raw-selection}  </a>\"))"},

		],
		"user.cursorless_positional_target capture": [
			{"spoken" : "user.cursorless_positional_target","action" : "CaptureImpl(\"user.cursorless-positional-target\", Rule(\"(<a href=\"#user-cursorless-position-list\">  {user.cursorless-position}  </a>  |  <a href=\"#user-cursorless-source-destination-connective-list\">  {user.cursorless-source-destination-connective}  </a>)  <a href=\"#user-cursorless-target-capture\"> &lt;user.cursorless-target&gt; </a> \"))"},

		],
		"user.cursorless_insertion_snippet capture": [
			{"spoken" : "user.cursorless_insertion_snippet","action" : "CaptureImpl(\"user.cursorless-insertion-snippet\", Rule(\"<a href=\"#user-cursorless-insertion-snippet-no-phrase-list\">  {user.cursorless-insertion-snippet-no-phrase}  </a>  |  <a href=\"#user-cursorless-insertion-snippet-single-phrase-list\">  {user.cursorless-insertion-snippet-single-phrase}  </a>\"))"},

		],
		"user.windows_dlls capture": [
			{"spoken" : "user.windows_dlls","action" : "CaptureImpl(\"user.windows-dlls\", Rule(\"<a href=\"#user-windows-dlls-list\">  {self.windows-dlls}  </a>\"))"},

		],
		"user.modifiers capture": [
			{"spoken" : "user.modifiers","action" : "CaptureImpl(\"user.modifiers\", Rule(\"<a href=\"#user-modifier-key-list\">  {self.modifier-key}  </a>+\"))"},

		],
		"user.arrow_key capture": [
			{"spoken" : "user.arrow_key","action" : "CaptureImpl(\"user.arrow-key\", Rule(\"<a href=\"#user-arrow-key-list\">  {self.arrow-key}  </a>\"))"},

		],
		"user.arrow_keys capture": [
			{"spoken" : "user.arrow_keys","action" : "CaptureImpl(\"user.arrow-keys\", Rule(\" <a href=\"#user-arrow-key-capture\"> &lt;self.arrow-key&gt; </a> +\"))"},

		],
		"user.number_key capture": [
			{"spoken" : "user.number_key","action" : "CaptureImpl(\"user.number-key\", Rule(\"<a href=\"#user-number-key-list\">  {self.number-key}  </a>\"))"},

		],
		"user.letter capture": [
			{"spoken" : "user.letter","action" : "CaptureImpl(\"user.letter\", Rule(\"<a href=\"#user-letter-list\">  {self.letter}  </a>\"))"},

		],
		"user.special_key capture": [
			{"spoken" : "user.special_key","action" : "CaptureImpl(\"user.special-key\", Rule(\"<a href=\"#user-special-key-list\">  {self.special-key}  </a>\"))"},

		],
		"user.symbol_key capture": [
			{"spoken" : "user.symbol_key","action" : "CaptureImpl(\"user.symbol-key\", Rule(\"<a href=\"#user-symbol-key-list\">  {self.symbol-key}  </a>\"))"},

		],
		"user.function_key capture": [
			{"spoken" : "user.function_key","action" : "CaptureImpl(\"user.function-key\", Rule(\"<a href=\"#user-function-key-list\">  {self.function-key}  </a>\"))"},

		],
		"user.any_alphanumeric_key capture": [
			{"spoken" : "user.any_alphanumeric_key","action" : "CaptureImpl(\"user.any-alphanumeric-key\", Rule(\"(  <a href=\"#user-letter-capture\"> &lt;self.letter&gt; </a>   |   <a href=\"#user-number-key-capture\"> &lt;self.number-key&gt; </a>   |   <a href=\"#user-symbol-key-capture\"> &lt;self.symbol-key&gt; </a>  )\"))"},

		],
		"user.unmodified_key capture": [
			{"spoken" : "user.unmodified_key","action" : "CaptureImpl(\"user.unmodified-key\", Rule(\"(  <a href=\"#user-letter-capture\"> &lt;self.letter&gt; </a>   |   <a href=\"#user-number-key-capture\"> &lt;self.number-key&gt; </a>   |   <a href=\"#user-symbol-key-capture\"> &lt;self.symbol-key&gt; </a>   |   <a href=\"#user-arrow-key-capture\"> &lt;self.arrow-key&gt; </a>   |   <a href=\"#user-function-key-capture\"> &lt;self.function-key&gt; </a>   |   <a href=\"#user-special-key-capture\"> &lt;self.special-key&gt; </a>  )\"))"},

		],
		"user.key capture": [
			{"spoken" : "user.key","action" : "CaptureImpl(\"user.key\", Rule(\"<a href=\"#user-modifier-key-list\">  {self.modifier-key}  </a>*  <a href=\"#user-unmodified-key-capture\"> &lt;self.unmodified-key&gt; </a> \"))"},

		],
		"user.keys capture": [
			{"spoken" : "user.keys","action" : "CaptureImpl(\"user.keys\", Rule(\" <a href=\"#user-key-capture\"> &lt;self.key&gt; </a> +\"))"},

		],
		"user.letters capture": [
			{"spoken" : "user.letters","action" : "CaptureImpl(\"user.letters\", Rule(\"<a href=\"#user-letter-list\">  {self.letter}  </a>+\"))"},

		],
		"user.number_string capture": [
			{"spoken" : "user.number_string","action" : "CaptureImpl(\"user.number-string\", Rule(\"(seventeen | twelve | two | eight | fifteen | fourteen | seven | one | sixteen | forty | eighteen | six | eleven | eighty | three | seventy | nineteen | thirteen | twenty | ten | nine | ninety | sixty | thirty | zero | four | fifty | five) ([and] (zero | one | two | three | four | five | six | seven | eight | nine | oh | ten | eleven | twelve | thirteen | fourteen | fifteen | sixteen | seventeen | eighteen | nineteen | twenty | thirty | forty | fifty | sixty | seventy | eighty | ninety | thousand | million | billion | trillion | quadrillion | quintillion | sextillion | septillion | octillion | nonillion | decillion | hundred))*\"))"},

		],
		"user.registers capture": [
			{"spoken" : "user.registers","action" : "CaptureImpl(\"user.registers\", Rule(\"<a href=\"#user-registers-list\">  {self.registers}  </a>\"))"},

		],
		"user.prose_modifier capture": [
			{"spoken" : "user.prose_modifier","action" : "CaptureImpl(\"user.prose-modifier\", Rule(\"<a href=\"#user-prose-modifiers-list\">  {user.prose-modifiers}  </a>\"))"},

		],
		"user.prose_simple_number capture": [
			{"spoken" : "user.prose_simple_number","action" : "CaptureImpl(\"user.prose-simple-number\", Rule(\"numeral  <a href=\"#user-number-string-capture\"> &lt;user.number-string&gt; </a> \"))"},

		],
		"user.prose_number_with_dot capture": [
			{"spoken" : "user.prose_number_with_dot","action" : "CaptureImpl(\"user.prose-number-with-dot\", Rule(\"numeral  <a href=\"#user-number-string-capture\"> &lt;user.number-string&gt; </a>  (dot  |  point)  &lt;digit-string&gt;  \"))"},

		],
		"user.prose_number_with_colon capture": [
			{"spoken" : "user.prose_number_with_colon","action" : "CaptureImpl(\"user.prose-number-with-colon\", Rule(\"numeral  <a href=\"#user-number-string-capture\"> &lt;user.number-string&gt; </a>  colon  <a href=\"#user-number-string-capture\"> &lt;user.number-string&gt; </a> \"))"},

		],
		"user.prose_number capture": [
			{"spoken" : "user.prose_number","action" : "CaptureImpl(\"user.prose-number\", Rule(\" <a href=\"#user-prose-simple-number-capture\"> &lt;user.prose-simple-number&gt; </a>   |   <a href=\"#user-prose-number-with-dot-capture\"> &lt;user.prose-number-with-dot&gt; </a>   |   <a href=\"#user-prose-number-with-colon-capture\"> &lt;user.prose-number-with-colon&gt; </a> \"))"},

		],
		"user.word capture": [
			{"spoken" : "user.word","action" : "CaptureImpl(\"user.word\", Rule(\"(<a href=\"#user-vocabulary-list\">  {user.vocabulary}  </a>  |   &lt;word&gt;  )\"))"},

		],
		"user.text capture": [
			{"spoken" : "user.text","action" : "CaptureImpl(\"user.text\", Rule(\"(<a href=\"#user-vocabulary-list\">  {user.vocabulary}  </a>  |   &lt;phrase&gt;  )+\"))"},

		],
		"user.prose capture": [
			{"spoken" : "user.prose","action" : "CaptureImpl(\"user.prose\", Rule(\"(<a href=\"#user-vocabulary-list\">  {user.vocabulary}  </a>  |  <a href=\"#user-punctuation-list\">  {user.punctuation}  </a>  |  <a href=\"#user-prose-snippets-list\">  {user.prose-snippets}  </a>  |   &lt;phrase&gt;    |   <a href=\"#user-prose-number-capture\"> &lt;user.prose-number&gt; </a>   |   <a href=\"#user-prose-modifier-capture\"> &lt;user.prose-modifier&gt; </a> )+\"))"},

		],
		"user.raw_prose capture": [
			{"spoken" : "user.raw_prose","action" : "CaptureImpl(\"user.raw-prose\", Rule(\"(<a href=\"#user-vocabulary-list\">  {user.vocabulary}  </a>  |  <a href=\"#user-punctuation-list\">  {user.punctuation}  </a>  |  <a href=\"#user-prose-snippets-list\">  {user.prose-snippets}  </a>  |   &lt;phrase&gt;    |   <a href=\"#user-prose-number-capture\"> &lt;user.prose-number&gt; </a> )+\"))"},

		],
		"user.formatters capture": [
			{"spoken" : "user.formatters","action" : "CaptureImpl(\"user.formatters\", Rule(\"<a href=\"#user-formatters-list\">  {self.formatters}  </a>+\"))"},

		],
		"user.format_text capture": [
			{"spoken" : "user.format_text","action" : "CaptureImpl(\"user.format-text\", Rule(\" <a href=\"#user-formatters-capture\"> &lt;self.formatters&gt; </a>   <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  ( <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>   |   <a href=\"#user-formatter-immune-capture\"> &lt;user.formatter-immune&gt; </a> )*\"))"},

		],
		"user.formatter_immune capture": [
			{"spoken" : "user.formatter_immune","action" : "CaptureImpl(\"user.formatter-immune\", Rule(\"( <a href=\"#user-symbol-key-capture\"> &lt;user.symbol-key&gt; </a>   |  numb  &lt;number&gt;  )\"))"},

		],
		"user.homophones_canonical capture": [
			{"spoken" : "user.homophones_canonical","action" : "CaptureImpl(\"user.homophones-canonical\", Rule(\"<a href=\"#user-homophones-canonicals-list\">  {self.homophones-canonicals}  </a>\"))"},

		],
		"user.ordinals capture": [
			{"spoken" : "user.ordinals","action" : "CaptureImpl(\"user.ordinals\", Rule(\"<a href=\"#user-ordinals-list\">  {self.ordinals}  </a>\"))"},

		],
		"user.ordinals_small capture": [
			{"spoken" : "user.ordinals_small","action" : "CaptureImpl(\"user.ordinals-small\", Rule(\"<a href=\"#user-ordinals-small-list\">  {self.ordinals-small}  </a>\"))"},

		],
		"user.running_applications capture": [
			{"spoken" : "user.running_applications","action" : "CaptureImpl(\"user.running-applications\", Rule(\"<a href=\"#user-running-list\">  {self.running}  </a>\"))"},

		],
		"user.launch_applications capture": [
			{"spoken" : "user.launch_applications","action" : "CaptureImpl(\"user.launch-applications\", Rule(\"<a href=\"#user-launch-list\">  {self.launch}  </a>\"))"},

		],
		"user.system_path capture": [
			{"spoken" : "user.system_path","action" : "CaptureImpl(\"user.system-path\", Rule(\"<a href=\"#user-system-paths-list\">  {user.system-paths}  </a>\"))"},

		],
		"user.window_snap_position capture": [
			{"spoken" : "user.window_snap_position","action" : "CaptureImpl(\"user.window-snap-position\", Rule(\"<a href=\"#user-window-snap-positions-list\">  {user.window-snap-positions}  </a>\"))"},

		],
		"user.c_pointers capture": [
			{"spoken" : "user.c_pointers","action" : "CaptureImpl(\"user.c-pointers\", Rule(\"<a href=\"#user-c-pointers-list\">  {self.c-pointers}  </a>\"))"},

		],
		"user.c_signed capture": [
			{"spoken" : "user.c_signed","action" : "CaptureImpl(\"user.c-signed\", Rule(\"<a href=\"#user-c-signed-list\">  {self.c-signed}  </a>\"))"},

		],
		"user.c_keywords capture": [
			{"spoken" : "user.c_keywords","action" : "CaptureImpl(\"user.c-keywords\", Rule(\"<a href=\"#user-c-keywords-list\">  {self.c-keywords}  </a>\"))"},

		],
		"user.c_types capture": [
			{"spoken" : "user.c_types","action" : "CaptureImpl(\"user.c-types\", Rule(\"<a href=\"#user-c-types-list\">  {self.c-types}  </a>\"))"},

		],
		"user.stdint_types capture": [
			{"spoken" : "user.stdint_types","action" : "CaptureImpl(\"user.stdint-types\", Rule(\"<a href=\"#user-stdint-types-list\">  {self.stdint-types}  </a>\"))"},

		],
		"user.stdint_signed capture": [
			{"spoken" : "user.stdint_signed","action" : "CaptureImpl(\"user.stdint-signed\", Rule(\"<a href=\"#user-stdint-signed-list\">  {self.stdint-signed}  </a>\"))"},

		],
		"user.c_cast capture": [
			{"spoken" : "user.c_cast","action" : "CaptureImpl(\"user.c-cast\", Rule(\"[ <a href=\"#user-c-signed-capture\"> &lt;self.c-signed&gt; </a> ]  <a href=\"#user-c-types-capture\"> &lt;self.c-types&gt; </a>  [ <a href=\"#user-c-pointers-capture\"> &lt;self.c-pointers&gt; </a> +]\"))"},

		],
		"user.c_stdint_cast capture": [
			{"spoken" : "user.c_stdint_cast","action" : "CaptureImpl(\"user.c-stdint-cast\", Rule(\"[ <a href=\"#user-stdint-signed-capture\"> &lt;self.stdint-signed&gt; </a> ]  <a href=\"#user-stdint-types-capture\"> &lt;self.stdint-types&gt; </a>  [ <a href=\"#user-c-pointers-capture\"> &lt;self.c-pointers&gt; </a> +]\"))"},

		],
		"user.c_variable capture": [
			{"spoken" : "user.c_variable","action" : "CaptureImpl(\"user.c-variable\", Rule(\"[ <a href=\"#user-c-signed-capture\"> &lt;self.c-signed&gt; </a> ]  <a href=\"#user-c-types-capture\"> &lt;self.c-types&gt; </a>  [ <a href=\"#user-c-pointers-capture\"> &lt;self.c-pointers&gt; </a> ]\"))"},

		],
		"user.code_type capture": [
			{"spoken" : "user.code_type","action" : "CaptureImpl(\"user.code-type\", Rule(\"<a href=\"#user-code-type-list\">  {user.code-type}  </a>\"))"},

		],
		"user.code_common_function capture": [
			{"spoken" : "user.code_common_function","action" : "CaptureImpl(\"user.code-common-function\", Rule(\"<a href=\"#user-code-common-function-list\">  {user.code-common-function}  </a>\"))"},

		],
		"user.code_keyword capture": [
			{"spoken" : "user.code_keyword","action" : "CaptureImpl(\"user.code-keyword\", Rule(\"<a href=\"#user-code-keyword-list\">  {user.code-keyword}  </a>\"))"},

		],
		"user.code_libraries capture": [
			{"spoken" : "user.code_libraries","action" : "CaptureImpl(\"user.code-libraries\", Rule(\"<a href=\"#user-code-libraries-list\">  {user.code-libraries}  </a>\"))"},

		],
		"user.vimscript_functions capture": [
			{"spoken" : "user.vimscript_functions","action" : "CaptureImpl(\"user.vimscript-functions\", Rule(\"<a href=\"#user-vimscript-functions-list\">  {self.vimscript-functions}  </a>\"))"},

		],
		"user.vimscript_scope capture": [
			{"spoken" : "user.vimscript_scope","action" : "CaptureImpl(\"user.vimscript-scope\", Rule(\"<a href=\"#user-vimscript-scope-list\">  {self.vimscript-scope}  </a>\"))"},

		],
		"user.draft_anchor capture": [
			{"spoken" : "user.draft_anchor","action" : "CaptureImpl(\"user.draft-anchor\", Rule(\"<a href=\"#user-letter-list\">  {self.letter}  </a>+\"))"},

		],
		"user.draft_window_position capture": [
			{"spoken" : "user.draft_window_position","action" : "CaptureImpl(\"user.draft-window-position\", Rule(\"(top | bottom | left | right | middle)\"))"},

		],
		"user.navigation_target capture": [
			{"spoken" : "user.navigation_target","action" : "CaptureImpl(\"user.navigation-target\", Rule(\" <a href=\"#user-any-alphanumeric-key-capture\"> &lt;user.any-alphanumeric-key&gt; </a>   |  <a href=\"#user-navigation-target-name-list\">  {user.navigation-target-name}  </a>  |  phrase  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> \"))"},

		],
		"user.rango_hint capture": [
			{"spoken" : "user.rango_hint","action" : "CaptureImpl(\"user.rango-hint\", Rule(\" <a href=\"#user-letter-capture\"> &lt;user.letter&gt; </a>   |   <a href=\"#user-letter-capture\"> &lt;user.letter&gt; </a>   <a href=\"#user-letter-capture\"> &lt;user.letter&gt; </a> \"))"},

		],
		"user.rango_hints capture": [
			{"spoken" : "user.rango_hints","action" : "CaptureImpl(\"user.rango-hints\", Rule(\" <a href=\"#user-rango-hint-capture\"> &lt;user.rango-hint&gt; </a>   |   <a href=\"#user-rango-hint-capture\"> &lt;user.rango-hint&gt; </a>  (and  <a href=\"#user-rango-hint-capture\"> &lt;user.rango-hint&gt; </a> )+\"))"},

		],
		"user.rango_target capture": [
			{"spoken" : "user.rango_target","action" : "CaptureImpl(\"user.rango-target\", Rule(\" <a href=\"#user-rango-hints-capture\"> &lt;user.rango-hints&gt; </a> \"))"},

		],

},
	"talon-formatters" : {
		"user.formatter_code": [

		],
		"user.formatter_prose": [

		],
		"user.formatter_word": [

		],

},
	"talon-contexts" : {
		"Cheatsheet": [
			{"spoken" : "print [html] help","action" : "Print out a help document of all Talon commands as HTML. "},
			{"spoken" : "print developer help","action" : "Print out a help document of all Talon commands as HTML-dev. "},
			{"spoken" : "print latex help","action" : "Print out a help document of all Talon commands as TeX. "},
			{"spoken" : "print xml help","action" : "Print out a help document of all Talon commands as XML. "},
			{"spoken" : "print json help","action" : "Print out a help document of all Talon commands as Json. "},
			{"spoken" : "print tsv help","action" : "Print out a help document of all Talon commands as tsv. "},
			{"spoken" : "print dict help","action" : "Print out a help document of all Talon commands as dict. "},

		],
		"Cheat Sheet": [
			{"spoken" : "cursorless help","action" : "Toggle cursorless cheat sheet. "},

		],
		"Cursorless": [
			{"spoken" : " <a href=\"#user-cursorless-action-or-vscode-command-capture\"> &lt;user.cursorless-action-or-vscode-command&gt; </a>   <a href=\"#user-cursorless-target-capture\"> &lt;user.cursorless-target&gt; </a> ","action" : "Perform cursorless action or vscode command on target (internal use only). "},
			{"spoken" : "<a href=\"#user-cursorless-positional-action-list\">  {user.cursorless-positional-action}  </a>  <a href=\"#user-cursorless-positional-target-capture\"> &lt;user.cursorless-positional-target&gt; </a> ","action" : "Execute single-target cursorless command. "},
			{"spoken" : "<a href=\"#user-cursorless-swap-action-list\">  {user.cursorless-swap-action}  </a>  <a href=\"#user-cursorless-swap-targets-capture\"> &lt;user.cursorless-swap-targets&gt; </a> ","action" : "Execute multi-target cursorless command. "},
			{"spoken" : "<a href=\"#user-cursorless-move-bring-action-list\">  {user.cursorless-move-bring-action}  </a>  <a href=\"#user-cursorless-move-bring-targets-capture\"> &lt;user.cursorless-move-bring-targets&gt; </a> ","action" : "Execute multi-target cursorless command. "},
			{"spoken" : "<a href=\"#user-cursorless-reformat-action-list\">  {user.cursorless-reformat-action}  </a>  <a href=\"#user-formatters-capture\"> &lt;user.formatters&gt; </a>  at  <a href=\"#user-cursorless-target-capture\"> &lt;user.cursorless-target&gt; </a> ","action" : "Reformat targets with formatter. "},
			{"spoken" : " <a href=\"#user-cursorless-wrapper-capture\"> &lt;user.cursorless-wrapper&gt; </a>  <a href=\"#user-cursorless-wrap-action-list\">  {user.cursorless-wrap-action}  </a>  <a href=\"#user-cursorless-target-capture\"> &lt;user.cursorless-target&gt; </a> ","action" : "Perform cursorless wrap action. "},
			{"spoken" : "cursorless help","action" : "Toggle cursorless cheat sheet. "},
			{"spoken" : "cursorless instructions","action" : "Open web page with cursorless instructions. "},
			{"spoken" : "cursorless docks","action" : "Open web page with cursorless instructions. "},
			{"spoken" : "cursorless reference","action" : "Show new cursorless html cheat sheet. "},
			{"spoken" : "cursorless cheat sheet","action" : "Show new cursorless html cheat sheet. "},
			{"spoken" : "cursorless settings","action" : "Insert \"cursorless\". "},

		],
		"Cursorless Snippets": [
			{"spoken" : "<a href=\"#user-cursorless-insert-snippet-action-list\">  {user.cursorless-insert-snippet-action}  </a>  <a href=\"#user-cursorless-insertion-snippet-capture\"> &lt;user.cursorless-insertion-snippet&gt; </a> ","action" : "Execute cursorless command with implicit target. "},
			{"spoken" : "<a href=\"#user-cursorless-insert-snippet-action-list\">  {user.cursorless-insert-snippet-action}  </a>  <a href=\"#user-cursorless-insertion-snippet-capture\"> &lt;user.cursorless-insertion-snippet&gt; </a>   <a href=\"#user-cursorless-positional-target-capture\"> &lt;user.cursorless-positional-target&gt; </a> ","action" : "Execute single-target cursorless command. "},
			{"spoken" : "<a href=\"#user-cursorless-insert-snippet-action-list\">  {user.cursorless-insert-snippet-action}  </a> <a href=\"#user-cursorless-insertion-snippet-single-phrase-list\">  {user.cursorless-insertion-snippet-single-phrase}  </a>  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [<a href=\"#user-cursorless-phrase-terminator-list\">  {user.cursorless-phrase-terminator}  </a>]","action" : "Perform cursorless wrap action. "},

		],
		"Full Mouse Grid": [
			{"spoken" : "dense [mouse] grid","action" : "Close the active grid. Show mouse grid. "},
			{"spoken" : "dense [mouse] grid screen  &lt;number&gt;  ","action" : "Close the active grid. Brings up mouse grid. "},
			{"spoken" : "dense [mouse] grid win","action" : "Close the active grid. Places the grid on the currently active window. "},

		],
		"Full Mouse Grid Open": [
			{"spoken" : " <a href=\"#user-letter-capture\"> &lt;user.letter&gt; </a>   <a href=\"#user-letter-capture\"> &lt;user.letter&gt; </a>   &lt;number&gt;  ","action" : "Input one letter to highlight a row or column. Input one letter to highlight a row or column. Input one letter to highlight a row or column. "},
			{"spoken" : " <a href=\"#user-letter-capture\"> &lt;user.letter&gt; </a>   <a href=\"#user-letter-capture\"> &lt;user.letter&gt; </a> ","action" : "Input one letter to highlight a row or column. Input one letter to highlight a row or column. "},
			{"spoken" : " &lt;number&gt;    <a href=\"#user-letter-capture\"> &lt;user.letter&gt; </a>   <a href=\"#user-letter-capture\"> &lt;user.letter&gt; </a> ","action" : "Input one letter to highlight a row or column. Input one letter to highlight a row or column. Input one letter to highlight a row or column. "},
			{"spoken" : " &lt;number&gt;    <a href=\"#user-letter-capture\"> &lt;user.letter&gt; </a> ","action" : "Input one letter to highlight a row or column. Input one letter to highlight a row or column. "},
			{"spoken" : " &lt;number&gt;  ","action" : "Input one letter to highlight a row or column. "},
			{"spoken" : "horizontal  <a href=\"#user-letter-capture\"> &lt;user.letter&gt; </a> ","action" : "This command is for if you chose the wrong row and you want to choose a different row before choosing a column. "},
			{"spoken" : " <a href=\"#user-letter-capture\"> &lt;user.letter&gt; </a> ","action" : "Input one letter to highlight a row or column. "},
			{"spoken" : "[dense] grid close","action" : "Close the active grid. "},
			{"spoken" : "checker grid","action" : "Show or hide every other label box so more of the underlying screen content is visible. "},
			{"spoken" : "frame grid","action" : "Show or hide rulers all around the window. "},
			{"spoken" : "phonetic grid","action" : "toggle phonetic mouse grid on. "},
			{"spoken" : "full grid","action" : "toggle full mouse grid on. "},
			{"spoken" : "darker letters","action" : "Increase or decrease the opacity of the labels behind text for the full mouse grid (also returns new value). "},
			{"spoken" : "lighter letters","action" : "Increase or decrease the opacity of the labels behind text for the full mouse grid (also returns new value). "},
			{"spoken" : "darker background","action" : "Increase or decrease the opacity of the background of the full mouse grid (also returns new value). "},
			{"spoken" : "lighter background","action" : "Increase or decrease the opacity of the background of the full mouse grid (also returns new value). "},
			{"spoken" : "bigger grid","action" : "increase or decrease size of everything. "},
			{"spoken" : "smaller grid","action" : "increase or decrease size of everything. "},

		],
		"1password": [
			{"spoken" : "password new","action" : "New password. "},
			{"spoken" : "password dup","action" : "Duplicate password. "},
			{"spoken" : "password edit","action" : "Edit password. "},
			{"spoken" : "password delete","action" : "Delete password. "},

		],
		"1password Global": [
			{"spoken" : "password fill","action" : "fill the password. "},
			{"spoken" : "password show","action" : "show the password. "},

		],
		"Amethyst": [
			{"spoken" : "window next","action" : "Press alt-shift-j. "},
			{"spoken" : "window previous","action" : "Press alt-shift-k. "},
			{"spoken" : "window full","action" : "Press alt-shift-d. "},
			{"spoken" : "window tall","action" : "Press alt-shift-a. "},
			{"spoken" : "window middle","action" : "Press alt-shift-`. "},
			{"spoken" : "window move main","action" : "Press alt-shift-enter. "},
			{"spoken" : "window grow","action" : "Press alt-shift-l. "},
			{"spoken" : "window shrink","action" : "Press alt-shift-h. "},
			{"spoken" : "window reevaluate","action" : "Press alt-shift-z. "},

		],
		"Anaconda": [
			{"spoken" : "anaconda","action" : "Insert \"conda \". "},
			{"spoken" : "anaconda help","action" : "Insert \"conda --help\\n\". "},
			{"spoken" : "anaconda version","action" : "Insert \"conda --version\\n\". "},
			{"spoken" : "anaconda environment list","action" : "Insert \"conda env list\\n\". "},
			{"spoken" : "anaconda environment create","action" : "Insert \"conda env create -f \". "},
			{"spoken" : "anaconda environment remove","action" : "Insert \"conda env remove -n \". "},
			{"spoken" : "anaconda activate","action" : "Insert \"conda activate \". "},
			{"spoken" : "anaconda clean","action" : "Insert \"conda clean \". "},
			{"spoken" : "anaconda compare","action" : "Insert \"conda compare \". "},
			{"spoken" : "anaconda config","action" : "Insert \"conda config \". "},
			{"spoken" : "anaconda create","action" : "Insert \"conda create \". "},
			{"spoken" : "anaconda info","action" : "Insert \"conda info \". "},
			{"spoken" : "anaconda init","action" : "Insert \"conda init \". "},
			{"spoken" : "anaconda install","action" : "Insert \"conda install \". "},
			{"spoken" : "anaconda list","action" : "Insert \"conda list \". "},
			{"spoken" : "anaconda package","action" : "Insert \"conda package \". "},
			{"spoken" : "anaconda remove","action" : "Insert \"conda remove \". "},
			{"spoken" : "anaconda uninstall","action" : "Insert \"conda uninstall \". "},
			{"spoken" : "anaconda run","action" : "Insert \"conda run \". "},
			{"spoken" : "anaconda search","action" : "Insert \"conda search \". "},
			{"spoken" : "anaconda update","action" : "Insert \"conda update \". "},
			{"spoken" : "anaconda upgrade","action" : "Insert \"conda upgrade \". "},
			{"spoken" : "anaconda build","action" : "Insert \"conda build \". "},
			{"spoken" : "anaconda convert","action" : "Insert \"conda convert \". "},
			{"spoken" : "anaconda debug","action" : "Insert \"conda debug \". "},
			{"spoken" : "anaconda develop","action" : "Insert \"conda develop \". "},
			{"spoken" : "anaconda environment","action" : "Insert \"conda env \". "},
			{"spoken" : "anaconda index","action" : "Insert \"conda index \". "},
			{"spoken" : "anaconda inspect","action" : "Insert \"conda inspect \". "},
			{"spoken" : "anaconda metapackage","action" : "Insert \"conda metapackage \". "},
			{"spoken" : "anaconda render","action" : "Insert \"conda render \". "},
			{"spoken" : "anaconda server","action" : "Insert \"conda server \". "},
			{"spoken" : "anaconda skeleton","action" : "Insert \"conda skeleton \". "},
			{"spoken" : "anaconda verify","action" : "Insert \"conda verify \". "},

		],
		"Discord": [
			{"spoken" : "[channel] mentions last","action" : "Go up to channel with unread mentions. "},
			{"spoken" : "[channel] mentions next","action" : "Go down to channel with unread mentions. "},
			{"spoken" : "oldest unread","action" : "Go to oldest unread message. "},
			{"spoken" : "toggle pins","action" : "Toggle pins popout. "},
			{"spoken" : "toggle inbox","action" : "Toggle inbox popout. "},
			{"spoken" : "toggle (members | member list)","action" : "Toggle channel member list. "},
			{"spoken" : "pick emoji","action" : "Toggle emoji picker. "},
			{"spoken" : "pick (jif | gif | gift)","action" : "Toggle gif picker. "},
			{"spoken" : "mark inbox channel read","action" : "Mark top inbox channel read. "},
			{"spoken" : "[toggle] (mute | unmute)","action" : "Toggle mute. "},
			{"spoken" : "[toggle] (deafen | undeafen)","action" : "Toggle deafen. "},
			{"spoken" : "answer call","action" : "Answer incoming call. "},
			{"spoken" : "decline call","action" : "Decline incoming call. "},

		],
		"Eclipse": [
			{"spoken" : "please [ <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ]","action" : "Press ctrl-3. Insert \"<user.text> or \". "},
			{"spoken" : "bar explore","action" : "Press alt-shift-w p. "},
			{"spoken" : "bar outline","action" : "Press alt-shift-q o. "},
			{"spoken" : "panel output","action" : "Press alt-shift-q. Press c. "},
			{"spoken" : "panel problems","action" : "Press alt-shift-q. Press x. "},
			{"spoken" : "panel errors","action" : "Press alt-shift-q. Press l. "},
			{"spoken" : "panel breakpoints","action" : "Press alt-shift-q. Press b. "},
			{"spoken" : "panel search","action" : "Press alt-shift-q. Press s. "},
			{"spoken" : "panel variables","action" : "Press alt-shift-q. Press v. "},
			{"spoken" : "show settings","action" : "Press alt-w p. "},
			{"spoken" : "show shortcuts","action" : "Press ctrl-shift-l. "},
			{"spoken" : "file hunt [ <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ]","action" : "Press ctrl-shift-r. Insert \"<text> or \". "},
			{"spoken" : "file create","action" : "Press ctrl-n. "},
			{"spoken" : "file open folder","action" : "Press alt-shift-w x. "},
			{"spoken" : "file rename","action" : "Press alt-shift-w p enter f2. "},
			{"spoken" : "file reveal","action" : "Press alt-shift-w p enter. "},
			{"spoken" : "imports fix","action" : "Press ctrl-shift-o. "},
			{"spoken" : "refactor rename","action" : "Press alt-shift-r. "},
			{"spoken" : "refactor this","action" : "Press alt-shift-i. "},
			{"spoken" : "(go declaration | follow)","action" : "Press f3. "},
			{"spoken" : "go back","action" : "Press alt-left. "},
			{"spoken" : "go forward","action" : "Press alt-right. "},
			{"spoken" : "go marks","action" : "Press alt-end. "},
			{"spoken" : "toggle mark","action" : "Press ctrl-alt-b down enter. "},
			{"spoken" : "go next mark","action" : "Press alt-pagedown. "},
			{"spoken" : "go last mark","action" : "Press alt-pageup. "},
			{"spoken" : "break point","action" : "Press ctrl-shift-b. "},
			{"spoken" : "step over","action" : "Press f6. "},
			{"spoken" : "debug step into","action" : "Press f5. "},
			{"spoken" : "debug step out [of]","action" : "Press f7. "},
			{"spoken" : "debug continue","action" : "Press f8. "},
			{"spoken" : "copy line down","action" : "Press ctrl-alt-down. "},
			{"spoken" : "copy line up","action" : "Press ctrl-alt-up. "},

		],
		"File Manager": [
			{"spoken" : "title force","action" : "Refreshes the title to match current directory. this is for e.g. windows command prompt that will need to do some magic.. "},
			{"spoken" : "manager show","action" : "Shows the pickers. "},
			{"spoken" : "manager close","action" : "Hides the pickers. "},
			{"spoken" : "manager refresh","action" : "Forces an update of the lists (e.g., when file or folder created). "},
			{"spoken" : "go  <a href=\"#user-system-path-capture\"> &lt;user.system-path&gt; </a> ","action" : "opens the directory that's already visible in the view. "},
			{"spoken" : "go back","action" : "file_manager_go_forward_directory. "},
			{"spoken" : "go forward","action" : "file_manager_go_forward_directory. "},
			{"spoken" : "(go parent | daddy)","action" : "file_manager_open_parent. "},
			{"spoken" : "follow numb  &lt;number-small&gt;  ","action" : "Let <directory> be the requested directory for the imgui display by index. opens the directory that's already visible in the view. "},
			{"spoken" : "follow <a href=\"#user-file-manager-directories-list\">  {user.file-manager-directories}  </a>","action" : "opens the directory that's already visible in the view. "},
			{"spoken" : "(select|cell) folder <a href=\"#user-file-manager-directories-list\">  {user.file-manager-directories}  </a>","action" : "selects the directory. "},
			{"spoken" : "open  &lt;number-small&gt;  ","action" : "Let <file> be the requested directory for the imgui display by index. opens the file. "},
			{"spoken" : "folder numb  &lt;number-small&gt;  ","action" : "Let <directory> be the requested directory for the imgui display by index. selects the directory. "},
			{"spoken" : "file numb  &lt;number-small&gt;  ","action" : "Let <file> be the requested directory for the imgui display by index. selects the file. "},
			{"spoken" : "file <a href=\"#user-file-manager-files-list\">  {user.file-manager-files}  </a>","action" : "selects the file. "},
			{"spoken" : "(select|cell) file <a href=\"#user-file-manager-files-list\">  {user.file-manager-files}  </a>","action" : "selects the file. "},
			{"spoken" : "folder new  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Creates a new folder in a gui filemanager or inserts the command to do so for terminals. "},
			{"spoken" : "properties show","action" : "Shows the properties for the file. "},
			{"spoken" : "terminal here","action" : "Opens terminal at current location. "},
			{"spoken" : "folder next","action" : "next_folder_page. "},
			{"spoken" : "folder last","action" : "previous_folder_page. "},
			{"spoken" : "file next","action" : "next_file_page. "},
			{"spoken" : "file last","action" : "previous_file_page. "},

		],
		"Firefox": [
			{"spoken" : "tab search","action" : "Focus address bar. Insert \"% \". "},
			{"spoken" : "tab search  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Focus address bar. Insert \"%  <text>\". Press down. "},

		],
		"Gdb": [
			{"spoken" : "until  &lt;number&gt;  ","action" : "Insert \"until  <number>\". "},
			{"spoken" : "force clear all break points","action" : "Insert \"d br\\n\". Insert \"y\\n\". "},
			{"spoken" : "break [on] clipboard","action" : "Insert \"break \". Press ctrl-shift-v. Press enter. "},
			{"spoken" : "list [source]","action" : "Insert \"list\\n\". "},
			{"spoken" : "info source","action" : "Insert \"info source\\n\". "},
			{"spoken" : "print","action" : "Insert \"p \". "},
			{"spoken" : "print [variable]  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Insert \"p  <text>\". "},
			{"spoken" : "print hex","action" : "Insert \"p/x \". "},
			{"spoken" : "print hex [variable]  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Insert \"p/x  <text>\". "},
			{"spoken" : "print string","action" : "Insert \"p/s \". "},
			{"spoken" : "hex dump  &lt;number&gt;   bytes","action" : "Insert \"x/ <number> bx \". "},
			{"spoken" : "hex dump  &lt;number&gt;   (half|short) words","action" : "Insert \"x/ <number> hx \". "},
			{"spoken" : "hex dump  &lt;number&gt;   (d|long) words","action" : "Insert \"x/ <number> dx \". "},
			{"spoken" : "hex dump  &lt;number&gt;   quad words","action" : "Insert \"x/ <number> gx \". "},
			{"spoken" : "hex dump","action" : "Insert \"x/100gx \". "},
			{"spoken" : "hex dump highlighted","action" : "Insert \"x/100gx \". Copy selection to clipboard. Paste clipboard at cursor. Press enter. "},
			{"spoken" : "hex dump clipboard","action" : "Insert \"x/100gx \". Paste clipboard at cursor. Press enter. "},
			{"spoken" : "source","action" : "Insert \"source 		\". "},
			{"spoken" : "(list|show|info) display","action" : "Insert \"info display\\n\". "},
			{"spoken" : "display assembly line","action" : "Insert \"display /i $pc\\n\". "},
			{"spoken" : "display source","action" : "Insert \"display \". "},
			{"spoken" : "enable display  &lt;number-small&gt;  ","action" : "Insert \"enable display  <number_small> \\n\". "},
			{"spoken" : "disable display  &lt;number-small&gt;  ","action" : "Insert \"disable display  <number_small> \\n\". "},
			{"spoken" : "undisplay","action" : "Insert \"undisplay\\n\". "},
			{"spoken" : "(list|show|info) local","action" : "Insert \"info local \". "},
			{"spoken" : "(list|show|info) local typed","action" : "Insert \"info local -t \". "},
			{"spoken" : "(list|show|info) variable","action" : "Insert \"info variable \". "},
			{"spoken" : "(list|show|info) variable typed","action" : "Insert \"info variable -t \". "},
			{"spoken" : "(list|show|info) locals","action" : "Insert \"info local\\n\". "},
			{"spoken" : "(list|show|info) variables","action" : "Insert \"info variables\\n\". "},
			{"spoken" : "info threads","action" : "Insert \"info threads\\n\". "},
			{"spoken" : "restart [program]","action" : "Insert \"r\\n\". "},
			{"spoken" : "continue","action" : "Insert \"c\\n\". "},
			{"spoken" : "back trace","action" : "Insert \"bt\\n\". "},
			{"spoken" : "debug quit","action" : "Insert \"quit\\n\". "},
			{"spoken" : "debug force quit","action" : "Insert \"quit\\ny\\n\". "},
			{"spoken" : "(show|info) (inf|inferiors)","action" : "Insert \"info inferiors\\n\". "},
			{"spoken" : "inferior  &lt;number-small&gt;  ","action" : "Insert \"inferior  <number_small> \\n\". "},
			{"spoken" : "inferior","action" : "Insert \"inferior \". "},
			{"spoken" : "resume main (inf|inferior)","action" : "Insert \"inferior 1\\n\". Insert \"c\\n\". "},
			{"spoken" : "resume [from] (inf|inferior)  &lt;number-small&gt;  ","action" : "Insert \"inferior  <number_small> \\n\". Insert \"c\\n\". "},
			{"spoken" : "set args","action" : "Insert \"set args \". "},
			{"spoken" : "show follow (fork|forks) [mode]","action" : "Insert \"show follow-fork-mode\\n\". "},
			{"spoken" : "[set] follow (fork|forks) [mode] child","action" : "Insert \"set follow-fork-mode child\\n\". "},
			{"spoken" : "[set] follow (fork|forks) [mode] parent","action" : "Insert \"set follow-fork-mode parent\\n\". "},
			{"spoken" : "show detach on fork","action" : "Insert \"show detach-on-fork\\n\". "},
			{"spoken" : "set detach on fork","action" : "Insert \"set detach-on-fork on\\n\". "},
			{"spoken" : "unset detach on fork","action" : "Insert \"set detach-on-fork off\\n\". "},
			{"spoken" : "show list size","action" : "Insert \"show listsize\\n\". "},
			{"spoken" : "set list size  &lt;number-small&gt;  ","action" : "Insert \"set listsize  <number_small> \\n\". "},
			{"spoken" : "clear screen","action" : "Insert \"shell clear\\n\". "},

		],
		"Generic Browser": [
			{"spoken" : "address bar | go address | go url","action" : "Focus address bar. "},
			{"spoken" : "address copy | url copy | copy address | copy url","action" : "Focus address bar. Copy selection to clipboard. "},
			{"spoken" : "go home","action" : "Go to home page. "},
			{"spoken" : "[go] forward","action" : "Go forward in the history. "},
			{"spoken" : "go (back | backward)","action" : "Go back in the history. "},
			{"spoken" : "go to <a href=\"#user-website-list\">  {user.website}  </a>","action" : "Go to a new URL. "},
			{"spoken" : "go private","action" : "Open a private browsing window. "},
			{"spoken" : "bookmark it","action" : "Bookmark the current page. "},
			{"spoken" : "bookmark tabs","action" : "Bookmark all open tabs. "},
			{"spoken" : "(refresh | reload) it","action" : "Reload current page. "},
			{"spoken" : "(refresh | reload) it hard","action" : "Reload current page (harder). "},
			{"spoken" : "bookmark show","action" : "Open the Bookmarks editor. "},
			{"spoken" : "bookmark bar [show]","action" : "Toggle the bookmarks bar. "},
			{"spoken" : "downloads show","action" : "Show download list. "},
			{"spoken" : "extensions show","action" : "Show installed extensions. "},
			{"spoken" : "history show","action" : "Show recently visited pages. "},
			{"spoken" : "cache show","action" : "Show 'Clear Cache' dialog. "},
			{"spoken" : "dev tools [show]","action" : "Open or close the developer tools. "},
			{"spoken" : "show downloads","action" : "Show download list. "},
			{"spoken" : "show extensions","action" : "Show installed extensions. "},
			{"spoken" : "show history","action" : "Show recently visited pages. "},
			{"spoken" : "show cache","action" : "Show 'Clear Cache' dialog. "},

		],
		"Generic Debugger": [
			{"spoken" : "step into","action" : "Step into an instruction in the debugger. "},
			{"spoken" : "step over","action" : "Step over an instruction in the debugger. "},
			{"spoken" : "step line","action" : "Step into a source line in the debugger. "},
			{"spoken" : "step over line","action" : "Step over a source line in the debugger. "},
			{"spoken" : "step out","action" : "Step until function exit in the debugger. "},
			{"spoken" : "continue","action" : "Continue execution in the debugger. "},
			{"spoken" : "debug start","action" : "Start debugging. "},
			{"spoken" : "debug stop","action" : "Stop the debugger. "},
			{"spoken" : "debug exit","action" : "Exit the debugger. "},
			{"spoken" : "debug detach","action" : "Detach the debugger. "},
			{"spoken" : "debug restart","action" : "Restart execution in the debugger. "},
			{"spoken" : "show registers","action" : "Print the current registers in the debugger. "},
			{"spoken" : "get register","action" : "Print specific register in the debugger. "},
			{"spoken" : "set register","action" : "Set specific register in the debugger. "},
			{"spoken" : "break now","action" : "Break into the debugger. "},
			{"spoken" : "break here","action" : "Set a break on the current line. "},
			{"spoken" : "(list|show) (breaks|break points)","action" : "Print the current breakpoints in the debugger. "},
			{"spoken" : "(set|add) (break|break point)","action" : "Add one software breakpoint in the debugger. "},
			{"spoken" : "(set|add) hardware (break|break point)","action" : "Add one hardware breakpoint in the debugger. "},
			{"spoken" : "clear all (breaks|break points)","action" : "Clear all breakpoints in the debugger. "},
			{"spoken" : "clear (break|break point)","action" : "Clear one breakpoint in the debugger. "},
			{"spoken" : "clear (break|break point)  &lt;number-small&gt;  ","action" : "Clear one breakpoint id in the debugger. "},
			{"spoken" : "disable all (breaks|break points)","action" : "Disable all breakpoints in the debugger. "},
			{"spoken" : "disable (break|break point)","action" : "Disable one breakpoint in the debugger. "},
			{"spoken" : "disable (break|break point)  &lt;number-small&gt;  ","action" : "Disable one breakpoint id in the debugger. "},
			{"spoken" : "enable all (breaks|break points)","action" : "Enable all breakpoints in the debugger. "},
			{"spoken" : "enable (break|break point)","action" : "Enable one breakpoint in the debugger. "},
			{"spoken" : "enable (break|break point)  &lt;number-small&gt;  ","action" : "Enable one breakpoint id in the debugger. "},
			{"spoken" : "(stack|back) trace","action" : "Print a back trace in the debugger. "},
			{"spoken" : "disassemble","action" : "Preps the disassemble command in the debugger. "},
			{"spoken" : "disassemble here","action" : "Disassembles instructions at the current instruction pointer. "},
			{"spoken" : "disassemble clipboard","action" : "Disassemble instructions at an address in the clipboard. "},
			{"spoken" : "jump to address","action" : "Jump to a specific address in the debugger. "},
			{"spoken" : "jump to clipboard","action" : "Jump to a specific address stored in the clipboard. "},
			{"spoken" : "jump to highlighted","action" : "Jump to a specific highlighted address in the debugger. "},
			{"spoken" : "dump string","action" : "Display as specific address as an ascii string in the debugger. "},
			{"spoken" : "dump unicode [string]","action" : "Display as specific address as an unicode string in the debugger. "},
			{"spoken" : "dump pointers","action" : "Display as specific address as a list of pointers in the debugger. "},
			{"spoken" : "list modules","action" : "List the loaded modules in the debuggee memory space. "},
			{"spoken" : "inspect type","action" : "Inspect a specific data type in the debugger. "},
			{"spoken" : "clear line","action" : "Clear unwanted data from the command line. "},

		],
		"Generic Snippets": [
			{"spoken" : "snip <a href=\"#user-snippets-list\">  {user.snippets}  </a>","action" : "Inserts a snippet. "},
			{"spoken" : "snip hunt  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Triggers the program's snippet search. "},
			{"spoken" : "snip hunt","action" : "Triggers the program's snippet search. "},
			{"spoken" : "snip create","action" : "Triggers snippet creation. "},
			{"spoken" : "snip show","action" : "Toggles UI for available snippets. "},

		],
		"Generic Snippets Open": [
			{"spoken" : "snip close","action" : "Hides the snippet UI. "},

		],
		"Generic Terminal": [
			{"spoken" : "lisa","action" : "Lists directories. "},
			{"spoken" : "lisa all","action" : "Lists all directories including hidden. "},
			{"spoken" : "katie [ <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ]","action" : "Lists change directory. "},
			{"spoken" : "katie root","action" : "Root of current drive. "},
			{"spoken" : "go  <a href=\"#user-system-path-capture\"> &lt;user.system-path&gt; </a> ","action" : "Insert \"cd \" <system_path> \"\\n\". "},
			{"spoken" : "clear screen","action" : "Clear screen. "},
			{"spoken" : "run last","action" : "Repeats the last command. "},
			{"spoken" : "rerun [ <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ]","action" : "Searches through the previously executed commands. "},
			{"spoken" : "rerun search","action" : "Searches through the previously executed commands. "},
			{"spoken" : "kill all","action" : "kills the running command. "},
			{"spoken" : "copy paste","action" : "Copy selection to clipboard. Paste clipboard at cursor. "},

		],
		"I3wm": [
			{"spoken" : "port  &lt;number-small&gt;  ","action" : "execute a command on the system. "},
			{"spoken" : "port ten","action" : "execute a command on the system. "},
			{"spoken" : "(port flip|flipper)","action" : "execute a command on the system. "},
			{"spoken" : "port right","action" : "execute a command on the system. "},
			{"spoken" : "port left","action" : "execute a command on the system. "},
			{"spoken" : "(win|window) left","action" : "execute a command on the system. "},
			{"spoken" : "(win|window) right","action" : "execute a command on the system. "},
			{"spoken" : "(win|window) up","action" : "execute a command on the system. "},
			{"spoken" : "(win|window) down","action" : "execute a command on the system. "},
			{"spoken" : "((win|window) kill|murder)","action" : "execute a command on the system. "},
			{"spoken" : "(win|window) stacking","action" : "execute a command on the system. "},
			{"spoken" : "(win|window) default","action" : "execute a command on the system. "},
			{"spoken" : "(win|window) tabbed","action" : "execute a command on the system. "},
			{"spoken" : "reload i three config","action" : "execute a command on the system. "},
			{"spoken" : "restart i three","action" : "execute a command on the system. "},
			{"spoken" : "(full screen|scuba)","action" : "execute a command on the system. "},
			{"spoken" : "toggle floating","action" : "execute a command on the system. "},
			{"spoken" : "focus floating","action" : "execute a command on the system. "},
			{"spoken" : "center window","action" : "execute a command on the system. "},
			{"spoken" : "resize mode","action" : "execute a command on the system. "},
			{"spoken" : "focus parent","action" : "execute a command on the system. "},
			{"spoken" : "focus child","action" : "execute a command on the system. "},
			{"spoken" : "grow window","action" : "execute a command on the system. Press right:10. Press down:10. Press escape. execute a command on the system. "},
			{"spoken" : "shrink window","action" : "execute a command on the system. Press left:10. Press up:10. Press escape. execute a command on the system. "},
			{"spoken" : "horizontal (shell|terminal)","action" : "execute a command on the system. Launch a shell. "},
			{"spoken" : "vertical (shell|terminal)","action" : "execute a command on the system. Launch a shell. "},
			{"spoken" : "(shuffle|move (win|window) [to] port)  &lt;number-small&gt;  ","action" : "execute a command on the system. "},
			{"spoken" : "(shuffle|move (win|window) [to] port ten)","action" : "execute a command on the system. "},
			{"spoken" : "(shuffle|move (win|window) [to] last port)","action" : "execute a command on the system. "},
			{"spoken" : "(shuffle|move (win|window) left)","action" : "execute a command on the system. "},
			{"spoken" : "(shuffle|move (win|window) right)","action" : "execute a command on the system. "},
			{"spoken" : "(shuffle|move (win|window) up)","action" : "execute a command on the system. "},
			{"spoken" : "(shuffle|move (win|window) down)","action" : "execute a command on the system. "},
			{"spoken" : "(win|window) horizontal","action" : "execute a command on the system. "},
			{"spoken" : "(win|window) vertical","action" : "execute a command on the system. "},
			{"spoken" : "make scratch","action" : "execute a command on the system. "},
			{"spoken" : "[(show|hide)] scratch","action" : "execute a command on the system. "},
			{"spoken" : "next scratch","action" : "execute a command on the system. execute a command on the system. "},
			{"spoken" : "launch","action" : "Trigger the i3 launcher: ex rofi. "},
			{"spoken" : "launch  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Trigger the i3 launcher: ex rofi. Insert \"<text>\". "},
			{"spoken" : "lock screen","action" : "Trigger the i3 launcher: ex rofi. "},
			{"spoken" : "(launch shell|koopa)","action" : "Launch a shell. "},
			{"spoken" : "new scratch (shell|window)","action" : "Launch a shell. execute a command on the system. execute a command on the system. "},

		],
		"Jetbrains": [
			{"spoken" : "complete","action" : ""},
			{"spoken" : "perfect","action" : ""},
			{"spoken" : "smart","action" : ""},
			{"spoken" : "(done | finish)","action" : ""},
			{"spoken" : "grab  &lt;number&gt;  ","action" : "Copies specified number of words to the left. "},
			{"spoken" : "(action | please)","action" : ""},
			{"spoken" : "(action | please)  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Insert \"<text>\". "},
			{"spoken" : "refactor","action" : ""},
			{"spoken" : "refactor  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Insert \"<text>\". "},
			{"spoken" : "extract variable","action" : ""},
			{"spoken" : "extract field","action" : ""},
			{"spoken" : "extract constant","action" : ""},
			{"spoken" : "extract parameter","action" : ""},
			{"spoken" : "extract interface","action" : ""},
			{"spoken" : "extract method","action" : ""},
			{"spoken" : "refactor in line","action" : ""},
			{"spoken" : "refactor move","action" : ""},
			{"spoken" : "refactor rename","action" : ""},
			{"spoken" : "rename file","action" : ""},
			{"spoken" : "fix (format | formatting)","action" : ""},
			{"spoken" : "fix imports","action" : ""},
			{"spoken" : "(go declaration | follow)","action" : ""},
			{"spoken" : "go implementation","action" : ""},
			{"spoken" : "go usage","action" : ""},
			{"spoken" : "go type","action" : ""},
			{"spoken" : "go test","action" : ""},
			{"spoken" : "go back","action" : ""},
			{"spoken" : "go forward","action" : ""},
			{"spoken" : "find (everywhere | all)","action" : ""},
			{"spoken" : "find (everywhere | all)  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Insert \"<text>\". "},
			{"spoken" : "(search | find) class","action" : ""},
			{"spoken" : "(search | find) file","action" : ""},
			{"spoken" : "(search | find) path","action" : ""},
			{"spoken" : "(search | find) symbol","action" : ""},
			{"spoken" : "(search | find) symbol  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Insert \"<text>\". Press enter. "},
			{"spoken" : "recent","action" : ""},
			{"spoken" : "surround [this] with  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "idea(\"action SurroundWith\")
sleep(500ms)
insert(text)
# Making these longer to reduce collisions with real code dictation."},
			{"spoken" : "insert generated  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Insert \"<text>\". "},
			{"spoken" : "insert template  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "idea(\"action InsertLiveTemplate\")
sleep(500ms)
insert(text)"},
			{"spoken" : "create (template|snippet)","action" : ""},
			{"spoken" : "toggle recording","action" : ""},
			{"spoken" : "change (recording | recordings)","action" : ""},
			{"spoken" : "play recording","action" : ""},
			{"spoken" : "play recording  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "idea(\"action PlaySavedMacrosAction\")
insert(text)
sleep(500ms)
Key(\"enter\")
# Marks"},
			{"spoken" : "go mark","action" : ""},
			{"spoken" : "toggle mark","action" : ""},
			{"spoken" : "go next mark","action" : ""},
			{"spoken" : "go last mark","action" : ""},
			{"spoken" : "toggle mark  &lt;number&gt;  ","action" : ""},
			{"spoken" : "go mark  &lt;number&gt;  ","action" : ""},
			{"spoken" : "expand deep","action" : ""},
			{"spoken" : "expand all","action" : ""},
			{"spoken" : "collapse deep","action" : ""},
			{"spoken" : "collapse all","action" : ""},
			{"spoken" : "go next (method | function)","action" : ""},
			{"spoken" : "go last (method | function)","action" : ""},
			{"spoken" : "clippings","action" : ""},
			{"spoken" : "copy path","action" : ""},
			{"spoken" : "copy reference","action" : ""},
			{"spoken" : "copy pretty","action" : ""},
			{"spoken" : "create sibling","action" : ""},
			{"spoken" : "create sibling  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Insert \"<text>\". "},
			{"spoken" : "create file","action" : ""},
			{"spoken" : "create file  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Insert \"<text>\". "},
			{"spoken" : "go task","action" : ""},
			{"spoken" : "go browser task","action" : ""},
			{"spoken" : "switch task","action" : ""},
			{"spoken" : "clear task","action" : ""},
			{"spoken" : "configure servers","action" : ""},
			{"spoken" : "git pull","action" : ""},
			{"spoken" : "git commit","action" : ""},
			{"spoken" : "git push","action" : ""},
			{"spoken" : "git log","action" : ""},
			{"spoken" : "git browse","action" : ""},
			{"spoken" : "git (gets | gist)","action" : ""},
			{"spoken" : "git (pull request | request)","action" : ""},
			{"spoken" : "git (view | show | list) (requests | request)","action" : ""},
			{"spoken" : "git (annotate | blame)","action" : ""},
			{"spoken" : "git menu","action" : ""},
			{"spoken" : "toggle project","action" : ""},
			{"spoken" : "toggle find","action" : ""},
			{"spoken" : "toggle run","action" : ""},
			{"spoken" : "toggle debug","action" : ""},
			{"spoken" : "toggle events","action" : ""},
			{"spoken" : "toggle terminal","action" : ""},
			{"spoken" : "toggle git","action" : ""},
			{"spoken" : "toggle structure","action" : ""},
			{"spoken" : "toggle database","action" : ""},
			{"spoken" : "toggle database changes","action" : ""},
			{"spoken" : "toggle make","action" : ""},
			{"spoken" : "toggle to do","action" : ""},
			{"spoken" : "toggle docker","action" : ""},
			{"spoken" : "toggle favorites","action" : ""},
			{"spoken" : "toggle last","action" : ""},
			{"spoken" : "toggle pinned","action" : ""},
			{"spoken" : "toggle docked","action" : ""},
			{"spoken" : "toggle floating","action" : ""},
			{"spoken" : "toggle windowed","action" : ""},
			{"spoken" : "toggle split","action" : ""},
			{"spoken" : "toggle tool buttons","action" : ""},
			{"spoken" : "toggle toolbar","action" : ""},
			{"spoken" : "toggle status [bar]","action" : ""},
			{"spoken" : "toggle navigation [bar]","action" : ""},
			{"spoken" : "toggle power save","action" : ""},
			{"spoken" : "toggle whitespace","action" : ""},
			{"spoken" : "toggle indents","action" : ""},
			{"spoken" : "toggle line numbers","action" : ""},
			{"spoken" : "toggle (bread crumbs | breadcrumbs)","action" : ""},
			{"spoken" : "toggle gutter icons","action" : ""},
			{"spoken" : "toggle wrap","action" : ""},
			{"spoken" : "toggle parameters","action" : ""},
			{"spoken" : "toggle fullscreen","action" : ""},
			{"spoken" : "toggle distraction [free mode]","action" : ""},
			{"spoken" : "toggle presentation [mode]","action" : ""},
			{"spoken" : "toggle comment","action" : "Toggle comments on the current line(s). "},
			{"spoken" : "change scheme","action" : ""},
			{"spoken" : "(toggle | pop) (doc | documentation)","action" : ""},
			{"spoken" : "(pop deaf | toggle definition)","action" : ""},
			{"spoken" : "pop type","action" : ""},
			{"spoken" : "pop parameters","action" : ""},
			{"spoken" : "go breakpoints","action" : ""},
			{"spoken" : "toggle [line] breakpoint","action" : ""},
			{"spoken" : "toggle method breakpoint","action" : ""},
			{"spoken" : "run menu","action" : ""},
			{"spoken" : "run test","action" : ""},
			{"spoken" : "run test again","action" : ""},
			{"spoken" : "debug test","action" : ""},
			{"spoken" : "step over","action" : ""},
			{"spoken" : "step into","action" : ""},
			{"spoken" : "step smart","action" : ""},
			{"spoken" : "step to line","action" : ""},
			{"spoken" : "continue","action" : ""},
			{"spoken" : "(grow | shrink) window right","action" : ""},
			{"spoken" : "(grow | shrink) window left","action" : ""},
			{"spoken" : "(grow | shrink) window up","action" : ""},
			{"spoken" : "(grow | shrink) window down","action" : ""},
			{"spoken" : "go next (error | air)","action" : ""},
			{"spoken" : "go last (error | air)","action" : ""},
			{"spoken" : "fix next (error | air)","action" : ""},
			{"spoken" : "fix last (error | air)","action" : ""},
			{"spoken" : "select less","action" : ""},
			{"spoken" : "select (more|this)","action" : ""},
			{"spoken" : "expand  &lt;number&gt;   until  &lt;number&gt;  ","action" : "Selects lines from line_start to line line_end. "},
			{"spoken" : "collapse  &lt;number&gt;   until  &lt;number&gt;  ","action" : "Selects lines from line_start to line line_end. "},
			{"spoken" : "paste  &lt;number&gt;   until  &lt;number&gt;  ","action" : "Selects lines from line_start to line line_end. "},
			{"spoken" : "refactor  &lt;number&gt;   until  &lt;number&gt;  ","action" : "Selects lines from line_start to line line_end. "},
			{"spoken" : "clone  &lt;number&gt;  ","action" : "Clones specified line at current position. "},
			{"spoken" : "clear last  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : ""},
			{"spoken" : "clear next  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : ""},
			{"spoken" : "comment last  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : ""},
			{"spoken" : "comment next  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : ""},
			{"spoken" : "go last  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : ""},
			{"spoken" : "go next  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : ""},
			{"spoken" : "paste last  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : ""},
			{"spoken" : "paste next  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : ""},
			{"spoken" : "refactor last  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : ""},
			{"spoken" : "refactor next  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : ""},
			{"spoken" : "replace last  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : ""},
			{"spoken" : "replace next  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : ""},
			{"spoken" : "select last  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : ""},
			{"spoken" : "select next  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : ""},
			{"spoken" : "select camel left","action" : "Extends the selection by camel/subword to the left. "},
			{"spoken" : "select camel right","action" : "Extends the selection by camel/subword to the right. "},
			{"spoken" : "go camel left","action" : "Moves cursor to the left by camel case/subword. "},
			{"spoken" : "go camel right","action" : "Move cursor to the right by camel case/subword. "},
			{"spoken" : "blacken","action" : ""},

		],
		"Kubectl": [
			{"spoken" : "cube [control]","action" : "Insert \"kubectl \". "},
			{"spoken" : "cube create","action" : "Insert \"kubectl create \". "},
			{"spoken" : "cube expose","action" : "Insert \"kubectl expose \". "},
			{"spoken" : "cube run","action" : "Insert \"kubectl run \". "},
			{"spoken" : "cube set","action" : "Insert \"kubectl set \". "},
			{"spoken" : "cube run container","action" : "Insert \"kubectl run-container \". "},
			{"spoken" : "cube explain","action" : "Insert \"kubectl explain \". "},
			{"spoken" : "cube get","action" : "Insert \"kubectl get \". "},
			{"spoken" : "cube edit","action" : "Insert \"kubectl edit \". "},
			{"spoken" : "cube delete","action" : "Insert \"kubectl delete \". "},
			{"spoken" : "cube rollout","action" : "Insert \"kubectl rollout \". "},
			{"spoken" : "cube rolling update","action" : "Insert \"kubectl rolling-update \". "},
			{"spoken" : "cube scale","action" : "Insert \"kubectl scale \". "},
			{"spoken" : "cube auto scale","action" : "Insert \"kubectl autoscale \". "},
			{"spoken" : "cube certificate","action" : "Insert \"kubectl certificate \". "},
			{"spoken" : "cube top","action" : "Insert \"kubectl top \". "},
			{"spoken" : "cube drain","action" : "Insert \"kubectl drain \". "},
			{"spoken" : "cube taint","action" : "Insert \"kubectl taint \". "},
			{"spoken" : "cube (cord | cordon)","action" : "Insert \"kubectl cordon \". "},
			{"spoken" : "cube (uncord | uncordon)","action" : "Insert \"kubectl uncordon \". "},
			{"spoken" : "cube cluster (info | information)","action" : "Insert \"kubectl cluster-info \". "},
			{"spoken" : "cube describe","action" : "Insert \"kubectl describe \". "},
			{"spoken" : "cube logs","action" : "Insert \"kubectl logs \". "},
			{"spoken" : "cube attach","action" : "Insert \"kubectl attach \". "},
			{"spoken" : "cube exec","action" : "Insert \"kubectl exec \". "},
			{"spoken" : "cube port forward","action" : "Insert \"kubectl port-forward \". "},
			{"spoken" : "cube proxy","action" : "Insert \"kubectl proxy \". "},
			{"spoken" : "cube copy","action" : "Insert \"kubectl cp \". "},
			{"spoken" : "cube auth","action" : "Insert \"kubectl auth \". "},
			{"spoken" : "cube diff","action" : "Insert \"kubectl diff \". "},
			{"spoken" : "cube apply","action" : "Insert \"kubectl apply \". "},
			{"spoken" : "cube patch","action" : "Insert \"kubectl patch \". "},
			{"spoken" : "cube replace","action" : "Insert \"kubectl replace \". "},
			{"spoken" : "cube wait","action" : "Insert \"kubectl wait \". "},
			{"spoken" : "cube convert","action" : "Insert \"kubectl convert \". "},
			{"spoken" : "cube customize","action" : "Insert \"kubectl kustomize \". "},
			{"spoken" : "cube label","action" : "Insert \"kubectl label \". "},
			{"spoken" : "cube annotate","action" : "Insert \"kubectl annotate \". "},
			{"spoken" : "cube completion","action" : "Insert \"kubectl completion \". "},
			{"spoken" : "cube (interface | API)","action" : "Insert \"kubectl api \". "},
			{"spoken" : "cube interface resources","action" : "Insert \"kubectl api-resources \". "},
			{"spoken" : "cube interface versions","action" : "Insert \"kubectl api-versions \". "},
			{"spoken" : "cube config","action" : "Insert \"kubectl config \". "},
			{"spoken" : "cube help","action" : "Insert \"kubectl help \". "},
			{"spoken" : "cube plugin","action" : "Insert \"kubectl plugin \". "},
			{"spoken" : "cube version","action" : "Insert \"kubectl version \". "},
			{"spoken" : "cube <a href=\"#user-kubectl-action-list\">  {user.kubectl-action}  </a> [<a href=\"#user-kubectl-object-list\">  {user.kubectl-object}  </a>]","action" : "Insert \"kubectl  <kubectl_action>  \". Insert \"<kubectl_object> or \". "},
			{"spoken" : "cube detach","action" : "Press ctrl-p. Press ctrl-q. "},
			{"spoken" : "cube shell","action" : "Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.. "},

		],
		"Dunst (Linux)": [
			{"spoken" : "show notifications","action" : "Press ctrl-`. "},
			{"spoken" : "dismiss [notifications]","action" : "execute a command on the system. "},
			{"spoken" : "dismiss all [notifications]","action" : "execute a command on the system. "},

		],
		"Keepassx (Linux)": [
			{"spoken" : "open database","action" : "Press ctrl-o. "},
			{"spoken" : "save database","action" : "Press ctrl-s. "},
			{"spoken" : "close database","action" : "Press ctrl-w. "},
			{"spoken" : "lock database","action" : "Press ctrl-l. "},
			{"spoken" : "quit","action" : "Press ctrl-q. "},
			{"spoken" : "[add] new entry","action" : "Press ctrl-n. "},
			{"spoken" : "clone entry","action" : "Press ctrl-k. "},
			{"spoken" : "(view|edit) entry","action" : "Press ctrl-e. "},
			{"spoken" : "delete entry","action" : "Press ctrl-d. "},
			{"spoken" : "copy user [name]","action" : "Press ctrl-b. "},
			{"spoken" : "copy password","action" : "Press ctrl-c. "},
			{"spoken" : "open (earl|url|link)","action" : "Press ctrl-u. "},
			{"spoken" : "copy (earl|url|link)","action" : "Press ctrl-alt-u. "},
			{"spoken" : "find","action" : "Press ctrl-f. "},
			{"spoken" : "find  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Press ctrl-f. Insert \"<text>\". "},

		],
		"Signal (Linux)": [
			{"spoken" : "show shortcuts","action" : "Press ctrl-/. "},
			{"spoken" : "(next|nav|navigate) [by] (sec|section)","action" : "Press ctrl-t. "},
			{"spoken" : "(prev|previous) (chat|conversation)","action" : "Press alt-down. "},
			{"spoken" : "next (chat|conversation)","action" : "Press alt-up. "},
			{"spoken" : "(prev|previous) unread","action" : "Press alt-shift-down. "},
			{"spoken" : "next unread","action" : "Press alt-shift-up. "},
			{"spoken" : "[open] (pref|preferences)","action" : "Press ctrl-,. "},
			{"spoken" : "open conversation menu","action" : "Press ctrl-shift-l. "},
			{"spoken" : "search","action" : "Press ctrl-f. "},
			{"spoken" : "search chat","action" : "Press ctrl-shift-f. "},
			{"spoken" : "focus (chat|composer)","action" : "Press ctrl-shift-t. "},
			{"spoken" : "open media","action" : "Press ctrl-shift-m. "},
			{"spoken" : "open emoji","action" : "Press ctrl-shift-j. "},
			{"spoken" : "open sticker","action" : "Press ctrl-shift-s. "},
			{"spoken" : "record [voice] message","action" : "Press ctrl-shift-v. "},
			{"spoken" : "archive chat","action" : "Press ctrl-shift-a. "},
			{"spoken" : "unarchive chat","action" : "Press ctrl-shift-u. "},
			{"spoken" : "(first|top) message","action" : "Press ctrl-up. "},
			{"spoken" : "(last|bottom) message","action" : "Press ctrl-down. "},
			{"spoken" : "close chat","action" : "Press ctrl-shift-c. "},
			{"spoken" : "send it","action" : "Press enter. "},
			{"spoken" : "message details","action" : "Press ctrl-d. "},
			{"spoken" : "reply [message]","action" : "Press ctrl-shift-r. "},
			{"spoken" : "react [message]","action" : "Press ctrl-shift-e. "},
			{"spoken" : "save attachment","action" : "Press ctrl-s. "},
			{"spoken" : "delete [message]","action" : "Press ctrl-shift-d. "},
			{"spoken" : "send message","action" : "Press ctrl-enter. "},
			{"spoken" : "expand chat","action" : "Press ctrl-shift-x. "},
			{"spoken" : "attach [file]","action" : "Press ctrl-u. "},
			{"spoken" : "remove [link] preview","action" : "Press ctrl-p. "},
			{"spoken" : "remove [link] attachment","action" : "Press ctrl-shift-p. "},

		],
		"Taskwarrior (Linux)": [
			{"spoken" : "task version","action" : "Insert \"task --version\\n\". "},
			{"spoken" : "task commands","action" : "Insert \"task commands\\n\". "},
			{"spoken" : "task help","action" : "Insert \"task help\\n\". "},
			{"spoken" : "task list","action" : "Insert \"task list\\n\". "},
			{"spoken" : "task list orphans","action" : "Insert \"task project: list\\n\". "},
			{"spoken" : "task list untagged","action" : "Insert \"task tags.none: list\\n\". "},
			{"spoken" : "task list  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Insert \"task list  <text> \\n\". "},
			{"spoken" : "task list project","action" : "Insert \"task list project: \". "},
			{"spoken" : "task list project  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Insert \"task list project: <text> \\n\". "},
			{"spoken" : "task add","action" : "Insert \"task add \". "},
			{"spoken" : "task add  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Insert \"task add  <text> \\n\". "},
			{"spoken" : "task undo","action" : "Insert \"task undo\\n\". "},
			{"spoken" : "(tasks|task next)","action" : "Insert \"task next\\n\". "},
			{"spoken" : "task  &lt;number&gt;   edit","action" : "Insert \"task  <number>  edit\". "},
			{"spoken" : "task  &lt;number&gt;   done","action" : "Insert \"task  <number>  done\". "},
			{"spoken" : "task  &lt;number&gt;   delete","action" : "Insert \"task  <number>  delete\". "},

		],
		"Termite (Linux)": [
			{"spoken" : "shell yank","action" : "Press y. "},
			{"spoken" : "shell select","action" : "Press ctrl-shift-space. "},
			{"spoken" : "shell insert","action" : "Press escape. "},
			{"spoken" : "visual line","action" : "Press v. "},
			{"spoken" : "visual line mode","action" : "Press V. "},

		],
		"Tmux (Linux)": [
			{"spoken" : "mux","action" : "Insert \"tmux \". "},
			{"spoken" : "mux new session","action" : "Insert \"tmux new \". "},
			{"spoken" : "mux sessions","action" : "Press ctrl-b. Press s. "},
			{"spoken" : "mux name session","action" : "Press ctrl-b. Press $. "},
			{"spoken" : "mux kill session","action" : "Insert \"tmux kill-session -t \". "},
			{"spoken" : "mux new window","action" : "Press ctrl-b. Press c. "},
			{"spoken" : "mux window  &lt;number&gt;  ","action" : "Press ctrl-b. Press <number>. "},
			{"spoken" : "mux previous window","action" : "Press ctrl-b. Press p. "},
			{"spoken" : "mux next window","action" : "Press ctrl-b. Press n. "},
			{"spoken" : "mux rename window","action" : "Press ctrl-b. Press ,. "},
			{"spoken" : "mux close window","action" : "Press ctrl-b. Press &. "},
			{"spoken" : "mux split horizontal","action" : "Press ctrl-b. Press %. "},
			{"spoken" : "mux split vertical","action" : "Press ctrl-b. Press \". "},
			{"spoken" : "mux next pane","action" : "Press ctrl-b. Press o. "},
			{"spoken" : "mux move  <a href=\"#user-arrow-key-capture\"> &lt;user.arrow-key&gt; </a> ","action" : "Press ctrl-b. Press arrow_key. "},
			{"spoken" : "mux close pane","action" : "Press ctrl-b. Press x. "},
			{"spoken" : "mux pane numbers","action" : "Press ctrl-b. Press q. "},

		],
		"Finder (MacOS)": [
			{"spoken" : "preferences","action" : "Press cmd-,. "},
			{"spoken" : "options","action" : "Press cmd-j. "},
			{"spoken" : "search","action" : "Press cmd-alt-f. "},
			{"spoken" : "sort by none","action" : "Press ctrl-alt-cmd-0. "},
			{"spoken" : "sort by name","action" : "Press ctrl-alt-cmd-1. "},
			{"spoken" : "sort by kind","action" : "Press ctrl-alt-cmd-2. "},
			{"spoken" : "sort by date opened","action" : "Press ctrl-alt-cmd-3. "},
			{"spoken" : "sort by date added","action" : "Press ctrl-alt-cmd-4. "},
			{"spoken" : "sort by date modified","action" : "Press ctrl-alt-cmd-5. "},
			{"spoken" : "sort by size","action" : "Press ctrl-alt-cmd-6. "},
			{"spoken" : "icon view","action" : "Press cmd-1. "},
			{"spoken" : "column view","action" : "Press cmd-3. "},
			{"spoken" : "list view","action" : "Press cmd-2. "},
			{"spoken" : "gallery view","action" : "Press cmd-4. "},
			{"spoken" : "copy path","action" : "Press alt-cmd-c. "},
			{"spoken" : "trash it","action" : "Press cmd-backspace. "},
			{"spoken" : "hide [finder]","action" : "Press cmd-h. "},
			{"spoken" : "hide others","action" : "Hide all other windows. "},

		],
		"Notes (MacOS)": [
			{"spoken" : "new note","action" : "Press cmd-n. "},
			{"spoken" : "duplicate note","action" : "Press cmd-d. "},
			{"spoken" : "new folder","action" : "Press shift-cmd-n. "},
			{"spoken" : "toggle folders","action" : "Press alt-cmd-s. "},
			{"spoken" : "show main","action" : "Press cmd-0. "},
			{"spoken" : "list view","action" : "Press cmd-1. "},
			{"spoken" : "gallery view","action" : "Press cmd-2. "},
			{"spoken" : "toggle attachments","action" : "Press cmd-3. "},
			{"spoken" : "find all","action" : "Press alt-cmd-f. "},
			{"spoken" : "print note","action" : "Press cmd-p. "},
			{"spoken" : "attach file","action" : "Press shift-cmd-a. "},
			{"spoken" : "create link","action" : "Press cmd-k. "},
			{"spoken" : "insert table","action" : "Press alt-cmd-t. "},
			{"spoken" : "apply title","action" : "Press shift-cmd-t. "},
			{"spoken" : "apply heading","action" : "Press shift-cmd-h. "},
			{"spoken" : "apply subheading","action" : "Press shift-cmd-j. "},
			{"spoken" : "apply body","action" : "Press shift-cmd-b. "},
			{"spoken" : "apply mono","action" : "Press shift-cmd-m. "},
			{"spoken" : "apply bullet","action" : "Press shift-cmd-7. "},
			{"spoken" : "apply dash","action" : "Press shift-cmd-8. "},
			{"spoken" : "apply number","action" : "Press shift-cmd-9. "},
			{"spoken" : "apply checklist","action" : "Press shift-cmd-l. "},
			{"spoken" : "increase font","action" : "Press cmd-+. "},
			{"spoken" : "decrease font","action" : "Press cmd--. "},
			{"spoken" : "line break","action" : "Press ctrl-enter. "},
			{"spoken" : "mark","action" : "Press shift-cmd-u. "},
			{"spoken" : "drag [line] down","action" : "Press ctrl-cmd-down. "},
			{"spoken" : "drag [line] up","action" : "Press ctrl-cmd-up. "},

		],
		"Rstudio (MacOS)": [
			{"spoken" : "run that","action" : "Press cmd-enter. "},
			{"spoken" : "run document","action" : "Press cmd-alt-r. "},
			{"spoken" : "run from top","action" : "Press cmd-alt-b. "},
			{"spoken" : "run to end","action" : "Press cmd-alt-e. "},
			{"spoken" : "run (function|funk)","action" : "Press cmd-alt-f. "},
			{"spoken" : "run section","action" : "Press cmd-alt-t. "},
			{"spoken" : "run previous chunks","action" : "Press cmd-alt-p. "},
			{"spoken" : "run chunk","action" : "Press cmd-alt-c. "},
			{"spoken" : "run next chunk","action" : "Press cmd-alt-n. "},
			{"spoken" : "run all","action" : "Press cmd-shift-s. "},
			{"spoken" : "run knitter","action" : "Press cmd-shift-k. "},
			{"spoken" : "run profiler","action" : "Press cmd-shift-alt-p. "},
			{"spoken" : "jump back","action" : "Press cmd-f9. "},
			{"spoken" : "jump forward","action" : "Press cmd-f10. "},
			{"spoken" : "close all tabs","action" : "Press cmd-shift-w. "},
			{"spoken" : "indent lines","action" : "Press cmd-i. "},
			{"spoken" : "toggle comment","action" : "Press cmd-shift-c. "},
			{"spoken" : "reformat comment","action" : "Press cmd-shift-/. "},
			{"spoken" : "reformat R code","action" : "Press cmd-shift-a. "},
			{"spoken" : "line up","action" : "Press alt-up. "},
			{"spoken" : "line down","action" : "Press alt-down. "},
			{"spoken" : "duplicate line up","action" : "Press cmd-alt-up. "},
			{"spoken" : "duplicate line [down]","action" : "Press cmd-alt-down. "},
			{"spoken" : "select to paren","action" : "Press ctrl-shift-e. "},
			{"spoken" : "select to matching paren","action" : "Press ctrl-shift-alt-e. "},
			{"spoken" : "jump to matching","action" : "Press ctrl-p. "},
			{"spoken" : "expand selection","action" : "Press shift-alt-cmd-up. "},
			{"spoken" : "reduce selection","action" : "Press shift-alt-cmd-down. "},
			{"spoken" : "add cursor up","action" : "Press ctrl-alt-up. "},
			{"spoken" : "add cursor down","action" : "Press ctrl-alt-down. "},
			{"spoken" : "move active cursor up","action" : "Press ctrl-alt-shift-up. "},
			{"spoken" : "move active cursor down","action" : "Press ctrl-alt-shift-down. "},
			{"spoken" : "delete line","action" : "Press cmd-d. "},
			{"spoken" : "delete word left","action" : "Press alt-backspace. "},
			{"spoken" : "delete word right","action" : "Press alt-delete. "},
			{"spoken" : "assign that","action" : "Press alt--. "},
			{"spoken" : "pipe that","action" : "Press cmd-shift-m. "},
			{"spoken" : "insert knitter chunk","action" : "Press cmd-alt-i. "},
			{"spoken" : "fold that","action" : "Press cmd-alt-l. "},
			{"spoken" : "unfold that","action" : "Press cmd-shift-alt-l. "},
			{"spoken" : "fold all","action" : "Press cmd-alt-o. "},
			{"spoken" : "unfold all","action" : "Press cmd-shift-alt-o. "},
			{"spoken" : "find and replace","action" : "Press cmd-f. "},
			{"spoken" : "find next","action" : "Press cmd-g. "},
			{"spoken" : "find previous","action" : "Press cmd-shift-g. "},
			{"spoken" : "find with selection","action" : "Press cmd-e. "},
			{"spoken" : "find in files","action" : "Press cmd-shift-f. "},
			{"spoken" : "run replace","action" : "Press cmd-shift-j. "},
			{"spoken" : "run spell check","action" : "Press f7. "},
			{"spoken" : "go to source","action" : "Press ctrl-1. "},
			{"spoken" : "go to console","action" : "Press ctrl-2. "},
			{"spoken" : "go to help","action" : "Press ctrl-3. "},
			{"spoken" : "go to history","action" : "Press ctrl-4. "},
			{"spoken" : "go to files","action" : "Press ctrl-5. "},
			{"spoken" : "go to (plots|plot)","action" : "Press ctrl-6. "},
			{"spoken" : "go to packages","action" : "Press ctrl-7. "},
			{"spoken" : "go to environment","action" : "Press ctrl-8. "},
			{"spoken" : "go to git","action" : "Press ctrl-9. "},
			{"spoken" : "go to build","action" : "Press ctrl-0. "},
			{"spoken" : "go to terminal","action" : "Press alt-shift-t. "},
			{"spoken" : "go to omni","action" : "Press ctrl-.. "},
			{"spoken" : "go to line","action" : "Press cmd-shift-alt-g. "},
			{"spoken" : "go to section","action" : "Press cmd-shift-alt-j. "},
			{"spoken" : "go to tab","action" : "Press ctrl-shift-.. "},
			{"spoken" : "go to previous tab","action" : "Press ctrl-f11. "},
			{"spoken" : "go to next tab","action" : "Press ctrl-f12. "},
			{"spoken" : "go to first tab","action" : "Press ctrl-shift-f11. "},
			{"spoken" : "go to last tab","action" : "Press ctrl-shift-f12. "},
			{"spoken" : "zoom source","action" : "Press ctrl-shift-1. "},
			{"spoken" : "(zoom|show) all","action" : "Press ctrl-shift-0. "},
			{"spoken" : "help that","action" : "Press f1. "},
			{"spoken" : "define that","action" : "Press f2. "},
			{"spoken" : "previous plot","action" : "Press cmd-alt-f11. "},
			{"spoken" : "next plot","action" : "Press cmd-alt-f12. "},
			{"spoken" : "restart R session","action" : "Press cmd-shift-f10. "},
			{"spoken" : "dev tools build","action" : "Press cmd-shift-b. "},
			{"spoken" : "dev tools load all","action" : "Press cmd-shift-l. "},
			{"spoken" : "dev tools test","action" : "Press cmd-shift-t. "},
			{"spoken" : "dev tools check","action" : "Press cmd-shift-e. "},
			{"spoken" : "dev tools document","action" : "Press cmd-shift-d. "},
			{"spoken" : "toggle breakpoint","action" : "Press shift-f9. "},
			{"spoken" : "debug next","action" : "Press f10. "},
			{"spoken" : "debug step into (function|funk)","action" : "Press shift-f4. "},
			{"spoken" : "debug finish (function|funk)","action" : "Press shift-f6. "},
			{"spoken" : "debug continue","action" : "Press shift-f5. "},
			{"spoken" : "debug stop","action" : "Press shift-f8. "},
			{"spoken" : "run git diff","action" : "Press ctrl-alt-d. "},
			{"spoken" : "run git commit","action" : "Press ctrl-alt-m. "},

		],
		"Apple Terminal (MacOS)": [
			{"spoken" : "suspend","action" : "Press ctrl-z. "},
			{"spoken" : "resume","action" : "Insert \"fg\". Press enter. "},

		],
		"Explorer (Windows)": [
			{"spoken" : "go  <a href=\"#user-letter-capture\"> &lt;user.letter&gt; </a> ","action" : "file_manager_open_volume. "},
			{"spoken" : "go app data","action" : "opens the directory that's already visible in the view. "},
			{"spoken" : "go program files","action" : "opens the directory that's already visible in the view. "},

		],
		"Outlook (Windows)": [
			{"spoken" : "archive","action" : "Press alt h o 1. "},
			{"spoken" : "new e-mail","action" : "Press ctrl-n. "},
			{"spoken" : "calendar","action" : "Press ctrl-2. "},
			{"spoken" : "inbox","action" : "Press ctrl-1. "},
			{"spoken" : "Reply","action" : "Press ctrl-r. "},
			{"spoken" : "Reply all","action" : "Press ctrl-shift-r. "},
			{"spoken" : "Forward","action" : "Press ctrl-f. "},
			{"spoken" : "accept","action" : "Press shift-f10 c c enter. "},

		],
		"Windows Terminal (Windows)": [
			{"spoken" : "settings open","action" : "Press ctrl-,. "},
			{"spoken" : "focus left","action" : "Press ctrl-alt-shift-left. "},
			{"spoken" : "focus right","action" : "Press ctrl-alt-shift-right. "},
			{"spoken" : "focus up","action" : "Press ctrl-alt-shift-up. "},
			{"spoken" : "focus down","action" : "Press ctrl-alt-shift-down. "},
			{"spoken" : "term menu","action" : "Press ctrl-shift-f1. "},
			{"spoken" : "find it","action" : "Open Find dialog, optionally searching for text. "},
			{"spoken" : "find it  &lt;phrase&gt;  ","action" : "Press escape. Open Find dialog, optionally searching for text. "},

		],
		"Wsl (Windows)": [
			{"spoken" : "go  <a href=\"#user-letter-capture\"> &lt;user.letter&gt; </a> ","action" : "file_manager_open_volume. "},
			{"spoken" : "(wsl|weasel) reset path detection","action" : "reset wsl path detection. "},
			{"spoken" : "(wsl|weasel) speak","action" : "ask each distro to say hello (in the log). "},

		],
		"Slack Mac (MacOS)": [
			{"spoken" : "workspace  &lt;number&gt;  ","action" : "Press cmd- <number>. "},
			{"spoken" : "(slack | lack) [channel] info","action" : "Press cmd-shift-i. "},
			{"spoken" : "focus (move | next)","action" : "Press ctrl-`. "},
			{"spoken" : "(section | zone) [next]","action" : "Press f6. "},
			{"spoken" : "(section | zone) (previous | last)","action" : "Press shift-f6. "},
			{"spoken" : "(slack | lack) [direct] messages","action" : "Press cmd-shift-k. "},
			{"spoken" : "(slack | lack) threads","action" : "Press cmd-shift-t. "},
			{"spoken" : "(slack | lack) (history [next] | back | backward)","action" : "Press cmd-[. "},
			{"spoken" : "(slack | lack) forward","action" : "Press cmd-]. "},
			{"spoken" : "(element | bit) [next]","action" : "Press tab. "},
			{"spoken" : "(element | bit) (previous | last)","action" : "Press shift-tab. "},
			{"spoken" : "(slack | lack) (my stuff | activity)","action" : "Press cmd-shift-m. "},
			{"spoken" : "(slack | lack) directory","action" : "Press cmd-shift-e. "},
			{"spoken" : "(slack | lack) (starred [items] | stars)","action" : "Press cmd-shift-s. "},
			{"spoken" : "(slack | lack) unread [messages]","action" : "Press cmd-shift-a. "},
			{"spoken" : "(go | undo | toggle) full","action" : "Press ctrl-cmd-f. "},
			{"spoken" : "grab left","action" : "Press shift-up. "},
			{"spoken" : "grab right","action" : "Press shift-down. "},
			{"spoken" : "add line","action" : "Press shift-enter. "},
			{"spoken" : "(slack | lack) (slap | slaw | slapper)","action" : "Press cmd-right shift-enter. "},
			{"spoken" : "(slack | lack) (react | reaction)","action" : "Press cmd-shift-\\. "},
			{"spoken" : "(insert command | commandify)","action" : "Press cmd-shift-c. "},
			{"spoken" : "insert link","action" : "Press cmd-shift-u. "},
			{"spoken" : "insert code","action" : "Press cmd-shift-alt-c. "},
			{"spoken" : "(slack | lack) (bull | bullet | bulleted) [list]","action" : "Press cmd-shift-8. "},
			{"spoken" : "(slack | lack) (number | numbered) [list]","action" : "Press cmd-shift-7. "},
			{"spoken" : "(slack | lack) (quotes | quotation)","action" : "Press cmd-shift->. "},
			{"spoken" : "bold","action" : "Press cmd-b. "},
			{"spoken" : "(italic | italicize)","action" : "Press cmd-i. "},
			{"spoken" : "(strike | strikethrough)","action" : "Press cmd-shift-x. "},
			{"spoken" : "(slack | lack) snippet","action" : "Press cmd-shift-enter. "},
			{"spoken" : "([toggle] mute | unmute)","action" : "Press m. "},
			{"spoken" : "(slack | lack) huddle","action" : "Press cmd-shift-h. "},
			{"spoken" : "(slack | lack) ([toggle] video)","action" : "Press v. "},
			{"spoken" : "(slack | lack) invite","action" : "Press a. "},
			{"spoken" : "(slack | lack) shortcuts","action" : "Press cmd-/. "},
			{"spoken" : "emote  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Insert \"<text>\". "},
			{"spoken" : "toggle left sidebar","action" : "Press cmd-shift-d. "},
			{"spoken" : "toggle right sidebar","action" : "Press cmd-.. "},
			{"spoken" : "(move | next) focus","action" : "Show a desktop notification. Press ctrl-`. "},
			{"spoken" : "[next] (section | zone)","action" : "Show a desktop notification. Press f6. "},
			{"spoken" : "(previous | last) (section | zone)","action" : "Show a desktop notification. Press shift-f6. "},
			{"spoken" : "[next] (element | bit)","action" : "Show a desktop notification. Press tab. "},
			{"spoken" : "(previous | last) (element | bit)","action" : "Show a desktop notification. Press shift-tab. "},

		],
		"Slack Win (Windows)": [
			{"spoken" : "workspace  &lt;number&gt;  ","action" : "Press ctrl- <number>. "},
			{"spoken" : "(slack | lack) [channel] info","action" : "Press ctrl-shift-i. "},
			{"spoken" : "focus (move | next)","action" : "Press ctrl-`. "},
			{"spoken" : "(section | zone) [next]","action" : "Press f6. "},
			{"spoken" : "(section | zone) (previous | last)","action" : "Press shift-f6. "},
			{"spoken" : "(slack | lack) [direct] messages","action" : "Press ctrl-shift-k. "},
			{"spoken" : "(slack | lack) threads","action" : "Press ctrl-shift-t. "},
			{"spoken" : "(slack | lack) (history [next] | back | backward)","action" : "Press alt-left. "},
			{"spoken" : "(slack | lack) forward","action" : "Press alt-right. "},
			{"spoken" : "(element | bit) [next]","action" : "Press tab. "},
			{"spoken" : "(element | bit) (previous | last)","action" : "Press shift-tab. "},
			{"spoken" : "(slack | lack) (my stuff | activity)","action" : "Press ctrl-shift-m. "},
			{"spoken" : "(slack | lack) directory","action" : "Press ctrl-shift-e. "},
			{"spoken" : "(slack | lack) (starred [items] | stars)","action" : "Press ctrl-shift-s. "},
			{"spoken" : "(slack | lack) unread [messages]","action" : "Press ctrl-shift-a. "},
			{"spoken" : "grab left","action" : "Press shift-up. "},
			{"spoken" : "grab right","action" : "Press shift-down. "},
			{"spoken" : "add line","action" : "Press shift-enter. "},
			{"spoken" : "(slack | lack) (react | reaction)","action" : "Press ctrl-shift-\\. "},
			{"spoken" : "(insert command | commandify)","action" : "Press ctrl-shift-c. "},
			{"spoken" : "insert code","action" : "Insert \"```\". "},
			{"spoken" : "(slack | lack) (bull | bullet | bulleted) [list]","action" : "Press ctrl-shift-8. "},
			{"spoken" : "(slack | lack) (number | numbered) [list]","action" : "Press ctrl-shift-7. "},
			{"spoken" : "(slack | lack) (quotes | quotation)","action" : "Press ctrl-shift-9. "},
			{"spoken" : "bold","action" : "Press ctrl-b. "},
			{"spoken" : "(italic | italicize)","action" : "Press ctrl-i. "},
			{"spoken" : "(strike | strikethrough)","action" : "Press ctrl-shift-x. "},
			{"spoken" : "(slack | lack) snippet","action" : "Press ctrl-shift-enter. "},
			{"spoken" : "([toggle] mute | unmute)","action" : "Press m. "},
			{"spoken" : "(slack | lack) ([toggle] video)","action" : "Press v. "},
			{"spoken" : "(slack | lack) invite","action" : "Press a. "},
			{"spoken" : "(slack | lack) shortcuts","action" : "Press ctrl-/. "},
			{"spoken" : "emote  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Insert \"<text>\". "},
			{"spoken" : "toggle left sidebar","action" : "Press ctrl-shift-d. "},
			{"spoken" : "toggle right sidebar","action" : "Press ctrl-.. "},
			{"spoken" : "(move | next) focus","action" : "Show a desktop notification. Press ctrl-`. "},
			{"spoken" : "[next] (section | zone)","action" : "Show a desktop notification. Press f6. "},
			{"spoken" : "(previous | last) (section | zone)","action" : "Show a desktop notification. Press shift-f6. "},
			{"spoken" : "[next] (element | bit)","action" : "Show a desktop notification. Press tab. "},
			{"spoken" : "(previous | last) (element | bit)","action" : "Show a desktop notification. Press shift-tab. "},

		],
		"Talon Repl": [
			{"spoken" : "test last","action" : "Let <phrase> be the history entry at the specified index. Let <command> be sim(' <phrase> '). Insert \"<command>\". Press enter. "},
			{"spoken" : "test  &lt;phrase&gt;  ","action" : "Insert \"sim(' <phrase> ')\". Press enter. "},
			{"spoken" : "test numb  &lt;number-small&gt;  ","action" : "Let <phrase> be the history entry at the specified index. Let <command> be sim(' <phrase> '). Insert \"<command>\". Press enter. "},
			{"spoken" : "debug action <a href=\"#user-talon-actions-list\">  {user.talon-actions}  </a>","action" : "Insert \"actions.find(' <user.talon_actions> ')\". Press enter. "},
			{"spoken" : "debug list <a href=\"#user-talon-lists-list\">  {user.talon-lists}  </a>","action" : "Insert \"actions.user.talon_pretty_print(registry.lists[' <talon_lists> '])\". Press enter. "},
			{"spoken" : "debug tags","action" : "Insert \"actions.user.talon_pretty_print(registry.tags)\". Press enter. "},
			{"spoken" : "debug settings","action" : "Insert \"actions.user.talon_pretty_print(registry.settings)\". Press enter. "},
			{"spoken" : "debug modes","action" : "Insert \"actions.user.talon_pretty_print(scope.get('mode'))\". Press enter. "},
			{"spoken" : "debug scope <a href=\"#user-talon-scopes-list\">  {user.talon-scopes}  </a>","action" : "Insert \"actions.user.talon_pretty_print(scope.get(' <talon_scopes> '))\". Press enter. "},
			{"spoken" : "debug running apps","action" : "Insert \"actions.user.talon_pretty_print(ui.apps(background=False))\". Press enter. "},
			{"spoken" : "debug all windows","action" : "Insert \"actions.user.talon_pretty_print(ui.windows())\". Press enter. "},
			{"spoken" : "debug <a href=\"#user-running-list\">  {user.running}  </a> windows","action" : "Insert \"actions.user.talon_debug_app_windows(' <running> ')\". Press enter. "},

		],
		"Teams": [
			{"spoken" : "show shortcuts","action" : "Press ctrl-.. "},
			{"spoken" : "[go] [to] search","action" : "Press ctrl-e. "},
			{"spoken" : "show commands","action" : "Press ctrl-/. "},
			{"spoken" : "open filter","action" : "Press ctrl-shift-f. "},
			{"spoken" : "go to","action" : "Press ctrl-g. "},
			{"spoken" : "open (apps|applications)","action" : "Press ctrl-`. "},
			{"spoken" : "[start] new chat","action" : "Press ctrl-n. "},
			{"spoken" : "open settings","action" : "Press ctrl-,. "},
			{"spoken" : "open help","action" : "Press f1. "},
			{"spoken" : "close","action" : "Press escape. "},
			{"spoken" : "open activity","action" : "Press ctrl-1. "},
			{"spoken" : "open chat","action" : "Press ctrl-2. "},
			{"spoken" : "open teams","action" : "Press ctrl-3. "},
			{"spoken" : "open calendar","action" : "Press ctrl-4. "},
			{"spoken" : "open planner","action" : "Press ctrl-5. "},
			{"spoken" : "open calls","action" : "Press ctrl-6. "},
			{"spoken" : "open files","action" : "Press ctrl-7. "},
			{"spoken" : "[go] [to] (prev|previous) [list] item","action" : "Press alt-up. "},
			{"spoken" : "[go] [to] next [list] item","action" : "Press alt-down. "},
			{"spoken" : "move [selected] team up","action" : "Press ctrl-shift-up. "},
			{"spoken" : "move [selected] team down","action" : "Press ctrl-shift-down. "},
			{"spoken" : "[go] [to] (prev|previous) section","action" : "Press ctrl-shift-f6. "},
			{"spoken" : "[go] [to] next section","action" : "Press ctrl-f6. "},
			{"spoken" : "[go] [to] compose [box]","action" : "Press c. "},
			{"spoken" : "[expand] compose [box]","action" : "Press ctrl-shift-x. "},
			{"spoken" : "send","action" : "Press ctrl-enter. "},
			{"spoken" : "attach file","action" : "Press ctrl-o. "},
			{"spoken" : "[start] new line","action" : "Press shift-enter. "},
			{"spoken" : "reply [to] [thread]","action" : "Press r. "},
			{"spoken" : "accept video call","action" : "Press ctrl-shift-a. "},
			{"spoken" : "accept audio call","action" : "Press ctrl-shift-s. "},
			{"spoken" : "decline call","action" : "Press ctrl-shift-d. "},
			{"spoken" : "start audio call","action" : "Press ctrl-shift-c. "},
			{"spoken" : "start video call","action" : "Press ctrl-shift-u. "},
			{"spoken" : "toggle mute","action" : "Press ctrl-shift-m. "},
			{"spoken" : "starch screen share session","action" : "Press ctrl-shift-e. "},
			{"spoken" : "toggle video","action" : "Press ctrl-shift-o. "},
			{"spoken" : "[go] [to] sharing toolbar","action" : "Press ctrl-shift-space. "},
			{"spoken" : "decline screen share","action" : "Press ctrl-shift-d. "},
			{"spoken" : "accept screen share","action" : "Press ctrl-shift-a. "},
			{"spoken" : "schedule [a] meeting","action" : "Press alt-shift-n. "},
			{"spoken" : "go to current time","action" : "Press alt-.. "},
			{"spoken" : "go to (prev|previous) (day|week)","action" : "Press ctrl-alt-left. "},
			{"spoken" : "go to next (day|week)","action" : "Press ctrl-alt-right. "},
			{"spoken" : "view day","action" : "Press ctrl-alt-1. "},
			{"spoken" : "view work week","action" : "Press ctrl-alt-2. "},
			{"spoken" : "view week","action" : "Press ctrl-alt-3. "},
			{"spoken" : "(safe|send) meeting request","action" : "Press ctrl-s. "},
			{"spoken" : "join [from] meeting [details]","action" : "Press alt-shift-j. "},
			{"spoken" : "go to suggested time","action" : "Press alt-shift-s. "},

		],
		"Teams Mac (MacOS)": [
			{"spoken" : "open history","action" : "Press super-shift-h. "},
			{"spoken" : "view shortcuts","action" : "Press super-.. "},
			{"spoken" : "show shortcuts","action" : "Press super-.. "},
			{"spoken" : "[go] [to] search","action" : "Press super-e. "},
			{"spoken" : "show commands","action" : "Press super-/. "},
			{"spoken" : "open filter","action" : "Press super-shift-f. "},
			{"spoken" : "go to","action" : "Press super-g. "},
			{"spoken" : "open (apps|applications)","action" : "Press ctrl-`. "},
			{"spoken" : "[start] new chat","action" : "Press super-n. "},
			{"spoken" : "open settings","action" : "Press super-,. "},
			{"spoken" : "open help","action" : "Press f1. "},
			{"spoken" : "close","action" : "Press escape. "},
			{"spoken" : "reset","action" : "Press escape. Press escape. Press escape. Press escape. "},
			{"spoken" : "zoom reset","action" : "Press super-0. "},
			{"spoken" : "open (act|activity)","action" : "Press super-1. "},
			{"spoken" : "open chat","action" : "Press super-2. "},
			{"spoken" : "open teams","action" : "Press super-3. "},
			{"spoken" : "open calendar","action" : "Press super-4. "},
			{"spoken" : "open calls","action" : "Press super-5. "},
			{"spoken" : "open files","action" : "Press super-6. "},
			{"spoken" : "[go] [to] (prev|previous) [list] item","action" : "Press alt-up. "},
			{"spoken" : "[go] [to] next [list] item","action" : "Press alt-down. "},
			{"spoken" : "move [selected] team up","action" : "Press super-shift-up. "},
			{"spoken" : "move [selected] team down","action" : "Press super-shift-down. "},
			{"spoken" : "[go] [to] (prev|previous) section","action" : "Press super-shift-f6. "},
			{"spoken" : "[go] [to] next section","action" : "Press super-f6. "},
			{"spoken" : "[go] [to] compose [box]","action" : "Press shift-alt-c. "},
			{"spoken" : "[expand] compose [box]","action" : "Press super-shift-x. "},
			{"spoken" : "send message","action" : "Press super-enter. "},
			{"spoken" : "attach file","action" : "Press shift-alt-o. "},
			{"spoken" : "attach local file","action" : "Press shift-alt-o. Press down. Press space. "},
			{"spoken" : "[start] new line","action" : "Press shift-enter. "},
			{"spoken" : "reply [to] [thread]","action" : "Press shift-alt-r. "},
			{"spoken" : "accept video call","action" : "Press super-shift-a. "},
			{"spoken" : "accept audio call","action" : "Press super-shift-s. "},
			{"spoken" : "decline call","action" : "Press super-shift-d. "},
			{"spoken" : "start audio call","action" : "Press super-shift-c. "},
			{"spoken" : "start video call","action" : "Press super-shift-u. "},
			{"spoken" : "toggle mute","action" : "Press super-shift-m. "},
			{"spoken" : "starch screen share session","action" : "Press super-shift-e. "},
			{"spoken" : "toggle video","action" : "Press super-shift-o. "},
			{"spoken" : "[go] [to] sharing toolbar","action" : "Press super-shift-space. "},
			{"spoken" : "decline screen share","action" : "Press super-shift-d. "},
			{"spoken" : "accept screen share","action" : "Press super-shift-a. "},
			{"spoken" : "schedule [a] meeting","action" : "Press alt-shift-n. "},
			{"spoken" : "go to current time","action" : "Press alt-.. "},
			{"spoken" : "go to (prev|previous) (day|week)","action" : "Press super-alt-left. "},
			{"spoken" : "go to next (day|week)","action" : "Press super-alt-right. "},
			{"spoken" : "view day","action" : "Press super-alt-1. "},
			{"spoken" : "view work week","action" : "Press super-alt-2. "},
			{"spoken" : "view week","action" : "Press super-alt-3. "},
			{"spoken" : "(save|send) meeting request","action" : "Press super-s. "},
			{"spoken" : "join [from] meeting [details]","action" : "Press alt-shift-j. "},
			{"spoken" : "go to suggested time","action" : "Press alt-shift-s. "},
			{"spoken" : "(raise|lower) hand","action" : "Press super-shift-k. "},
			{"spoken" : "leave team meeting","action" : "Press super-shift-h. "},

		],
		"Terraform": [
			{"spoken" : "terraform","action" : "Insert \"terraform \". "},
			{"spoken" : "terraform apply","action" : "Insert \"terraform apply \". "},
			{"spoken" : "terraform destroy","action" : "Insert \"terraform destroy \". "},
			{"spoken" : "terraform format recursive","action" : "Insert \"terraform fmt -recursive\\n\". "},
			{"spoken" : "terraform format","action" : "Insert \"terraform fmt\\n\". "},
			{"spoken" : "terraform help","action" : "Insert \"terraform -help\". "},
			{"spoken" : "terraform init upgrade","action" : "Insert \"terraform init -upgrade\\n\". "},
			{"spoken" : "terraform init","action" : "Insert \"terraform init\\n\". "},
			{"spoken" : "terraform plan","action" : "Insert \"terraform plan\\n\". "},
			{"spoken" : "terraform state move","action" : "Insert \"terraform state mv \". "},
			{"spoken" : "terraform validate","action" : "Insert \"terraform validate\\n\". "},

		],
		"Thunderbird": [
			{"spoken" : "go (mails | messages | inbox)","action" : "Jumps to the specified tab. "},
			{"spoken" : "go (calendar | lightning)","action" : "Press keys with modifier ctrl or cmd. "},
			{"spoken" : "go tasks","action" : "Press keys with modifier ctrl or cmd. "},
			{"spoken" : "(open address [book] | address book | open contacts)","action" : "Press keys with modifier ctrl or cmd. "},
			{"spoken" : "dev tools","action" : "Press keys with modifier ctrl or cmd. "},

		],
		"Thunderbird Calendar": [
			{"spoken" : "event new","action" : "Press keys with modifier ctrl or cmd. "},
			{"spoken" : "task new","action" : "Press keys with modifier ctrl or cmd. "},
			{"spoken" : "(task | event) delete","action" : "Press delete. "},
			{"spoken" : "toggle today","action" : "Press f11. "},
			{"spoken" : "view  &lt;number-small&gt;  ","action" : "Select between calendar view tabs. "},
			{"spoken" : "view day","action" : "Select between calendar view tabs. "},
			{"spoken" : "view week","action" : "Select between calendar view tabs. "},
			{"spoken" : "view multi [week]","action" : "Select between calendar view tabs. "},
			{"spoken" : "view month","action" : "Select between calendar view tabs. "},

		],
		"Thunderbird Composer": [
			{"spoken" : "(draft | mail | message) save","action" : "Press keys with modifier ctrl or cmd. "},
			{"spoken" : "(draft | mail | message) print","action" : "Press keys with modifier ctrl or cmd. "},
			{"spoken" : "(draft | mail | message) send","action" : "Press keys with modifier ctrl or cmd. "},
			{"spoken" : "toggle contacts","action" : "Press f9. "},
			{"spoken" : "go (inbox | thunderbird | main)","action" : "Press keys with modifier ctrl or cmd. "},
			{"spoken" : "cite paste","action" : "Press keys with modifier ctrl or cmd. "},
			{"spoken" : "(unformatted | raw) paste","action" : "Press keys with modifier ctrl or cmd. "},
			{"spoken" : "link new","action" : "Press keys with modifier ctrl or cmd. "},
			{"spoken" : "link delete","action" : "Press keys with modifier ctrl or cmd. "},

		],
		"Thunderbird Contacts": [
			{"spoken" : "contact new","action" : "Press keys with modifier ctrl or cmd. "},
			{"spoken" : "contact edit","action" : "Press keys with modifier ctrl or cmd. "},
			{"spoken" : "contact delete","action" : "Press delete. "},
			{"spoken" : "contact print","action" : "Press keys with modifier ctrl or cmd. "},
			{"spoken" : "contact message","action" : "Press keys with modifier ctrl or cmd. "},
			{"spoken" : "contact up","action" : "Press up. "},
			{"spoken" : "contact down","action" : "Press down. "},

		],
		"Thunderbird Inbox": [
			{"spoken" : "(mail | message) open","action" : "Press enter. "},
			{"spoken" : "(mail | message) (up | last)","action" : "Press b. "},
			{"spoken" : "(mail | message) (down | next)","action" : "Press f. "},
			{"spoken" : "unread [mail | message] (up | last)","action" : "Press p. "},
			{"spoken" : "unread [mail | message] (down | next)","action" : "Press n. "},
			{"spoken" : "go home","action" : "Press alt-home. "},
			{"spoken" : "toggle (mail | message) [pane]","action" : "Press f8. "},
			{"spoken" : "(mail | message) (favorite | unfavorite)","action" : "Press s. "},
			{"spoken" : "(mail | message) (read | unread)","action" : "Press m. "},
			{"spoken" : "(mail | message) (watch | unwatch)","action" : "Press w. "},
			{"spoken" : "(mail | message) (ignore | unignore)","action" : "Press k. "},
			{"spoken" : "(mail | message) suspend","action" : "Press c. "},
			{"spoken" : "(mail | message) spam","action" : "Press j. "},
			{"spoken" : "(mail | message) new","action" : "Press keys with modifier ctrl or cmd. "},
			{"spoken" : "(mail | message) edit","action" : "Press keys with modifier ctrl or cmd. "},
			{"spoken" : "(mail | message) reply sender","action" : "Press keys with modifier ctrl or cmd. "},
			{"spoken" : "(mail | message) reply all","action" : "Press keys with modifier ctrl or cmd. "},
			{"spoken" : "(mail | message) reply list","action" : "Press keys with modifier ctrl or cmd. "},
			{"spoken" : "(mail | message) forward","action" : "Press keys with modifier ctrl or cmd. "},
			{"spoken" : "(mail | message) delete","action" : "Press delete. "},
			{"spoken" : "(mail | message) archive","action" : "Press a. "},
			{"spoken" : "(mail | message) save","action" : "Press keys with modifier ctrl or cmd. "},
			{"spoken" : "(mail | message) print","action" : "Press keys with modifier ctrl or cmd. "},

		],
		"Thunderbird Tasks": [
			{"spoken" : "event new","action" : "Press keys with modifier ctrl or cmd. "},
			{"spoken" : "task new","action" : "Press keys with modifier ctrl or cmd. "},
			{"spoken" : "(task | event) delete","action" : "Press delete. "},
			{"spoken" : "toggle today","action" : "Press f11. "},

		],
		"Visual Studio": [
			{"spoken" : "panel solution","action" : "Press ctrl-alt-l. "},
			{"spoken" : "panel properties","action" : "Press f4. "},
			{"spoken" : "panel output","action" : "Press ctrl-alt-o. "},
			{"spoken" : "panel class","action" : "Press ctrl-shift-c. "},
			{"spoken" : "panel errors","action" : "Press ctrl-\\ ctrl-e. "},
			{"spoken" : "panel design","action" : "Press shift-f7. "},
			{"spoken" : "panel marks","action" : "Press ctrl-k ctrl-w. "},
			{"spoken" : "panel breakpoints","action" : "Press ctrl-alt-b. "},
			{"spoken" : "show settings","action" : "Press alt-t o. "},
			{"spoken" : "fullscreen switch","action" : "Press shift-alt-enter. "},
			{"spoken" : "wrap switch","action" : "Press ctrl-e ctrl-w. "},
			{"spoken" : "file hunt [ <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ]","action" : "Press ctrl-shift-t. Insert \"<text> or \". "},
			{"spoken" : "file create","action" : "Press ctrl-n. "},
			{"spoken" : "file rename","action" : "Press ctrl-[ s f2. "},
			{"spoken" : "file reveal","action" : "Press ctrl-[ s. "},
			{"spoken" : "hint show","action" : "Press ctrl-shift-space. "},
			{"spoken" : "definition show","action" : "Press f12. "},
			{"spoken" : "definition peek","action" : "Press alt-f12. "},
			{"spoken" : "references find","action" : "Press shift-f12. "},
			{"spoken" : "format that","action" : "Press ctrl-k ctrl-d. "},
			{"spoken" : "format selection","action" : "Press ctrl-k ctrl-f. "},
			{"spoken" : "imports fix","action" : "Press ctrl-r ctrl-g. "},
			{"spoken" : "refactor field","action" : "Press ctrl-r ctrl-e. "},
			{"spoken" : "refactor interface","action" : "Press ctrl-r ctrl-i. "},
			{"spoken" : "refactor method","action" : "Press ctrl-r ctrl-m. "},
			{"spoken" : "refactor reorder parameters","action" : "Press ctrl-r ctrl-o. "},
			{"spoken" : "refactor remove parameters","action" : "Press ctrl-r ctrl-v. "},
			{"spoken" : "refactor that","action" : "Press ctrl-r ctrl-r. "},
			{"spoken" : "(go declaration | follow)","action" : "Press ctrl-f12. "},
			{"spoken" : "go back","action" : "Press ctrl--. "},
			{"spoken" : "go forward","action" : "Press ctrl-shift--. "},
			{"spoken" : "go implementation","action" : "Press f12. "},
			{"spoken" : "go recent [ <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ]","action" : "Press ctrl-1 ctrl-r. Insert \"<text> or \". "},
			{"spoken" : "go type [ <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ]","action" : "Press ctrl-1 ctrl-t. Insert \"<text> or \". "},
			{"spoken" : "go member [ <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ]","action" : "Press alt-\\. Insert \"<text> or \". "},
			{"spoken" : "go usage","action" : "Press shift-f12. "},
			{"spoken" : "go marks","action" : "Press ctrl-k ctrl-w. "},
			{"spoken" : "toggle mark","action" : "Press ctrl-k ctrl-k. "},
			{"spoken" : "go next mark","action" : "Press ctrl-k ctrl-n. "},
			{"spoken" : "go last mark","action" : "Press ctrl-k ctrl-p. "},
			{"spoken" : "fold toggle","action" : "Press ctrl-m ctrl-m. "},
			{"spoken" : "fold toggle all","action" : "Press ctrl-m ctrl-l. "},
			{"spoken" : "fold definitions","action" : "Press ctrl-m ctrl-o. "},
			{"spoken" : "break point","action" : "Press f9. "},
			{"spoken" : "step over","action" : "Press f10. "},
			{"spoken" : "debug step into","action" : "Press f11. "},
			{"spoken" : "debug step out [of]","action" : "Press f10. "},
			{"spoken" : "debug start","action" : "Press f5. "},
			{"spoken" : "debug stopper","action" : "Press shift-f5. "},
			{"spoken" : "debug continue","action" : "Press f5. "},

		],
		"Vscode": [
			{"spoken" : "window reload","action" : ""},
			{"spoken" : "window close","action" : ""},
			{"spoken" : "please [ <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ]","action" : "Insert \"<user.text> or \". "},
			{"spoken" : "bar explore","action" : ""},
			{"spoken" : "bar extensions","action" : ""},
			{"spoken" : "bar outline","action" : ""},
			{"spoken" : "bar run","action" : ""},
			{"spoken" : "bar search","action" : ""},
			{"spoken" : "bar source","action" : ""},
			{"spoken" : "bar test","action" : ""},
			{"spoken" : "bar switch","action" : ""},
			{"spoken" : "symbol hunt [ <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ]","action" : "Insert \"<text> or \". "},
			{"spoken" : "panel control","action" : ""},
			{"spoken" : "panel output","action" : ""},
			{"spoken" : "panel problems","action" : ""},
			{"spoken" : "panel switch","action" : ""},
			{"spoken" : "panel terminal","action" : ""},
			{"spoken" : "focus editor","action" : ""},
			{"spoken" : "show settings","action" : ""},
			{"spoken" : "show settings json","action" : ""},
			{"spoken" : "show settings folder","action" : ""},
			{"spoken" : "show settings folder json","action" : ""},
			{"spoken" : "show settings workspace","action" : ""},
			{"spoken" : "show settings workspace json","action" : ""},
			{"spoken" : "show shortcuts","action" : ""},
			{"spoken" : "show snippets","action" : ""},
			{"spoken" : "centered switch","action" : ""},
			{"spoken" : "fullscreen switch","action" : ""},
			{"spoken" : "theme switch","action" : ""},
			{"spoken" : "wrap switch","action" : ""},
			{"spoken" : "zen switch","action" : ""},
			{"spoken" : "file hunt [ <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ]","action" : "Insert \"<text> or \". "},
			{"spoken" : "file hunt (pace | paste)","action" : "Paste clipboard at cursor. "},
			{"spoken" : "file copy name","action" : ""},
			{"spoken" : "file copy path","action" : ""},
			{"spoken" : "file copy local [path]","action" : ""},
			{"spoken" : "file create sibling","action" : "Execute command via vscode command server, if available, and wait. "},
			{"spoken" : "file create","action" : ""},
			{"spoken" : "file create relative","action" : ""},
			{"spoken" : "file create root","action" : ""},
			{"spoken" : "file rename","action" : ""},
			{"spoken" : "file move","action" : ""},
			{"spoken" : "file clone","action" : ""},
			{"spoken" : "file delete","action" : ""},
			{"spoken" : "file open folder","action" : ""},
			{"spoken" : "file reveal","action" : ""},
			{"spoken" : "save ugly","action" : ""},
			{"spoken" : "suggest show","action" : ""},
			{"spoken" : "hint show","action" : ""},
			{"spoken" : "definition show","action" : ""},
			{"spoken" : "definition peek","action" : ""},
			{"spoken" : "definition side","action" : ""},
			{"spoken" : "references show","action" : ""},
			{"spoken" : "references find","action" : ""},
			{"spoken" : "format that","action" : ""},
			{"spoken" : "format selection","action" : ""},
			{"spoken" : "imports fix","action" : ""},
			{"spoken" : "problem next","action" : ""},
			{"spoken" : "problem last","action" : ""},
			{"spoken" : "problem fix","action" : ""},
			{"spoken" : "rename that","action" : ""},
			{"spoken" : "refactor that","action" : ""},
			{"spoken" : "whitespace trim","action" : ""},
			{"spoken" : "language switch","action" : ""},
			{"spoken" : "refactor rename","action" : ""},
			{"spoken" : "refactor this","action" : ""},
			{"spoken" : "(go declaration | follow)","action" : ""},
			{"spoken" : "go back","action" : ""},
			{"spoken" : "go forward","action" : ""},
			{"spoken" : "go implementation","action" : ""},
			{"spoken" : "go type","action" : ""},
			{"spoken" : "go usage","action" : ""},
			{"spoken" : "go recent [ <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ]","action" : "Insert \"<text> or \". "},
			{"spoken" : "go edit","action" : ""},
			{"spoken" : "go marks","action" : ""},
			{"spoken" : "toggle mark","action" : ""},
			{"spoken" : "go next mark","action" : ""},
			{"spoken" : "go last mark","action" : ""},
			{"spoken" : "close other tabs","action" : ""},
			{"spoken" : "close all tabs","action" : ""},
			{"spoken" : "close tabs way right","action" : ""},
			{"spoken" : "close tabs way left","action" : ""},
			{"spoken" : "fold that","action" : ""},
			{"spoken" : "unfold that","action" : ""},
			{"spoken" : "fold those","action" : ""},
			{"spoken" : "unfold those","action" : ""},
			{"spoken" : "fold all","action" : ""},
			{"spoken" : "unfold all","action" : ""},
			{"spoken" : "fold comments","action" : ""},
			{"spoken" : "fold one","action" : ""},
			{"spoken" : "fold two","action" : ""},
			{"spoken" : "fold three","action" : ""},
			{"spoken" : "fold four","action" : ""},
			{"spoken" : "fold five","action" : ""},
			{"spoken" : "fold six","action" : ""},
			{"spoken" : "fold seven","action" : ""},
			{"spoken" : "git branch","action" : ""},
			{"spoken" : "git branch this","action" : ""},
			{"spoken" : "git checkout [ <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ]","action" : "Insert \"<text> or \". "},
			{"spoken" : "git commit [ <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ]","action" : "Inserts a phrase formatted according to formatters. Formatters is a comma separated list of formatters (e.g. 'CAPITALIZE_ALL_WORDS,DOUBLE_QUOTED_STRING'). "},
			{"spoken" : "git commit undo","action" : ""},
			{"spoken" : "git commit amend","action" : ""},
			{"spoken" : "git diff","action" : ""},
			{"spoken" : "git fetch","action" : ""},
			{"spoken" : "git fetch all","action" : ""},
			{"spoken" : "git ignore","action" : ""},
			{"spoken" : "git merge","action" : ""},
			{"spoken" : "git output","action" : ""},
			{"spoken" : "git pull","action" : ""},
			{"spoken" : "git push","action" : ""},
			{"spoken" : "git push focus","action" : ""},
			{"spoken" : "git rebase abort","action" : ""},
			{"spoken" : "git reveal","action" : ""},
			{"spoken" : "git revert","action" : ""},
			{"spoken" : "git stash","action" : ""},
			{"spoken" : "git stash pop","action" : ""},
			{"spoken" : "git status","action" : ""},
			{"spoken" : "git stage","action" : ""},
			{"spoken" : "git stage all","action" : ""},
			{"spoken" : "git sync","action" : ""},
			{"spoken" : "git unstage","action" : ""},
			{"spoken" : "git unstage all","action" : ""},
			{"spoken" : "pull request","action" : ""},
			{"spoken" : "change next","action" : "Press alt-f5. "},
			{"spoken" : "change last","action" : "Press shift-alt-f5. "},
			{"spoken" : "break point","action" : ""},
			{"spoken" : "step over","action" : ""},
			{"spoken" : "debug step into","action" : ""},
			{"spoken" : "debug step out [of]","action" : ""},
			{"spoken" : "debug start","action" : ""},
			{"spoken" : "debug pause","action" : ""},
			{"spoken" : "debug stopper","action" : ""},
			{"spoken" : "debug continue","action" : ""},
			{"spoken" : "debug restart","action" : ""},
			{"spoken" : "debug console","action" : ""},
			{"spoken" : "debug clean","action" : ""},
			{"spoken" : "terminal external","action" : ""},
			{"spoken" : "terminal new","action" : ""},
			{"spoken" : "terminal next","action" : ""},
			{"spoken" : "terminal last","action" : ""},
			{"spoken" : "terminal split","action" : ""},
			{"spoken" : "terminal zoom","action" : ""},
			{"spoken" : "terminal trash","action" : ""},
			{"spoken" : "terminal toggle","action" : "Execute command via vscode command server, if available, and wait. "},
			{"spoken" : "terminal scroll up","action" : ""},
			{"spoken" : "terminal scroll down","action" : ""},
			{"spoken" : "terminal  &lt;number-small&gt;  ","action" : "Activate a terminal by number. "},
			{"spoken" : "copy line down","action" : ""},
			{"spoken" : "copy line up","action" : ""},
			{"spoken" : "select less","action" : ""},
			{"spoken" : "select (more|this)","action" : ""},
			{"spoken" : "minimap","action" : ""},
			{"spoken" : "maximize","action" : ""},
			{"spoken" : "restore","action" : ""},
			{"spoken" : "select breadcrumb","action" : ""},
			{"spoken" : "replace here","action" : "Search and replace for text in the active editor. Press cmd-alt-l. "},
			{"spoken" : "hover show","action" : ""},
			{"spoken" : "join lines","action" : ""},
			{"spoken" : "full screen","action" : ""},
			{"spoken" : "curse undo","action" : ""},
			{"spoken" : "select word","action" : ""},
			{"spoken" : "skip word","action" : ""},
			{"spoken" : "cell next","action" : ""},
			{"spoken" : "cell last","action" : ""},
			{"spoken" : "cell run above","action" : ""},
			{"spoken" : "cell run","action" : ""},
			{"spoken" : "install local","action" : ""},
			{"spoken" : "preview markdown","action" : ""},

		],
		"Github": [
			{"spoken" : "focus search","action" : "Press s. "},
			{"spoken" : "go to notifications","action" : "Insert \"gn\". "},
			{"spoken" : "go to dashboard","action" : "Insert \"gd\". "},
			{"spoken" : "(keyboard shortcuts show | show keyboard shortcuts)","action" : "Press ?. "},
			{"spoken" : "(selection move down | move selection down)","action" : "Press j. "},
			{"spoken" : "(selection move up | move selection up)","action" : "Press k. "},
			{"spoken" : "(selection toggle | toggle selection)","action" : "Press x. "},
			{"spoken" : "(selection open | open selection)","action" : "Press o. "},
			{"spoken" : "go to code","action" : "Insert \"gc\". "},
			{"spoken" : "go to issues","action" : "Insert \"gi\". "},
			{"spoken" : "go to pull requests","action" : "Insert \"gp\". "},
			{"spoken" : "go to wiki","action" : "Insert \"gw\". "},
			{"spoken" : "go to actions","action" : "Insert \"ga\". "},
			{"spoken" : "go to projects","action" : "Insert \"gb\". "},
			{"spoken" : "go to discussions","action" : "Insert \"gg\". "},
			{"spoken" : "[web] editor open","action" : "Press .. "},
			{"spoken" : "(file find | find file)","action" : "Press t. "},
			{"spoken" : "jump to line","action" : "Press l. "},
			{"spoken" : "((branch|tag) switch | switch (branch|tag))","action" : "Press w. "},
			{"spoken" : "(url expand | expand url)","action" : "Press y. "},
			{"spoken" : "(show|hide) comments","action" : "Press i. "},
			{"spoken" : "blame view open","action" : "Press b. "},
			{"spoken" : "(show|hide) annotations","action" : "Press a. "},
			{"spoken" : "(issue create | create [an] issue)","action" : "Press c. "},
			{"spoken" : "search (issues|[pull] requests)","action" : "Press /. "},
			{"spoken" : "(filter by|edit) labels","action" : "Press l. "},
			{"spoken" : "(filter by|edit) milestones","action" : "Press m. "},
			{"spoken" : "(filter by|edit) assignee","action" : "Press a. "},
			{"spoken" : "reply","action" : "Press r. "},
			{"spoken" : "(comment submit | submit comment)","action" : "Press ctrl-enter. "},
			{"spoken" : "(comment preview | preview comment)","action" : "Press ctrl-shift-p. "},
			{"spoken" : "git hub full screen","action" : "Press ctrl-shift-l. "},
			{"spoken" : "(form close | close form)","action" : "Press escape. "},
			{"spoken" : "parent commit","action" : "Press p. "},
			{"spoken" : "other parent commit","action" : "Press o. "},
			{"spoken" : "mark as read","action" : "Press y. "},
			{"spoken" : "(thread mute | mute thread)","action" : "Press shift-m. "},
			{"spoken" : "(issue open | open issue)","action" : "Press o. "},
			{"spoken" : "(issue create | create issue)","action" : "Press c. "},
			{"spoken" : "reviewer request","action" : "Press q. "},
			{"spoken" : "milestone set","action" : "Press m. "},
			{"spoken" : "assignee set","action" : "Press a. "},
			{"spoken" : "label set","action" : "Press l. "},
			{"spoken" : "go to workflow","action" : "Insert \"gf\". "},
			{"spoken" : "timestamps toggle","action" : "Press shift-t. "},
			{"spoken" : "fullscreen toggle","action" : "Press shift-f. "},

		],
		"Gitlab": [
			{"spoken" : "show shortcuts","action" : "Press ?. "},
			{"spoken" : "go to projects [page]","action" : "Press shift-p. "},
			{"spoken" : "go to groups [page]","action" : "Press shift-g. "},
			{"spoken" : "go to activity [page]","action" : "Press shift-a. "},
			{"spoken" : "go to milestones [page]","action" : "Press shift-l. "},
			{"spoken" : "go to snippets [page]","action" : "Press shift-s. "},
			{"spoken" : "search page","action" : "Press s. "},
			{"spoken" : "go to issues [page]","action" : "Press shift-i. "},
			{"spoken" : "go to merge requests [page]","action" : "Press shift-m. "},
			{"spoken" : "go to to do [list] [page]","action" : "Press shift-t. "},
			{"spoken" : "(show|hide) performance bar","action" : "Press p. "},
			{"spoken" : "edit last comment","action" : "Press 1. "},
			{"spoken" : "toggle mark down [preview]","action" : "Press ctrl-shift-p. "},
			{"spoken" : "go [to] project home [page]","action" : "Insert \"gp\". "},
			{"spoken" : "go [to] project activity [feed]","action" : "Insert \"gv\". "},
			{"spoken" : "go [to] project releases [list]","action" : "Insert \"gr\". "},
			{"spoken" : "go [to] project files [list]","action" : "Insert \"gf\". "},
			{"spoken" : "go [to] project file search [page]","action" : "Press t. "},
			{"spoken" : "go [to] project (commit|commits) [list]","action" : "Insert \"gc\". "},
			{"spoken" : "go [to] (repository|repo) graph [page]","action" : "Insert \"gn\". "},
			{"spoken" : "go [to] (repository|repo) charts","action" : "Insert \"gd\". "},
			{"spoken" : "go [to] project issues [list]","action" : "Insert \"gi\". "},
			{"spoken" : "go [to] new issues [list]","action" : "Insert \"i\". "},
			{"spoken" : "go [to] project issues boards [list]","action" : "Insert \"gb\". "},
			{"spoken" : "go [to] project merge requests [list]","action" : "Insert \"gm\". "},
			{"spoken" : "go [to] jobs [list]","action" : "Insert \"gj\". "},
			{"spoken" : "go [to] project metrics","action" : "Insert \"gl\". "},
			{"spoken" : "go [to] project environments","action" : "Insert \"ge\". "},
			{"spoken" : "go [to] project cubes","action" : "Insert \"gk\". "},
			{"spoken" : "go [to] project snippets [list]","action" : "Insert \"gs\". "},
			{"spoken" : "go [to] project wiki","action" : "Insert \"gw\". "},
			{"spoken" : "edit description","action" : "Press e. "},
			{"spoken" : "change assignee","action" : "Press a. "},
			{"spoken" : "change milestone","action" : "Press m. "},
			{"spoken" : "change label","action" : "Press l. "},
			{"spoken" : "right comment","action" : "Press r. "},
			{"spoken" : "next [unresolved] discussion","action" : "Press n. "},
			{"spoken" : "previous [unresolved] discussion","action" : "Press p. "},
			{"spoken" : "next file","action" : "Press ]. "},
			{"spoken" : "previous file","action" : "Press [. "},
			{"spoken" : "back to files","action" : "Press escape. "},
			{"spoken" : "open permalink","action" : "Press y. "},
			{"spoken" : "edit page","action" : "Press e. "},

		],
		"Outlook": [
			{"spoken" : "new message","action" : "Press n. "},
			{"spoken" : "send [this] message","action" : "Press alt-s. "},
			{"spoken" : "reply [to] [this] message","action" : "Press r. "},
			{"spoken" : "reply all [to] [this] message","action" : "Press ctrl-shift-r. "},
			{"spoken" : "forward [this] message","action" : "Press ctrl-shift-f. "},
			{"spoken" : "save [draft]","action" : "Press ctrl-s. "},
			{"spoken" : "discard [draft]","action" : "Press esc. "},
			{"spoken" : "insert [a] [hyper] link","action" : "Press ctrl-k. "},
			{"spoken" : "(select|unselect) [this] message","action" : "Press ctrl-space. "},
			{"spoken" : "select all [messages]","action" : "Press ctrl-a. "},
			{"spoken" : "clear all [messages]","action" : "Press esc. "},
			{"spoken" : "select first [message]","action" : "Press home. "},
			{"spoken" : "select last [message]","action" : "Press and. "},
			{"spoken" : "open [this] message","action" : "Press o. "},
			{"spoken" : "open [this] message [in] [a] new window","action" : "Press shift-enter. "},
			{"spoken" : "close [this] message","action" : "Press esc. "},
			{"spoken" : "[open] [the] next (item|message)","action" : "Press ctrl-.. "},
			{"spoken" : "[open] [the] (prev|previous) item","action" : "Press ctrl-,. "},
			{"spoken" : "next reading [pane] (item|message)","action" : "Press .. "},
			{"spoken" : "(prev|previous) [pane] (item|message)","action" : "Press ,. "},
			{"spoken" : "(expand|collapse) [conversation]","action" : "Press x. "},
			{"spoken" : "go [to] mail","action" : "Press ctrl-shift-1. "},
			{"spoken" : "go [to] calendar","action" : "Press ctrl-shift-2. "},
			{"spoken" : "go [to] people","action" : "Press ctrl-shift-3. "},
			{"spoken" : "go [to] to do","action" : "Press ctrl-shift-4. "},
			{"spoken" : "go [to] inbox","action" : "Press g. Press i. "},
			{"spoken" : "go to drafts","action" : "Press g. Press d. "},
			{"spoken" : "go to sent","action" : "Press g. Press s. "},
			{"spoken" : "search [email]","action" : "Press alt-q. "},
			{"spoken" : "show help","action" : "Press ?. "},
			{"spoken" : "undo [last] [action]","action" : "Press ctrl-z. "},
			{"spoken" : "delete [this] [message]","action" : "Press delete. "},
			{"spoken" : "(perm|permanently) delete [this] [message]","action" : "Press shift+delete. "},
			{"spoken" : "new folder","action" : "Press shift-e. "},
			{"spoken" : "mark [this] [(item|message)] as read","action" : "Press q. "},
			{"spoken" : "mark [this] [(item|message)] as unread","action" : "Press u. "},
			{"spoken" : "flag [this] [(item|message)]","action" : "Press insert. "},
			{"spoken" : "archive","action" : "Press e. "},
			{"spoken" : "mark [this] [message] [as] junk","action" : "Press j. "},
			{"spoken" : "moved to [a] folder","action" : "Press v. "},
			{"spoken" : "categorize [this] message","action" : "Press c. "},

		],
		"Protonmail": [
			{"spoken" : "open help","action" : "Press ?. "},
			{"spoken" : "[focus] search","action" : "Press /. "},
			{"spoken" : "confirm active","action" : "Press enter. "},
			{"spoken" : "close active","action" : "Press escape. "},
			{"spoken" : "open command [palette]","action" : "Press shift-space. "},
			{"spoken" : "new message","action" : "Press c. "},
			{"spoken" : "send message","action" : "Press ctrl-enter. "},
			{"spoken" : "save message","action" : "Press ctrl-s. "},
			{"spoken" : "(go|jump) [to] inbox","action" : "Press g. Press i. "},
			{"spoken" : "(go|jump) [to] draft","action" : "Press g. Press d. "},
			{"spoken" : "(go|jump) [to] sent","action" : "Press g. Press s. "},
			{"spoken" : "(go|jump) [to] starred","action" : "Press g. Press .. "},
			{"spoken" : "(go|jump) [to] archive","action" : "Press g. Press a. "},
			{"spoken" : "(go|jump) [to] spam","action" : "Press g. Press x. "},
			{"spoken" : "(go|jump) [to] trash","action" : "Press g. Press t. "},
			{"spoken" : "(prev|previous) message","action" : "Press up. "},
			{"spoken" : "next message","action" : "Press down. "},
			{"spoken" : "exit message","action" : "Press left. "},
			{"spoken" : "enter message","action" : "Press right. "},
			{"spoken" : "(show|display) newer [message]","action" : "Press k. "},
			{"spoken" : "(show|display) older [message]","action" : "Press j. "},
			{"spoken" : "open message","action" : "Press enter. "},
			{"spoken" : "go back","action" : "Press escape. "},
			{"spoken" : "select all","action" : "Press *. Press a. "},
			{"spoken" : "(deselect|unselect) all","action" : "Press *. Press n. "},
			{"spoken" : "select [the] (message|conversation)","action" : "Press x. "},
			{"spoken" : "mark [as] read","action" : "Press r. "},
			{"spoken" : "mark [as] unread","action" : "Press u. "},
			{"spoken" : "star (message|conversation)","action" : "Press .. "},
			{"spoken" : "move to inbox","action" : "Press i. "},
			{"spoken" : "move to trash","action" : "Press t. "},
			{"spoken" : "move to archive","action" : "Press a. "},
			{"spoken" : "move to spam","action" : "Press s. "},
			{"spoken" : "reply to (message|conversation)","action" : "Press shift-r. "},
			{"spoken" : "reply all [to] (message|conversation)","action" : "Press shift-a. "},
			{"spoken" : "forward (message|conversation)","action" : "Press shift-f. "},
			{"spoken" : "(prev|previous) contact","action" : "Press up. "},
			{"spoken" : "next contact","action" : "Press down. "},
			{"spoken" : "enter contact","action" : "Press right. "},
			{"spoken" : "delete contact","action" : "Press t. "},
			{"spoken" : "exit contact","action" : "Press left. "},
			{"spoken" : "save contact","action" : "Press ctrl-s. "},

		],
		"Twitter": [
			{"spoken" : "(show shortcuts|shortcuts help)","action" : "Press ?. "},
			{"spoken" : "next tweet","action" : "Press j. "},
			{"spoken" : "previous tweet","action" : "Press k. "},
			{"spoken" : "page down","action" : "Press space. "},
			{"spoken" : "load new tweet","action" : "Press .. "},
			{"spoken" : "go home","action" : "Insert \"gh\". "},
			{"spoken" : "go explore","action" : "Insert \"ge\". "},
			{"spoken" : "go notifications","action" : "Insert \"gn\". "},
			{"spoken" : "go mentions","action" : "Insert \"gr\". "},
			{"spoken" : "go profile","action" : "Insert \"gp\". "},
			{"spoken" : "go likes","action" : "Insert \"gl\". "},
			{"spoken" : "go lists","action" : "Insert \"gi\". "},
			{"spoken" : "go direct messages","action" : "Insert \"gm\". "},
			{"spoken" : "go settings","action" : "Insert \"gs\". "},
			{"spoken" : "go book marks","action" : "Insert \"gb\". "},
			{"spoken" : "go to user","action" : "Insert \"gu\". "},
			{"spoken" : "display settings","action" : "Insert \"gd\". "},
			{"spoken" : "new tweet","action" : "Press n. "},
			{"spoken" : "send tweet","action" : "Press ctrl-enter. "},
			{"spoken" : "new direct message","action" : "Press m. "},
			{"spoken" : "search","action" : "Press /. "},
			{"spoken" : "like message","action" : "Press l. "},
			{"spoken" : "reply message","action" : "Press r. "},
			{"spoken" : "re tweet [message]","action" : "Press t. "},
			{"spoken" : "share tweet","action" : "Press s. "},
			{"spoken" : "bookmark","action" : "Press b. "},
			{"spoken" : "mute account","action" : "Press urge. "},
			{"spoken" : "block account","action" : "Press x. "},
			{"spoken" : "open details","action" : "Press enter. "},
			{"spoken" : "expand photo","action" : "Press o. "},

		],
		"Windbg (Windows)": [
			{"spoken" : "register  <a href=\"#user-registers-capture\"> &lt;user.registers&gt; </a> ","action" : "Press @. Insert \"<registers>\". "},
			{"spoken" : "open help","action" : "Insert \".hh\\n\". "},
			{"spoken" : "add microsoft symbols","action" : "Insert \"srv*C:\\symbols*http://msdl.microsoft.com/download/symbols;\\n\". "},
			{"spoken" : "force reload symbols","action" : "Insert \".reload /f\\n\". "},
			{"spoken" : "reload symbols","action" : "Insert \".reload\\n\". "},
			{"spoken" : "loaded modules","action" : "Insert \"lm l\\n\". "},
			{"spoken" : "display pointers","action" : "Insert \"dps \". "},
			{"spoken" : "dereference pointer","action" : "Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.. "},
			{"spoken" : "show version","action" : "Press ctrl-alt-w. "},
			{"spoken" : "view command","action" : "Press alt-1. "},
			{"spoken" : "view watch","action" : "Press alt-2. "},
			{"spoken" : "view locals","action" : "Press alt-3. "},
			{"spoken" : "view registers","action" : "Press alt-4. "},
			{"spoken" : "view memory","action" : "Press alt-5. "},
			{"spoken" : "view call stack","action" : "Press alt-6. "},
			{"spoken" : "view disassembly","action" : "Press alt-7. "},
			{"spoken" : "view scratch pad","action" : "Press alt-8. "},
			{"spoken" : "view (processes|threads)","action" : "Press alt-9. "},
			{"spoken" : "dump function params","action" : "Insert \"r @rcx,@rdx,@r8,@r9\\n\". "},
			{"spoken" : "(lib|library)  <a href=\"#user-windows-dlls-capture\"> &lt;user.windows-dlls&gt; </a> ","action" : "Insert \"<windows_dlls>\". "},

		],
		"Draft Editor": [
			{"spoken" : "draft this","action" : "Open draft editor. "},
			{"spoken" : "draft all","action" : "Select all text in the current document. Open draft editor. "},
			{"spoken" : "draft line","action" : "Select entire line <n>, or current line. Open draft editor. "},
			{"spoken" : "draft top","action" : "Extend selection to start of file. Open draft editor. "},
			{"spoken" : "draft bottom","action" : "Extend selection to end of file. Open draft editor. "},
			{"spoken" : "draft submit","action" : "Paste last submitted draft. "},

		],
		"Draft Editor Open": [
			{"spoken" : "draft submit","action" : "Submit/save draft editor. "},
			{"spoken" : "draft discard","action" : "Discard draft editor. "},

		],
		"Emoji": [
			{"spoken" : "emoticon <a href=\"#user-emoticon-list\">  {user.emoticon}  </a>","action" : "Insert \"<emoticon>\". "},
			{"spoken" : "emoji <a href=\"#user-emoji-list\">  {user.emoji}  </a>","action" : "Pastes text and preserves clipboard. "},
			{"spoken" : "kaomoji <a href=\"#user-kaomoji-list\">  {user.kaomoji}  </a>","action" : "Pastes text and preserves clipboard. "},

		],
		"Batch": [
			{"spoken" : "soft exit","action" : "Insert \"exit /B 1\\n\". "},
			{"spoken" : "hard exit","action" : "Insert \"exit 1\\n\". "},
			{"spoken" : "echo","action" : "Insert \"echo \". "},
			{"spoken" : "echo off","action" : "Insert \"@echo off\\n\". "},
			{"spoken" : "call","action" : "Insert \"call \". "},
			{"spoken" : "call shell","action" : "Insert \"call cmd \\c \". "},
			{"spoken" : "if error","action" : "Insert \"if errorlevel 1 \". "},
			{"spoken" : "go to","action" : "Insert \"goto \". "},
			{"spoken" : "delayed expansion","action" : "Insert \"SETLOCAL EnableDelayedExpansion\\n\". "},
			{"spoken" : "arg  &lt;number-small&gt;  ","action" : "Insert \"% <number_small>\". "},

		],
		"C": [
			{"spoken" : "state include","action" : "Insert \"#include \". "},
			{"spoken" : "state include system","action" : "Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.. "},
			{"spoken" : "state include local","action" : "Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.. "},
			{"spoken" : "state type deaf","action" : "Insert \"typedef \". "},
			{"spoken" : "state type deaf struct","action" : "Insert \"typedef struct\". Insert \"{\\n\\n}\". Move cursor up one row. Press tab. "},
			{"spoken" : "state define","action" : "Insert \"#define \". "},
			{"spoken" : "state undefine","action" : "Insert \"#undef \". "},
			{"spoken" : "state if define","action" : "Insert \"#ifdef \". "},
			{"spoken" : "state pre if","action" : "Insert \"#if \". "},
			{"spoken" : "state error","action" : "Insert \"#error \". "},
			{"spoken" : "state pre else if","action" : "Insert \"#elif \". "},
			{"spoken" : "state pre end","action" : "Insert \"#endif \". "},
			{"spoken" : "state pragma","action" : "Insert \"#pragma \". "},
			{"spoken" : "state default","action" : "Insert \"default:\\nbreak;\". "},
			{"spoken" : "push brackets","action" : "Move cursor to end of line. Insert \"{}\". Move cursor left one column. Press enter. Press enter. Move cursor up one row. "},
			{"spoken" : " <a href=\"#user-c-variable-capture\"> &lt;user.c-variable&gt; </a>   &lt;phrase&gt;  ","action" : "Insert \"<c_variable>  \". Insert \"<phrase> (formatted with PRIVATE_CAMEL_CASE,NO_SPACES)\". "},
			{"spoken" : " <a href=\"#user-c-variable-capture\"> &lt;user.c-variable&gt; </a>   <a href=\"#user-letter-capture\"> &lt;user.letter&gt; </a> ","action" : "Insert \"<c_variable>   <letter>  \". "},
			{"spoken" : "cast to  <a href=\"#user-c-cast-capture\"> &lt;user.c-cast&gt; </a> ","action" : "Insert \"<c_cast>\". "},
			{"spoken" : "standard cast to  <a href=\"#user-stdint-cast-capture\"> &lt;user.stdint-cast&gt; </a> ","action" : "Insert \"<stdint_cast>\". "},
			{"spoken" : " <a href=\"#user-c-types-capture\"> &lt;user.c-types&gt; </a> ","action" : "Insert \"<c_types>\". "},
			{"spoken" : " <a href=\"#user-c-pointers-capture\"> &lt;user.c-pointers&gt; </a> ","action" : "Insert \"<c_pointers>\". "},
			{"spoken" : " <a href=\"#user-c-keywords-capture\"> &lt;user.c-keywords&gt; </a> ","action" : "Insert \"<c_keywords>\". "},
			{"spoken" : " <a href=\"#user-c-signed-capture\"> &lt;user.c-signed&gt; </a> ","action" : "Insert \"<c_signed>\". "},
			{"spoken" : "standard  <a href=\"#user-stdint-types-capture\"> &lt;user.stdint-types&gt; </a> ","action" : "Insert \"<stdint_types>\". "},
			{"spoken" : "int main","action" : "Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.. "},
			{"spoken" : "toggle includes","action" : "GUI: List libraries for active language. "},
			{"spoken" : "include  <a href=\"#user-code-libraries-capture\"> &lt;user.code-libraries&gt; </a> ","action" : "Inserts a library and positions the cursor appropriately. Press end enter. "},

		],
		"Css": [
			{"spoken" : "block","action" : "Inserts equivalent of {. "},
			{"spoken" : "attribute [ <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ]","action" : "Let <name> be <text> or  (formatted with DASH_SEPARATED). Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.. "},
			{"spoken" : "prop  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Let <name> be <text> (formatted with DASH_SEPARATED). Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.. "},
			{"spoken" : "rule  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Let <name> be <text> (formatted with DASH_SEPARATED). Insert \"<name> : \". "},
			{"spoken" : "value  <a href=\"#user-number-string-capture\"> &lt;user.number-string&gt; </a>  [<a href=\"#user-css-unit-list\">  {user.css-unit}  </a>]","action" : "Insert \"<number_string> <css_unit> or \". "},
			{"spoken" : "value  <a href=\"#user-number-string-capture\"> &lt;user.number-string&gt; </a>  point  &lt;digit-string&gt;   [<a href=\"#user-css-unit-list\">  {user.css-unit}  </a>]","action" : "Insert \"<number_string> . <digit_string> <css_unit> or \". "},
			{"spoken" : "(value|state) <a href=\"#user-css-global-value-list\">  {user.css-global-value}  </a>","action" : "Insert \"<css_global_value>\". "},
			{"spoken" : "value  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Inserts a phrase formatted according to formatters. Formatters is a comma separated list of formatters (e.g. 'CAPITALIZE_ALL_WORDS,DOUBLE_QUOTED_STRING'). "},
			{"spoken" : "variable  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Let <name> be <text> (formatted with DASH_SEPARATED). Insert \"var(-- <name> )\". "},
			{"spoken" : "op var","action" : "Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.. "},
			{"spoken" : "at <a href=\"#user-css-at-rule-list\">  {user.css-at-rule}  </a>","action" : "Insert \"@ <css_at_rule>  \". "},
			{"spoken" : "unit <a href=\"#user-css-unit-list\">  {user.css-unit}  </a>","action" : "Insert \"<css_unit>\". "},
			{"spoken" : "[value] current color","action" : "Insert \"currentColor\". "},
			{"spoken" : "op important","action" : "Insert \" !important\". "},

		],
		"Go": [
			{"spoken" : "variadic","action" : "Insert \"...\". "},
			{"spoken" : "logical and","action" : "Insert \" && \". "},
			{"spoken" : "logical or","action" : "Insert \" || \". "},
			{"spoken" : "state comment","action" : "Insert \"// \". "},
			{"spoken" : "[line] comment  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Press cmd-right. Insert \" // \". Insert \"<text> (formatted with sentence)\". "},
			{"spoken" : "state (funk | func | fun)","action" : "Insert \"func \". "},
			{"spoken" : "function (Annette | init) [over]","action" : "Insert \"func init() {\\n\". "},
			{"spoken" : "function  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Insert \"func \". Insert \"<text> (formatted with PRIVATE_CAMEL_CASE)\". Insert \"(\". "},
			{"spoken" : "method  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Insert \"meth \". Insert \"<text> (formatted with PRIVATE_CAMEL_CASE)\". "},
			{"spoken" : "state var","action" : "Insert \"var \". "},
			{"spoken" : "variable [ <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ] [over]","action" : "Insert \"var \". Insert \"<text> (formatted with PRIVATE_CAMEL_CASE)\". "},
			{"spoken" : "of type [ <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ] [over]","action" : "Insert \" \". Insert \"<text> (formatted with PRIVATE_CAMEL_CASE)\". "},
			{"spoken" : "state break","action" : "Insert \"break\". "},
			{"spoken" : "state (chan | channel)","action" : "Insert \" chan \". "},
			{"spoken" : "state go","action" : "Insert \"go \". "},
			{"spoken" : "state if","action" : "Insert \"if \". "},
			{"spoken" : "if  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Insert \"if \". Insert \"<text> (formatted with PRIVATE_CAMEL_CASE)\". "},
			{"spoken" : "spawn  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Insert \"go \". Insert \"<text> (formatted with PRIVATE_CAMEL_CASE)\". "},
			{"spoken" : "state else if","action" : "Insert \" else if \". "},
			{"spoken" : "else if  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Insert \" else if \". Insert \"<text> (formatted with PRIVATE_CAMEL_CASE)\". "},
			{"spoken" : "state else","action" : "Insert \" else \". "},
			{"spoken" : "else  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Insert \" else {\". Press enter. Insert \"<text> (formatted with PRIVATE_CAMEL_CASE)\". "},
			{"spoken" : "state while","action" : "Insert \"while \". "},
			{"spoken" : "while  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Insert \"while \". Insert \"<text> (formatted with PRIVATE_CAMEL_CASE)\". "},
			{"spoken" : "state for","action" : "Insert \"for \". "},
			{"spoken" : "for  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Insert \"for \". Insert \"<text> (formatted with PRIVATE_CAMEL_CASE)\". "},
			{"spoken" : "state for range","action" : "Insert \"forr \". "},
			{"spoken" : "range  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Insert \"forr \". Insert \"<text> (formatted with PRIVATE_CAMEL_CASE)\". "},
			{"spoken" : "state format","action" : "Insert \"fmt\". "},
			{"spoken" : "format  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Insert \"fmt.\". Insert \"<text> (formatted with PUBLIC_CAMEL_CASE)\". "},
			{"spoken" : "state switch","action" : "Insert \"switch \". "},
			{"spoken" : "switch  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Insert \"switch \". Insert \"<text> (formatted with PRIVATE_CAMEL_CASE)\". "},
			{"spoken" : "state select","action" : "Insert \"select \". "},
			{"spoken" : "state (const | constant)","action" : "Insert \" const \". "},
			{"spoken" : "constant  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Insert \"const \". Insert \"<text> (formatted with PUBLIC_CAMEL_CASE)\". "},
			{"spoken" : "state case","action" : "Insert \" case \". "},
			{"spoken" : "state default","action" : "Insert \" default:\". "},
			{"spoken" : "case  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Insert \"case \". Insert \"<text> (formatted with PRIVATE_CAMEL_CASE)\". "},
			{"spoken" : "state type","action" : "Insert \" type \". "},
			{"spoken" : "type  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Insert \"type \". Insert \"<text> (formatted with PUBLIC_CAMEL_CASE)\". "},
			{"spoken" : "state true","action" : "Insert \" true \". "},
			{"spoken" : "state false","action" : "Insert \" false \". "},
			{"spoken" : "state (start | struct | struck)","action" : "Insert \" struct {\". Press enter. "},
			{"spoken" : "(struct | struck)  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Insert \" struct {\". Press enter. Insert \"<text> (formatted with PUBLIC_CAMEL_CASE)\". "},
			{"spoken" : "[state] empty interface","action" : "Insert \" interface{} \". "},
			{"spoken" : "state interface","action" : "Insert \" interface {\". Press enter. "},
			{"spoken" : "interface  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Insert \" interface {\". Press enter. Insert \"<text> (formatted with PUBLIC_CAMEL_CASE)\". "},
			{"spoken" : "state string","action" : "Insert \" string \". "},
			{"spoken" : "[state] (int | integer | ant)","action" : "Insert \"int\". "},
			{"spoken" : "state slice","action" : "Insert \" []\". "},
			{"spoken" : "slice of","action" : "Insert \"[]\". "},
			{"spoken" : "[state] (no | nil)","action" : "Insert \"nil\". "},
			{"spoken" : "state (int | integer | ant) sixty four","action" : "Insert \" int64 \". "},
			{"spoken" : "state tag","action" : "Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.. "},
			{"spoken" : "field tag  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.. Insert \"<text> (formatted with snake)\". Insert \" \". "},
			{"spoken" : "state return","action" : "Insert \" return \". "},
			{"spoken" : "return   <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Insert \"return \". Insert \"<text> (formatted with PRIVATE_CAMEL_CASE)\". "},
			{"spoken" : "map of string to string","action" : "Insert \" map[string]string \". "},
			{"spoken" : "map of  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Insert \"map[\". Insert \"<text> (formatted with PRIVATE_CAMEL_CASE)\". Press right. "},
			{"spoken" : "receive","action" : "Insert \" <- \". "},
			{"spoken" : "make","action" : "Insert \"make(\". "},
			{"spoken" : "loggers [ <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ] [over]","action" : "Insert \"logrus.\". Insert \"<text> (formatted with PUBLIC_CAMEL_CASE)\". "},
			{"spoken" : "length  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Insert \"len(\". Insert \"<text> (formatted with PRIVATE_CAMEL_CASE)\". "},
			{"spoken" : "append  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Insert \"append(\". Insert \"<text> (formatted with PRIVATE_CAMEL_CASE)\". "},
			{"spoken" : "state (air | err)","action" : "Insert \"err\". "},
			{"spoken" : "error","action" : "Insert \" err \". "},
			{"spoken" : "loop over [ <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ] [over]","action" : "Insert \"forr \". Insert \"<text> (formatted with PRIVATE_CAMEL_CASE)\". "},
			{"spoken" : "item  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Insert \", \". Insert \"<text> (formatted with PRIVATE_CAMEL_CASE)\". "},
			{"spoken" : "value  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Insert \": \". Insert \"<text> (formatted with PRIVATE_CAMEL_CASE)\". "},
			{"spoken" : "address of [ <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ] [over]","action" : "Insert \"&\". Insert \"<text> (formatted with PRIVATE_CAMEL_CASE)\". "},
			{"spoken" : "pointer to [ <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ] [over]","action" : "Insert \"*\". Insert \"<text> (formatted with PRIVATE_CAMEL_CASE)\". "},
			{"spoken" : "swipe [ <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ] [over]","action" : "Press right. Insert \", \". Insert \"<text> (formatted with PRIVATE_CAMEL_CASE)\". "},

		],
		"Java": [
			{"spoken" : "boxed [type] <a href=\"#user-java-boxed-type-list\">  {user.java-boxed-type}  </a>","action" : "Insert \"<user.java_boxed_type> +  \". "},
			{"spoken" : "generic [type] <a href=\"#user-java-generic-data-structure-list\">  {user.java-generic-data-structure}  </a>","action" : "Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.. "},
			{"spoken" : "type <a href=\"#user-code-type-list\">  {user.code-type}  </a> array","action" : "Insert \"<user.code_type>\". code_operator_subscript (e.g., C++ []). "},
			{"spoken" : "[state] <a href=\"#user-java-modifier-list\">  {user.java-modifier}  </a>","action" : "Insert \"<user.java_modifier> +  \". "},
			{"spoken" : "op array","action" : "code_operator_subscript (e.g., C++ []). "},
			{"spoken" : "op new","action" : "Insert \"new \". "},

		],
		"Javascript": [
			{"spoken" : "(op | is) strict equal","action" : "Insert \" === \". "},
			{"spoken" : "(op | is) strict not equal","action" : "Insert \" !== \". "},
			{"spoken" : "op null else","action" : "Insert \" ?? \". "},
			{"spoken" : "state const","action" : "Insert \"const \". "},
			{"spoken" : "state let","action" : "Insert \"let \". "},
			{"spoken" : "state var","action" : "Insert \"var \". "},
			{"spoken" : "state export","action" : "Insert \"export \". "},
			{"spoken" : "state async","action" : "Insert \"async \". "},
			{"spoken" : "state await","action" : "Insert \"await \". "},
			{"spoken" : "dot <a href=\"#user-code-common-member-function-list\">  {user.code-common-member-function}  </a>","action" : "Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.. "},
			{"spoken" : "state map","action" : "Show a desktop notification. "},
			{"spoken" : "state filter","action" : "Show a desktop notification. "},
			{"spoken" : "state reduce","action" : "Show a desktop notification. "},
			{"spoken" : "state spread","action" : "Insert \"...\". "},
			{"spoken" : "from import","action" : "Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.. "},

		],
		"Markdown": [
			{"spoken" : "level one","action" : "Insert \"# \". "},
			{"spoken" : "level two","action" : "Insert \"## \". "},
			{"spoken" : "level three","action" : "Insert \"### \". "},
			{"spoken" : "level four","action" : "Insert \"#### \". "},
			{"spoken" : "level five","action" : "Insert \"##### \". "},
			{"spoken" : "level six","action" : "Insert \"###### \". "},
			{"spoken" : "<a href=\"#user-markdown-code-block-language-list\">  {user.markdown-code-block-language}  </a> block","action" : "Insert \"``` <markdown_code_block_language>\". Press enter:2. Insert \"```\". Press up. "},

		],
		"Php": [
			{"spoken" : "(op | is) loosely equal","action" : "Insert \" == \". "},
			{"spoken" : "(op | is) loosely not equal","action" : "Insert \" != \". "},
			{"spoken" : "state try","action" : "Insert \"try {\\n\". "},
			{"spoken" : "state catch","action" : "Insert \"catch (\\Throwable $exception) {\\n\". "},
			{"spoken" : "var  &lt;phrase&gt;   [over]","action" : "Insert \"$\". Insert \"<phrase> (formatted with PRIVATE_CAMEL_CASE)\". "},

		],
		"Proto": [
			{"spoken" : "state message","action" : "Insert \"message \". "},
			{"spoken" : "state package","action" : "Insert \"package \". "},
			{"spoken" : "state reserved","action" : "Insert \"reserved \". "},
			{"spoken" : "state enum","action" : "Insert \"enum \". "},
			{"spoken" : "op equals","action" : "Insert \" = \". "},
			{"spoken" : "state import","action" : "Insert \"import \". "},
			{"spoken" : "state import public","action" : "Insert \"import public \". "},
			{"spoken" : "state option","action" : "Insert \"option \". "},
			{"spoken" : "state repeated","action" : "Insert \"repeated \". "},
			{"spoken" : "type <a href=\"#user-code-type-list\">  {user.code-type}  </a>","action" : "Insert \"<code_type>\". "},
			{"spoken" : "repeated type <a href=\"#user-code-type-list\">  {user.code-type}  </a>","action" : "Insert \"repeated  <code_type>\". "},

		],
		"Python": [
			{"spoken" : "dunder in it","action" : "Insert \"__init__\". "},
			{"spoken" : "state (def | deaf | deft)","action" : "Insert \"def \". "},
			{"spoken" : "state try","action" : "Insert \"try:\\n\". "},
			{"spoken" : "state except","action" : "Insert \"except \". "},
			{"spoken" : "state raise","action" : "Insert \"raise \". "},
			{"spoken" : "self taught","action" : "Insert \"self.\". "},
			{"spoken" : "pie test","action" : "Insert \"pytest\". "},
			{"spoken" : "state past","action" : "Insert \"pass\". "},
			{"spoken" : "raise <a href=\"#user-python-exception-list\">  {user.python-exception}  </a>","action" : "Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.. "},
			{"spoken" : "except <a href=\"#user-python-exception-list\">  {user.python-exception}  </a>","action" : "Insert \"except  <python_exception> :\". "},
			{"spoken" : "dock string","action" : "Inserts a document comment and positions the cursor appropriately. "},
			{"spoken" : "dock <a href=\"#user-python-docstring-fields-list\">  {user.python-docstring-fields}  </a>","action" : "Insert \"<python_docstring_fields>\". Move cursor left one column. "},
			{"spoken" : "dock type <a href=\"#user-code-type-list\">  {user.code-type}  </a>","action" : "Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.. "},
			{"spoken" : "dock returns type <a href=\"#user-code-type-list\">  {user.code-type}  </a>","action" : "Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.. "},
			{"spoken" : "toggle imports","action" : "GUI: List libraries for active language. "},
			{"spoken" : "import  <a href=\"#user-code-libraries-capture\"> &lt;user.code-libraries&gt; </a> ","action" : "Inserts a library and positions the cursor appropriately. Press end enter. "},
			{"spoken" : "from import","action" : "Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.. "},

		],
		"R": [
			{"spoken" : "(op | is) in","action" : "Insert \" %in% \". "},
			{"spoken" : "toggle library","action" : "GUI: List libraries for active language. "},
			{"spoken" : "library  <a href=\"#user-code-libraries-capture\"> &lt;user.code-libraries&gt; </a> ","action" : "Inserts a library and positions the cursor appropriately. Press end enter. "},
			{"spoken" : "(chain|pipe that)","action" : "Press end. Insert \" %>%\". Press enter. "},
			{"spoken" : "state na","action" : "Insert \"NA\". "},
			{"spoken" : "function define  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Inserts private function declaration. "},
			{"spoken" : "named arg <a href=\"#user-code-parameter-name-list\">  {user.code-parameter-name}  </a>","action" : "Inserts a named argument. "},

		],
		"Ruby": [
			{"spoken" : "args pipe","action" : "Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.. "},
			{"spoken" : "dock string","action" : "Inserts a document comment and positions the cursor appropriately. "},
			{"spoken" : "state end","action" : "Insert \"end\". "},
			{"spoken" : "state begin","action" : "Insert \"begin\". "},
			{"spoken" : "state rescue","action" : "Insert \"rescue \". "},
			{"spoken" : "state module","action" : "Insert \"module \". "},
			{"spoken" : "instance  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Insert \"@\". inserts properly formatted private function name. "},

		],
		"Rust": [
			{"spoken" : "state unsafe","action" : "Insert \"unsafe \". "},
			{"spoken" : "unsafe block","action" : "Inserts an unsafe block and positions the cursor appropriately. "},
			{"spoken" : "state (struct | structure)  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Insert \"struct \". Insert \"<text> (formatted with PUBLIC_CAMEL_CASE)\". "},
			{"spoken" : "state enum  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Insert \"enum \". Insert \"<text> (formatted with PUBLIC_CAMEL_CASE)\". "},
			{"spoken" : "toggle use","action" : "GUI: List libraries for active language. "},
			{"spoken" : "borrow","action" : "Insert \"&\". "},
			{"spoken" : "borrow mutable","action" : "Insert \"&mut \". "},
			{"spoken" : "state (a sink | async | asynchronous)","action" : "Insert \"async \". "},
			{"spoken" : "state (pub | public)","action" : "Insert \"pub \". "},
			{"spoken" : "state (pub | public) crate","action" : "Insert \"pub(crate) \". "},
			{"spoken" : "state (dyn | dynamic)","action" : "Insert \"dyn \". "},
			{"spoken" : "state constant","action" : "Insert \"const \". "},
			{"spoken" : "state (funk | func | function)","action" : "Insert \"fn \". "},
			{"spoken" : "state (imp | implements)","action" : "Insert \"impl \". "},
			{"spoken" : "state let mute","action" : "Insert \"let mut \". "},
			{"spoken" : "state let","action" : "Insert \"let \". "},
			{"spoken" : "state (mute | mutable)","action" : "Insert \"mut \". "},
			{"spoken" : "state (mod | module)","action" : "Insert \"mod \". "},
			{"spoken" : "state ref (mute | mutable)","action" : "Insert \"ref mut \". "},
			{"spoken" : "state ref","action" : "Insert \"ref \". "},
			{"spoken" : "state trait","action" : "Insert \"trait \". "},
			{"spoken" : "state match","action" : "Inserts switch statement. "},
			{"spoken" : "state (some | sum)","action" : "Insert \"Some\". "},
			{"spoken" : "state static","action" : "Insert \"static \". "},
			{"spoken" : "self taught","action" : "Insert \"self.\". "},
			{"spoken" : "state use","action" : "import/using equivalent. "},
			{"spoken" : "use  <a href=\"#user-code-libraries-capture\"> &lt;user.code-libraries&gt; </a> ","action" : "Inserts a library and positions the cursor appropriately. Press ; enter. "},
			{"spoken" : "state if let some","action" : "Inserts if let some block, positioning the cursor appropriately. "},
			{"spoken" : "state if let (ok|okay)","action" : "user.code_insert_if_let_okay()"},
			{"spoken" : "state if let error","action" : "Inserts if let error block, positioning the cursor appropriately. "},
			{"spoken" : "is some","action" : "Inserts check for non-null. "},
			{"spoken" : "implement (struct | structure)","action" : "Inserts implements block, positioning the cursor appropriately. "},
			{"spoken" : "is implemented trait <a href=\"#user-code-trait-list\">  {user.code-trait}  </a>","action" : "Inserts type annotation for implementor of trait. "},
			{"spoken" : "is implemented trait","action" : "Insert \": impl \". "},
			{"spoken" : "returns implemented trait <a href=\"#user-code-trait-list\">  {user.code-trait}  </a>","action" : "Inserts a return type for implementor of trait. "},
			{"spoken" : "returns implemented trait","action" : "Insert \" -> impl \". "},
			{"spoken" : "trait <a href=\"#user-code-trait-list\">  {user.code-trait}  </a>","action" : "Insert \"<code_trait>\". "},
			{"spoken" : "implemented trait <a href=\"#user-code-trait-list\">  {user.code-trait}  </a>","action" : "Insert \"impl  <code_trait>\". "},
			{"spoken" : "dynamic trait <a href=\"#user-code-trait-list\">  {user.code-trait}  </a>","action" : "Insert \"dyn  <code_trait>\". "},
			{"spoken" : "macro <a href=\"#user-code-macros-list\">  {user.code-macros}  </a>","action" : "Inserts a macro and positions the cursor appropriately. "},
			{"spoken" : "macro wrap <a href=\"#user-code-macros-list\">  {user.code-macros}  </a>","action" : "Inserts a macro and positions the cursor appropriately. "},
			{"spoken" : "block dock comment","action" : "Inserts a block document comment and positions the cursor appropriately. "},
			{"spoken" : "inner dock comment","action" : "Inserts an inner document comment and positions the cursor appropriately. "},
			{"spoken" : "inner block dock comment","action" : "Inserts an inner block document comment and positions the cursor appropriately. "},

		],
		"Scala": [
			{"spoken" : "state <a href=\"#user-scala-modifier-list\">  {user.scala-modifier}  </a>","action" : "Insert \"<user.scala_modifier>  \". "},
			{"spoken" : "state <a href=\"#user-scala-keyword-list\">  {user.scala-keyword}  </a>","action" : "Insert \"<scala_keyword>  \". "},
			{"spoken" : "op right arrow","action" : "Insert \" -> \". "},
			{"spoken" : "op left arrow","action" : "Insert \" <- \". "},
			{"spoken" : "op plus plus","action" : "Insert \" ++ \". "},
			{"spoken" : "op subtype","action" : "Insert \" <: \". "},
			{"spoken" : "state match","action" : "Inserts switch statement. "},
			{"spoken" : "block string","action" : "Insert \"\"\"\"\"\"\"\". Press left left left. "},

		],
		"Sql": [
			{"spoken" : "select","action" : "Insert \"SELECT \". "},
			{"spoken" : "distinct","action" : "Insert \"DISTINCT \". "},
			{"spoken" : "from","action" : "Insert \"FROM \". "},
			{"spoken" : "select star from","action" : "Insert \"SELECT *\\nFROM \". "},
			{"spoken" : "where","action" : "Insert \"WHERE \". "},
			{"spoken" : "order by","action" : "Insert \"ORDER BY \". "},
			{"spoken" : "group by","action" : "Insert \"GROUP BY \". "},
			{"spoken" : "having","action" : "Insert \"HAVING \". "},
			{"spoken" : "descending","action" : "Insert \" DESC\". "},
			{"spoken" : "ascending","action" : "Insert \" ASC\". "},
			{"spoken" : "dot i d","action" : "Insert \".id\". "},
			{"spoken" : "inner join","action" : "Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.. "},
			{"spoken" : "inner join using","action" : "Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.. "},
			{"spoken" : "left outer join","action" : "Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.. "},
			{"spoken" : "right outer join","action" : "Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.. "},
			{"spoken" : "with","action" : "Press enter up. Insert \"WITH  AS (\". Press enter tab. Insert \"SELECT \". Press enter shift-tab. Extend selection to end of line. Delete selection. Insert \") \". Press delete up:2 right:3. "},
			{"spoken" : "column","action" : "Press return. Insert \", \". "},
			{"spoken" : "count","action" : "Inserts a function and positions the cursor appropriately. "},
			{"spoken" : "date","action" : "Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.. "},

		],
		"Comment Block": [
			{"spoken" : "block comment","action" : "Block comment. "},
			{"spoken" : "block comment line","action" : "Move cursor to start of line. Block comment start syntax. Press space. Move cursor to end of line. Press space. Block comment end syntax. "},
			{"spoken" : "block comment line  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  over","action" : "Move cursor to start of line. Block comment. Insert \"<user.text>\". "},
			{"spoken" : "block comment  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  over","action" : "Block comment. Insert \"<user.text>\". "},
			{"spoken" : "block comment  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Block comment. Insert \"<user.text>\". "},
			{"spoken" : "(line | inline) block comment  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  over","action" : "Move cursor to end of line. Block comment start syntax. Press space. Insert \"<user.text>\". Press space. Block comment end syntax. "},
			{"spoken" : "(line | inline) block comment  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Move cursor to end of line. Block comment start syntax. Press space. Insert \"<user.text>\". Press space. Block comment end syntax. "},
			{"spoken" : "open block comment","action" : "Block comment start syntax. "},
			{"spoken" : "close block comment","action" : "Block comment end syntax. "},

		],
		"Comment Documentation": [
			{"spoken" : "dock comment","action" : "Inserts a document comment and positions the cursor appropriately. "},

		],
		"Comment Line": [
			{"spoken" : "comment","action" : "Inserts line comment prefix at current cursor location. "},
			{"spoken" : "comment line","action" : "Move cursor to start of line. Inserts line comment prefix at current cursor location. "},
			{"spoken" : "comment line  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  over","action" : "Move cursor to start of line. Inserts line comment prefix at current cursor location. Insert \"<user.text>\". Insert \" \". "},
			{"spoken" : "comment  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  over","action" : "Inserts line comment prefix at current cursor location. Insert \"<user.text>\". "},
			{"spoken" : "comment  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Inserts line comment prefix at current cursor location. Insert \"<user.text>\". "},
			{"spoken" : "(line | inline) comment  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  over","action" : "Move cursor to end of line. Inserts line comment prefix at current cursor location. Insert \"<user.text>\". "},
			{"spoken" : "(line | inline) comment  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Move cursor to end of line. Inserts line comment prefix at current cursor location. Insert \"<user.text>\". "},

		],
		"Data Bool": [
			{"spoken" : "state true","action" : "Insert True value. "},
			{"spoken" : "state false","action" : "Insert False value. "},

		],
		"Data Null": [
			{"spoken" : "state (no | none | nil | null)","action" : "Inserts null. "},
			{"spoken" : "is not (none|null)","action" : "Inserts check for non-null. "},
			{"spoken" : "is (none|null)","action" : "Inserts check for null. "},

		],
		"Functions": [
			{"spoken" : "<a href=\"#user-code-function-modifier-list\">  {user.code-function-modifier}  </a>* funky  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Inserts function declaration with the given modifiers. modifiers == 0. "},
			{"spoken" : "is type  <a href=\"#user-code-type-capture\"> &lt;user.code-type&gt; </a> ","action" : "Inserts a type annotation. "},
			{"spoken" : "returns [type]  <a href=\"#user-code-type-capture\"> &lt;user.code-type&gt; </a> ","action" : "Inserts a return type. "},
			{"spoken" : "type  <a href=\"#user-code-type-capture\"> &lt;user.code-type&gt; </a> ","action" : "Insert \"<code_type>\". "},

		],
		"Functions Common": [
			{"spoken" : "toggle funk","action" : "GUI: List functions for active language. "},
			{"spoken" : "funk  <a href=\"#user-code-common-function-capture\"> &lt;user.code-common-function&gt; </a> ","action" : "Inserts a function and positions the cursor appropriately. "},
			{"spoken" : "funk cell  &lt;number&gt;  ","action" : "Inserts the selected function when the imgui is open. "},
			{"spoken" : "funk wrap  <a href=\"#user-code-common-function-capture\"> &lt;user.code-common-function&gt; </a> ","action" : "Inserts a function and positions the cursor appropriately. "},
			{"spoken" : "funk wrap  &lt;number&gt;  ","action" : "Inserts the selected function when the imgui is open. "},

		],
		"Functions Common Gui Active": [
			{"spoken" : "toggle funk","action" : "GUI: List functions for active language. "},

		],
		"Imperative": [
			{"spoken" : "block","action" : "Inserts equivalent of {. "},
			{"spoken" : "state if","action" : "Inserts if statement. "},
			{"spoken" : "state else if","action" : "Inserts else if statement. "},
			{"spoken" : "state else","action" : "Inserts else statement. "},
			{"spoken" : "state while","action" : "Inserts while statement. "},
			{"spoken" : "state loop","action" : "Inserts infinite loop statement. "},
			{"spoken" : "state for","action" : "Inserts for statement. "},
			{"spoken" : "state for in","action" : "Inserts for each equivalent statement. "},
			{"spoken" : "state switch","action" : "Inserts switch statement. "},
			{"spoken" : "state case","action" : "Inserts case statement. "},
			{"spoken" : "state do","action" : "Inserts do statement. "},
			{"spoken" : "state goto","action" : "inserts go-to statement. "},
			{"spoken" : "state return","action" : "Inserts return statement. "},
			{"spoken" : "state break","action" : "Inserts break statement. "},
			{"spoken" : "state next","action" : "Inserts next statement. "},

		],
		"Keywords": [
			{"spoken" : "keyword ( <a href=\"#user-code-keyword-capture\"> &lt;user.code-keyword&gt; </a> +)","action" : "Adds keywords. "},

		],
		"Libraries": [
			{"spoken" : "state import","action" : "import/using equivalent. "},

		],
		"Library Gui Open": [
			{"spoken" : "toggle libraries close","action" : "GUI: List libraries for active language. "},

		],
		"Object Oriented": [
			{"spoken" : "self dot","action" : "Inserts a reference to the current object (e.g., C++ \"this\" or Python's \"self\"). Inserts the object accessor operator (e.g., Java's \".\" or PHP's \"->). "},
			{"spoken" : "state self","action" : "Inserts a reference to the current object (e.g., C++ \"this\" or Python's \"self\"). "},
			{"spoken" : "state class","action" : "Starts a class definition (e.g., Java's \"class\" keyword). "},

		],
		"Operators Array": [
			{"spoken" : "op subscript","action" : "code_operator_subscript (e.g., C++ []). "},

		],
		"Operators Assignment": [
			{"spoken" : "op (equals | assign)","action" : "code_operator_assignment. "},
			{"spoken" : "op (minus | subtract) equals","action" : "code_operator_subtraction_assignment. "},
			{"spoken" : "op (plus | add) equals","action" : "code_operator_addition_assignment. "},
			{"spoken" : "op (times | multiply) equals","action" : "code_operator_multiplication_assignment. "},
			{"spoken" : "op divide equals","action" : "code_operator_division_assignment. "},
			{"spoken" : "op mod equals","action" : "code_operator_modulo_assignment. "},
			{"spoken" : "[op] increment","action" : "code_operator_increment. "},
			{"spoken" : "(op | logical | bitwise) (ex | exclusive) or equals","action" : "code_operator_bitwise_exclusive_or_assignment. "},
			{"spoken" : "[(op | logical | bitwise)] (left shift | shift left) equals","action" : "code_operator_bitwise_left_shift_assigment. "},
			{"spoken" : "[(op | logical | bitwise)] (right shift | shift right) equals","action" : "code_operator_bitwise_right_shift_assignment. "},

		],
		"Operators Bitwise": [
			{"spoken" : "[op] bitwise and","action" : "code_operator_bitwise_and. "},
			{"spoken" : "[op] bitwise or","action" : "code_operator_bitwise_or. "},
			{"spoken" : "(op | logical | bitwise) (ex | exclusive) or","action" : "code_operator_bitwise_exclusive_or. "},
			{"spoken" : "(op | logical | bitwise) (left shift | shift left)","action" : "code_operator_bitwise_left_shift. "},
			{"spoken" : "(op | logical | bitwise) (right shift | shift right)","action" : "code_operator_bitwise_right_shift. "},

		],
		"Operators Lambda": [
			{"spoken" : "op lambda","action" : "code_operator_lambda. "},

		],
		"Operators Math": [
			{"spoken" : "op (minus | subtract)","action" : "code_operator_subtraction. "},
			{"spoken" : "op (plus | add)","action" : "code_operator_addition. "},
			{"spoken" : "op (times | multiply)","action" : "code_operator_multiplication. "},
			{"spoken" : "op divide","action" : "code_operator_division. "},
			{"spoken" : "op mod","action" : "code_operator_modulo. "},
			{"spoken" : "(op (power | exponent) | to the power [of])","action" : "code_operator_exponent. "},
			{"spoken" : "(op | is) equal","action" : "code_operator_equal. "},
			{"spoken" : "(op | is) not equal","action" : "code_operator_not_equal. "},
			{"spoken" : "(op | is) (greater | more)","action" : "code_operator_greater_than. "},
			{"spoken" : "(op | is) (less | below) [than]","action" : "code_operator_less_than. "},
			{"spoken" : "(op | is) greater [than] or equal","action" : "code_operator_greater_than_or_equal_to. "},
			{"spoken" : "(op | is) less [than] or equal","action" : "code_operator_less_than_or_equal_to. "},
			{"spoken" : "(op | logical) and","action" : "code_operator_and. "},
			{"spoken" : "(op | logical) or","action" : "code_operator_or. "},
			{"spoken" : "(op | is) in","action" : "code_operator_in. "},
			{"spoken" : "(op | is) not in","action" : "code_operator_not_in. "},
			{"spoken" : "(op | pad) colon","action" : "Insert \" : \". "},

		],
		"Operators Pointer": [
			{"spoken" : "op dereference","action" : "code_operator_indirection. "},
			{"spoken" : "op address of","action" : "code_operator_address_of (e.g., C++ & op). "},
			{"spoken" : "op arrow","action" : "code_operator_structure_dereference (e.g., C++ -> op). "},

		],
		"Talon": [
			{"spoken" : "dot talon","action" : "Insert \".talon\". "},
			{"spoken" : "action block","action" : "Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.. "},
			{"spoken" : "setting block","action" : "Insert \"settings():\\n	\". "},
			{"spoken" : "setting <a href=\"#user-talon-settings-list\">  {user.talon-settings}  </a>","action" : "Pastes text and preserves clipboard. "},
			{"spoken" : "win require","action" : "Insert \"os: windows\\n\". "},
			{"spoken" : "mac require","action" : "Insert \"os: mac\\n\". "},
			{"spoken" : "linux require","action" : "Insert \"os: linux\\n\". "},
			{"spoken" : "title require","action" : "Insert \"win.title: \". "},
			{"spoken" : "application [require] [<a href=\"#user-talon-apps-list\">  {user.talon-apps}  </a>]","action" : "Let <app> be <talon_apps> or . Pastes text and preserves clipboard. "},
			{"spoken" : "mode require [<a href=\"#user-talon-modes-list\">  {user.talon-modes}  </a>]","action" : "Let <mode> be <talon_modes> or . Pastes text and preserves clipboard. "},
			{"spoken" : "tag require [<a href=\"#user-talon-tags-list\">  {user.talon-tags}  </a>]","action" : "Let <tag> be <talon_tags> or . Pastes text and preserves clipboard. "},
			{"spoken" : "tag set [<a href=\"#user-talon-tags-list\">  {user.talon-tags}  </a>]","action" : "Let <tag> be <talon_tags> or . Pastes text and preserves clipboard. "},
			{"spoken" : "list <a href=\"#user-talon-lists-list\">  {user.talon-lists}  </a>","action" : "Insert \"{ <talon_lists> }\". "},
			{"spoken" : "capture <a href=\"#user-talon-captures-list\">  {user.talon-captures}  </a>","action" : "Insert \"< <talon_captures> >\". "},
			{"spoken" : "key  <a href=\"#user-keys-capture\"> &lt;user.keys&gt; </a>  over","action" : "Insert \"<keys>\". "},
			{"spoken" : "key  <a href=\"#user-modifiers-capture\"> &lt;user.modifiers&gt; </a>  over","action" : "Insert \"<modifiers>\". "},
			{"spoken" : "funk <a href=\"#user-talon-actions-list\">  {user.talon-actions}  </a>","action" : "Inserts a function and positions the cursor appropriately. "},
			{"spoken" : "funk cell  &lt;number&gt;  ","action" : "Inserts the selected function when the imgui is open. "},
			{"spoken" : "funk wrap  <a href=\"#user-code-common-function-capture\"> &lt;user.code-common-function&gt; </a> ","action" : "Inserts a function and positions the cursor appropriately. "},
			{"spoken" : "funk wrap  &lt;number&gt;  ","action" : "Inserts the selected function when the imgui is open. "},

		],
		"Terraform": [
			{"spoken" : "state <a href=\"#user-terraform-module-block-list\">  {user.terraform-module-block}  </a>","action" : "Inserts a new module-related block of a given type (e.g. variable, output, provider...). "},
			{"spoken" : "resource  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Inserts a new resource block with given name. "},
			{"spoken" : "data [source]  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Inserts a new data block with given name. "},
			{"spoken" : "[state] prop <a href=\"#user-terraform-common-property-list\">  {user.terraform-common-property}  </a>","action" : "Insert \"<user.terraform_common_property>\". code_operator_assignment. "},
			{"spoken" : "type <a href=\"#user-code-type-list\">  {user.code-type}  </a>","action" : "Insert \"<code_type>\". "},

		],
		"Vimscript": [
			{"spoken" : "assign [ <a href=\"#user-vimscript-scope-capture\"> &lt;user.vimscript-scope&gt; </a> ] (variable|var) [ <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ] [over]","action" : "Insert \"let \". Insert \"<vimscript_scope> or \". inserts properly formatted private function name. "},
			{"spoken" : "[ <a href=\"#user-vimscript-scope-capture\"> &lt;user.vimscript-scope&gt; </a> ] (variable|var) [ <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ] [over]","action" : "Insert \"<vimscript_scope> or \". inserts properly formatted private function name. "},
			{"spoken" : " <a href=\"#user-vimscript-functions-capture\"> &lt;user.vimscript-functions&gt; </a> ","action" : "Insert \"<vimscript_functions>  \". "},
			{"spoken" : "state command","action" : "Insert \"command! \". "},
			{"spoken" : "state end if","action" : "Insert \"endif\". "},
			{"spoken" : "state end for","action" : "Insert \"endfor\". "},
			{"spoken" : "state end while","action" : "Insert \"endwhile\". "},
			{"spoken" : "state end function","action" : "Insert \"endfunction\". "},
			{"spoken" : "state continue","action" : "Insert \"continue\". "},

		],
		"Abbreviate": [
			{"spoken" : "(abbreviate|abreviate|brief) <a href=\"#user-abbreviation-list\">  {user.abbreviation}  </a>","action" : "Insert \"<abbreviation>\". "},

		],
		"Cancel": [
			{"spoken" : "cancel cancel","action" : "Do nothing. "},
			{"spoken" : "ignore [ &lt;phrase&gt;  ]","action" : "Show a desktop notification. "},

		],
		"Chapters": [
			{"spoken" : "chapter next","action" : "Go to next chapter. "},
			{"spoken" : "chapter last","action" : "Go to previous chapter. "},
			{"spoken" : "go chapter  &lt;number&gt;  ","action" : "Go to chapter number. "},
			{"spoken" : "go chapter final","action" : "Go to final chapter. "},

		],
		"Datetimeinsert": [
			{"spoken" : "date insert","action" : "Insert \"the current time, formatted.\". "},
			{"spoken" : "date insert UTC","action" : "Insert \"the current UTC time, formatted.\". "},
			{"spoken" : "timestamp insert","action" : "Insert \"the current time, formatted.\". "},
			{"spoken" : "timestamp insert high resolution","action" : "Insert \"the current time, formatted.\". "},
			{"spoken" : "timestamp insert UTC","action" : "Insert \"the current UTC time, formatted.\". "},
			{"spoken" : "timestamp insert UTC high resolution","action" : "Insert \"the current UTC time, formatted.\". "},

		],
		"Desktops": [
			{"spoken" : "desk  &lt;number-small&gt;  ","action" : "change the current desktop. "},
			{"spoken" : "desk next","action" : "move to next desktop. "},
			{"spoken" : "desk last","action" : "move to previous desktop. "},
			{"spoken" : "desk show","action" : "shows the current desktops. "},
			{"spoken" : "window move desk  &lt;number&gt;  ","action" : "move the current window to a different desktop. "},
			{"spoken" : "window move desk left","action" : "move the current window to the desktop to the left. "},
			{"spoken" : "window move desk right","action" : "move the current window to the desktop to the right. "},

		],
		"Edit Settings": [
			{"spoken" : "customize <a href=\"#user-talon-settings-csv-list\">  {user.talon-settings-csv}  </a>","action" : "Tries to open a file in the user's preferred text editor.. Move cursor to end of file (start of line). "},

		],
		"Extensions": [
			{"spoken" : "<a href=\"#user-file-extension-list\">  {user.file-extension}  </a>","action" : "Insert \"<file_extension>\". "},

		],
		"Formatters": [
			{"spoken" : "phrase  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Inserts some text, remembering it in the phrase history.. "},
			{"spoken" : "phrase  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  over","action" : "Inserts some text, remembering it in the phrase history.. "},
			{"spoken" : "<a href=\"#user-prose-formatter-list\">  {user.prose-formatter}  </a>  <a href=\"#user-prose-capture\"> &lt;user.prose&gt; </a> ","action" : "Inserts a phrase formatted according to formatters. Formatters is a comma separated list of formatters (e.g. 'CAPITALIZE_ALL_WORDS,DOUBLE_QUOTED_STRING'). "},
			{"spoken" : "<a href=\"#user-prose-formatter-list\">  {user.prose-formatter}  </a>  <a href=\"#user-prose-capture\"> &lt;user.prose&gt; </a>  over","action" : "Inserts a phrase formatted according to formatters. Formatters is a comma separated list of formatters (e.g. 'CAPITALIZE_ALL_WORDS,DOUBLE_QUOTED_STRING'). "},
			{"spoken" : " <a href=\"#user-format-text-capture\"> &lt;user.format-text&gt; </a> +","action" : "Insert a list of strings, sequentially.. "},
			{"spoken" : " <a href=\"#user-format-text-capture\"> &lt;user.format-text&gt; </a> + over","action" : "Insert a list of strings, sequentially.. "},
			{"spoken" : " <a href=\"#user-formatters-capture\"> &lt;user.formatters&gt; </a>  that","action" : "Reformats the current selection.. "},
			{"spoken" : "word  <a href=\"#user-word-capture\"> &lt;user.word&gt; </a> ","action" : "Inserts some text, remembering it in the phrase history.. "},
			{"spoken" : "recent list","action" : "Toggles list of recent phrases. "},
			{"spoken" : "recent close","action" : "Hides the recent phrases window. "},
			{"spoken" : "recent repeat  &lt;number-small&gt;  ","action" : "Inserts some text, remembering it in the phrase history.. "},
			{"spoken" : "recent copy  &lt;number-small&gt;  ","action" : "Set clipboard text. "},
			{"spoken" : "select that","action" : "Selects the last phrase. "},
			{"spoken" : "before that","action" : "Moves left before the last phrase. "},
			{"spoken" : "nope that | scratch that","action" : "Clears the last phrase. "},
			{"spoken" : "nope that was  <a href=\"#user-formatters-capture\"> &lt;user.formatters&gt; </a> ","action" : "Clears and reformats last formatted phrase. "},

		],
		"Git": [
			{"spoken" : "git add patch","action" : "Insert \"git add . -p\\n\". "},
			{"spoken" : "git add","action" : "Insert \"git add \". "},
			{"spoken" : "git add everything","action" : "Insert \"git add -u\\n\". "},
			{"spoken" : "git bisect","action" : "Insert \"git bisect \". "},
			{"spoken" : "git blame","action" : "Insert \"git blame \". "},
			{"spoken" : "git branch","action" : "Insert \"git branch \". "},
			{"spoken" : "git branch list","action" : "Insert \"git branch -vv\\n\". "},
			{"spoken" : "git remote branches","action" : "Insert \"git branch --remote\\n\". "},
			{"spoken" : "git branch  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Insert \"git branch  <text>\". "},
			{"spoken" : "git checkout","action" : "Insert \"git checkout \". "},
			{"spoken" : "git checkout master","action" : "Insert \"git checkout master\\n\". "},
			{"spoken" : "git checkout main","action" : "Insert \"git checkout main\\n\". "},
			{"spoken" : "git checkout  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Insert \"git checkout  <text>\". "},
			{"spoken" : "git cherry pick","action" : "Insert \"git cherry-pick \". "},
			{"spoken" : "git cherry pick continue","action" : "Insert \"git cherry-pick --continue \". "},
			{"spoken" : "git cherry pick abort","action" : "Insert \"git cherry-pick --abort \". "},
			{"spoken" : "git cherry pick skip","action" : "Insert \"git cherry-pick --skip \". "},
			{"spoken" : "git clone","action" : "Insert \"git clone \". "},
			{"spoken" : "git clean everything","action" : "Insert \"git clean -dfx\". "},
			{"spoken" : "git commit message  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Insert \"git commit -m ' <text> '\". "},
			{"spoken" : "git commit","action" : "Insert \"git commit\\n\". "},
			{"spoken" : "git commit amend","action" : "Insert \"git commit --amend\\n\". "},
			{"spoken" : "git commit no verify","action" : "Insert \"git commit -n\". "},
			{"spoken" : "git commit existing","action" : "Insert \"git commit -a\\n\". "},
			{"spoken" : "git diff (colour|color) words","action" : "Insert \"git diff --color-words \". "},
			{"spoken" : "git diff","action" : "Insert \"git diff \". "},
			{"spoken" : "git diff cached","action" : "Insert \"git diff --cached\\n\". "},
			{"spoken" : "git diff tool","action" : "Insert \"git difftool -d\\n\". "},
			{"spoken" : "git diff tool cached","action" : "Insert \"git difftool --cached -d\\n\". "},
			{"spoken" : "git fetch","action" : "Insert \"git fetch\\n\". "},
			{"spoken" : "git fetch all","action" : "Insert \"git fetch --all\\n\". "},
			{"spoken" : "git fetch  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Insert \"git fetch  <text>\". "},
			{"spoken" : "git fetch prune","action" : "Insert \"git fetch --prune\\n\". "},
			{"spoken" : "git in it","action" : "Insert \"git init\\n\". "},
			{"spoken" : "git log all","action" : "Insert \"git log\\n\". "},
			{"spoken" : "git log all changes","action" : "Insert \"git log -c\\n\". "},
			{"spoken" : "git log","action" : "Insert \"git log \". "},
			{"spoken" : "git log changes","action" : "Insert \"git log -c \". "},
			{"spoken" : "git merge","action" : "Insert \"git merge \". "},
			{"spoken" : "git merge  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Insert \"git merge  <text>\". "},
			{"spoken" : "git merge tool","action" : "Insert \"git mergetool\\n\". "},
			{"spoken" : "git move","action" : "Insert \"git mv \". "},
			{"spoken" : "git pull","action" : "Insert \"git pull\\n\". "},
			{"spoken" : "git pull origin","action" : "Insert \"git pull origin \". "},
			{"spoken" : "git pull rebase","action" : "Insert \"git pull --rebase\\n\". "},
			{"spoken" : "git pull fast forward","action" : "Insert \"git pull --ff-only\\n\". "},
			{"spoken" : "git pull  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Insert \"git pull  <text>  \". "},
			{"spoken" : "git push","action" : "Insert \"git push\\n\". "},
			{"spoken" : "git push origin","action" : "Insert \"git push origin \". "},
			{"spoken" : "git push up stream origin","action" : "Insert \"git push -u origin\". "},
			{"spoken" : "git push  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Insert \"git push  <text>  \". "},
			{"spoken" : "git push tags","action" : "Insert \"git push --tags\\n\". "},
			{"spoken" : "git rebase","action" : "Insert \"git rebase \". "},
			{"spoken" : "git rebase continue","action" : "Insert \"git rebase --continue\". "},
			{"spoken" : "git rebase skip","action" : "Insert \"git rebase --skip\". "},
			{"spoken" : "git remove","action" : "Insert \"git rm \". "},
			{"spoken" : "git (remove|delete) branch","action" : "Insert \"git branch -d \". "},
			{"spoken" : "git (remove|delete) remote branch","action" : "Insert \"git push --delete origin \". "},
			{"spoken" : "git reset","action" : "Insert \"git reset \". "},
			{"spoken" : "git reset soft","action" : "Insert \"git reset --soft \". "},
			{"spoken" : "git reset hard","action" : "Insert \"git reset --hard \". "},
			{"spoken" : "git restore","action" : "Insert \"git restore \". "},
			{"spoken" : "git restore staged","action" : "Insert \"git restore --staged \". "},
			{"spoken" : "git restore source","action" : "Insert \"git restore --source=\". "},
			{"spoken" : "git remote","action" : "Insert \"git remote \". "},
			{"spoken" : "git remote add","action" : "Insert \"git remote add \". "},
			{"spoken" : "git remote list","action" : "Insert \"git remote -v\\n\". "},
			{"spoken" : "git remote set url","action" : "Insert \"git remote set-url \". "},
			{"spoken" : "git remote add upstream","action" : "Insert \"git remote add upstream \". "},
			{"spoken" : "git remote remove","action" : "Insert \"git remote remove \". "},
			{"spoken" : "git remote show origin","action" : "Insert \"git remote show origin\\n\". "},
			{"spoken" : "git show","action" : "Insert \"git show \". "},
			{"spoken" : "git stash pop","action" : "Insert \"git stash pop\\n\". "},
			{"spoken" : "git stash","action" : "Insert \"git stash\\n\". "},
			{"spoken" : "git stash push","action" : "Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.. "},
			{"spoken" : "git stash apply","action" : "Insert \"git stash apply\\n\". "},
			{"spoken" : "git stash list","action" : "Insert \"git stash list\\n\". "},
			{"spoken" : "git stash show","action" : "Insert \"git stash show\". "},
			{"spoken" : "git status","action" : "Insert \"git status\\n\". "},
			{"spoken" : "git switch [ <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ]","action" : "Insert \"git switch  <text> or  (formatted with DASH_SEPARATED)\". "},
			{"spoken" : "git switch master","action" : "Insert \"git switch master \". "},
			{"spoken" : "git switch main","action" : "Insert \"git switch main \". "},
			{"spoken" : "git switch detached","action" : "Insert \"git switch --detach \". "},
			{"spoken" : "git (switch create | new branch) [ <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ]","action" : "Insert \"git switch -c  <text> or  (formatted with DASH_SEPARATED)\". "},
			{"spoken" : "git switch orphan","action" : "Insert \"git switch --orphan \". "},
			{"spoken" : "git submodule add","action" : "Insert \"git submodule add \". "},
			{"spoken" : "git tag","action" : "Insert \"git tag \". "},
			{"spoken" : "git edit config","action" : "Insert \"git config --local -e\\n\". "},
			{"spoken" : "git clone clipboard","action" : "Insert \"git clone \". Paste clipboard at cursor. Press enter. "},
			{"spoken" : "git diff highlighted","action" : "Copy selection to clipboard. Insert \"git diff \". Paste clipboard at cursor. Press enter. "},
			{"spoken" : "git diff clipboard","action" : "Insert \"git diff \". Paste clipboard at cursor. Press enter. "},
			{"spoken" : "git add highlighted","action" : "Copy selection to clipboard. Insert \"git add \". Paste clipboard at cursor. Press enter. "},
			{"spoken" : "git add clipboard","action" : "Insert \"git add \". Paste clipboard at cursor. Press enter. "},
			{"spoken" : "git commit highlighted","action" : "Copy selection to clipboard. Insert \"git add \". Paste clipboard at cursor. Insert \"\\ngit commit\\n\". "},

		],
		"Git Add Patch": [
			{"spoken" : "yank","action" : "Press y. Press enter. "},
			{"spoken" : "near","action" : "Press n. Press enter. "},
			{"spoken" : "quench","action" : "Press q. Press enter. "},
			{"spoken" : "drum","action" : "Press d. Press enter. "},
			{"spoken" : "air","action" : "Press a. Press enter. "},

		],
		"Help": [
			{"spoken" : "help alphabet","action" : "Provides the symbol dictionary. "},
			{"spoken" : "help symbols","action" : "Provides the symbol dictionary. "},
			{"spoken" : "help numbers","action" : "Provides the symbol dictionary. "},
			{"spoken" : "help punctuation","action" : "Provides the symbol dictionary. "},
			{"spoken" : "help modifier","action" : "Provides the symbol dictionary. "},
			{"spoken" : "help special keys","action" : "Provides the symbol dictionary. "},
			{"spoken" : "help function keys","action" : "Provides the symbol dictionary. "},
			{"spoken" : "help arrows","action" : "Provides the symbol dictionary. "},
			{"spoken" : "(help formatters | help format | format help)","action" : "Provides the list of formatter keywords. "},
			{"spoken" : "help context","action" : "Display contextual command info. "},
			{"spoken" : "help active","action" : "Display contextual command info. "},
			{"spoken" : "help search  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Display command info for search phrase. "},
			{"spoken" : "help context <a href=\"#user-help-contexts-list\">  {user.help-contexts}  </a>","action" : "Display command info for selected context. "},
			{"spoken" : "help help","action" : "Display command info for search phrase. "},
			{"spoken" : "help scope","action" : "Toggle help scope gui. "},

		],
		"Help Open": [
			{"spoken" : "help next","action" : "Navigates to next page. "},
			{"spoken" : "help previous","action" : "Navigates to previous page. "},
			{"spoken" : "help  &lt;number&gt;  ","action" : "Select the context by a number. "},
			{"spoken" : "help return","action" : "to the main help window"},
			{"spoken" : "help refresh","action" : "Refreshes the help. "},
			{"spoken" : "help close","action" : "Hides the help. "},

		],
		"Help Scope Open": [
			{"spoken" : "scope (hide | close)","action" : "Toggle help scope gui. "},

		],
		"History": [
			{"spoken" : "command history","action" : "Toggles viewing the history. "},
			{"spoken" : "command history close","action" : "Disables the history. "},
			{"spoken" : "command history clear","action" : "Clear the history. "},
			{"spoken" : "command history less","action" : "Show less history. "},
			{"spoken" : "command history more","action" : "Show more history. "},

		],
		"Keys": [
			{"spoken" : "go  <a href=\"#user-arrow-keys-capture\"> &lt;user.arrow-keys&gt; </a> ","action" : "Given a sequence of directions, eg. 'left left up', moves the cursor accordingly using edit.{left,right,up,down}.. "},
			{"spoken" : " <a href=\"#user-letter-capture\"> &lt;user.letter&gt; </a> ","action" : "Press letter. "},
			{"spoken" : "(ship | uppercase)  <a href=\"#user-letters-capture\"> &lt;user.letters&gt; </a>  [(lowercase | sunk)]","action" : "Inserts a phrase formatted according to formatters. Formatters is a comma separated list of formatters (e.g. 'CAPITALIZE_ALL_WORDS,DOUBLE_QUOTED_STRING'). "},
			{"spoken" : " <a href=\"#user-symbol-key-capture\"> &lt;user.symbol-key&gt; </a> ","action" : "Press symbol_key. "},
			{"spoken" : " <a href=\"#user-function-key-capture\"> &lt;user.function-key&gt; </a> ","action" : "Press function_key. "},
			{"spoken" : " <a href=\"#user-special-key-capture\"> &lt;user.special-key&gt; </a> ","action" : "Press special_key. "},
			{"spoken" : " <a href=\"#user-modifiers-capture\"> &lt;user.modifiers&gt; </a>   <a href=\"#user-unmodified-key-capture\"> &lt;user.unmodified-key&gt; </a> ","action" : "Press <modifiers> - <unmodified_key>. "},
			{"spoken" : "press  <a href=\"#user-modifiers-capture\"> &lt;user.modifiers&gt; </a> ","action" : "Press modifiers. "},
			{"spoken" : "press  <a href=\"#user-keys-capture\"> &lt;user.keys&gt; </a> ","action" : "Press keys. "},

		],
		"Macro (MacOS)": [
			{"spoken" : "macro record","action" : "Begin recording a new voice command macro.. "},
			{"spoken" : "macro stop","action" : "Stop recording the macro.. "},
			{"spoken" : "macro play","action" : "Execute the commands in the last recorded macro.. "},

		],
		"Media": [
			{"spoken" : "volume up","action" : "Press volup. "},
			{"spoken" : "volume down","action" : "Press voldown. "},
			{"spoken" : "set volume  &lt;number&gt;  ","action" : "user.media_set_volume(number)"},
			{"spoken" : "(volume|media) mute","action" : "Press mute. "},
			{"spoken" : "[media] play next","action" : "Press next. "},
			{"spoken" : "[media] play previous","action" : "Press prev. "},
			{"spoken" : "media (play | pause)","action" : "Plays or pauses media. "},

		],
		"Messaging": [
			{"spoken" : "previous (workspace | server)","action" : "Move to previous workspace/server. "},
			{"spoken" : "next (workspace | server)","action" : "Move to next qorkspace/server. "},
			{"spoken" : "channel","action" : "Open channel picker. "},
			{"spoken" : "channel  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Open channel picker. Insert \"<user.text> (formatted with ALL_LOWERCASE)\". "},
			{"spoken" : "channel up","action" : "Move to previous channel. "},
			{"spoken" : "channel down","action" : "Move to next channel. "},
			{"spoken" : "([channel] unread last | gopreev)","action" : "Move to previous unread channel. "},
			{"spoken" : "([channel] unread next | goneck)","action" : "Moved to next unread channel. "},
			{"spoken" : "go (find | search)","action" : "Open message search. "},
			{"spoken" : "mark (all | workspace | server) read","action" : "Mark this workspace/server as read. "},
			{"spoken" : "mark channel read","action" : "Mark this channel as read.. "},
			{"spoken" : "upload file","action" : "Upload a file as a message. "},

		],
		"Microphone Selection": [
			{"spoken" : "microphone show","action" : "Show GUI for choosing the Talon microphone. "},
			{"spoken" : "microphone close","action" : "Hide the microphone selection GUI. "},
			{"spoken" : "microphone pick  &lt;number-small&gt;  ","action" : "Selects a micropohone. "},

		],
		"Mouse": [
			{"spoken" : "control mouse","action" : "Toggles control mouse. Pass in a bool to enable it, otherwise toggle the current state. "},
			{"spoken" : "zoom mouse","action" : "Toggles zoom mouse. "},
			{"spoken" : "camera overlay","action" : "Toggles camera overlay. "},
			{"spoken" : "run calibration","action" : "Start calibration. "},
			{"spoken" : "touch","action" : "Press and release a mouse button. Close the active grid. Releases any held mouse buttons. "},
			{"spoken" : "righty","action" : "Press and release a mouse button. Close the active grid. "},
			{"spoken" : "mid click","action" : "Press and release a mouse button. Close the active grid. "},
			{"spoken" : " <a href=\"#user-modifiers-capture\"> &lt;user.modifiers&gt; </a>  touch","action" : "Press <modifiers> :down. Press and release a mouse button. Press <modifiers> :up. Close the active grid. "},
			{"spoken" : " <a href=\"#user-modifiers-capture\"> &lt;user.modifiers&gt; </a>  righty","action" : "Press <modifiers> :down. Press and release a mouse button. Press <modifiers> :up. Close the active grid. "},
			{"spoken" : "(dub click | duke)","action" : "Press and release a mouse button. Press and release a mouse button. Close the active grid. "},
			{"spoken" : "(trip click | trip lick)","action" : "Press and release a mouse button. Press and release a mouse button. Press and release a mouse button. Close the active grid. "},
			{"spoken" : "left drag | drag","action" : "Press and hold/release a specific mouse button for dragging. Close the active grid. "},
			{"spoken" : "right drag | righty drag","action" : "Press and hold/release a specific mouse button for dragging. Close the active grid. "},
			{"spoken" : "end drag | drag end","action" : "Releases any held mouse buttons. "},
			{"spoken" : "wheel down","action" : "Scrolls down. "},
			{"spoken" : "wheel down here","action" : "move the mouse cursor to the center of the currently active window. Scrolls down. "},
			{"spoken" : "wheel tiny [down]","action" : "Scrolls down. "},
			{"spoken" : "wheel tiny [down] here","action" : "move the mouse cursor to the center of the currently active window. Scrolls down. "},
			{"spoken" : "wheel downer","action" : "Scrolls down continuously. "},
			{"spoken" : "wheel downer here","action" : "move the mouse cursor to the center of the currently active window. Scrolls down continuously. "},
			{"spoken" : "wheel up","action" : "Scrolls up. "},
			{"spoken" : "wheel up here","action" : "move the mouse cursor to the center of the currently active window. Scrolls up. "},
			{"spoken" : "wheel tiny up","action" : "Scrolls up. "},
			{"spoken" : "wheel tiny up here","action" : "move the mouse cursor to the center of the currently active window. Scrolls up. "},
			{"spoken" : "wheel upper","action" : "Scrolls up continuously. "},
			{"spoken" : "wheel upper here","action" : "move the mouse cursor to the center of the currently active window. Scrolls up continuously. "},
			{"spoken" : "wheel gaze","action" : "Starts gaze scroll. "},
			{"spoken" : "wheel gaze here","action" : "move the mouse cursor to the center of the currently active window. Starts gaze scroll. "},
			{"spoken" : "wheel stop","action" : "Stops scrolling. "},
			{"spoken" : "wheel stop here","action" : "move the mouse cursor to the center of the currently active window. Stops scrolling. "},
			{"spoken" : "wheel left","action" : "Scrolls left. "},
			{"spoken" : "wheel left here","action" : "move the mouse cursor to the center of the currently active window. Scrolls left. "},
			{"spoken" : "wheel tiny left","action" : "Scrolls left. "},
			{"spoken" : "wheel tiny left here","action" : "move the mouse cursor to the center of the currently active window. Scrolls left. "},
			{"spoken" : "wheel right","action" : "Scrolls right. "},
			{"spoken" : "wheel right here","action" : "move the mouse cursor to the center of the currently active window. Scrolls right. "},
			{"spoken" : "wheel tiny right","action" : "Scrolls right. "},
			{"spoken" : "wheel tiny right here","action" : "move the mouse cursor to the center of the currently active window. Scrolls right. "},
			{"spoken" : "copy mouse position","action" : "Copy the current mouse position coordinates. "},
			{"spoken" : "curse no","action" : "Show a desktop notification. "},

		],
		"Mouse Cursor": [
			{"spoken" : "curse yes","action" : "Shows the cursor. "},
			{"spoken" : "curse no","action" : "Hides the cursor. "},

		],
		"Multiple Cursors": [
			{"spoken" : "cursor multiple","action" : "Enables multi-cursor mode. "},
			{"spoken" : "cursor stop","action" : "Disables multi-cursor mode. "},
			{"spoken" : "cursor up","action" : "Adds cursor to line above. "},
			{"spoken" : "cursor down","action" : "Adds cursor to line below. "},
			{"spoken" : "cursor less","action" : "Removes selection & cursor at last occurrence. "},
			{"spoken" : "cursor more","action" : "Adds cursor at next occurrence of selection. "},
			{"spoken" : "cursor skip","action" : "Skips adding a cursor at next occurrence of selection. "},
			{"spoken" : "cursor all","action" : "Adds cursor at every occurrence of selection. "},
			{"spoken" : "cursor lines","action" : "Adds cursor at end of every selected line. "},

		],
		"Pages": [
			{"spoken" : "page next","action" : "Go to next page. "},
			{"spoken" : "page last","action" : "Go to previous page. "},
			{"spoken" : "go page  &lt;number&gt;  ","action" : "Go to page number. "},
			{"spoken" : "go page final","action" : "Go to final page. "},

		],
		"Repeater": [
			{"spoken" : " <a href=\"#user-ordinals-capture\"> &lt;user.ordinals&gt; </a> ","action" : "Repeat the last command N times. "},
			{"spoken" : " &lt;number-small&gt;   times","action" : "Repeat the last command N times. "},
			{"spoken" : "(repeat that|twice)","action" : "Repeat the last command N times. "},
			{"spoken" : "repeat that  &lt;number-small&gt;   [times]","action" : "Repeat the last command N times. "},

		],
		"Screens": [
			{"spoken" : "screen numbers","action" : "Show screen number on each screen. "},

		],
		"Screenshot": [
			{"spoken" : "grab screen","action" : "Takes a screenshot of the entire screen and saves it to the pictures folder.. "},
			{"spoken" : "grab screen  &lt;number-small&gt;  ","action" : "Takes a screenshot of the entire screen and saves it to the pictures folder.. "},
			{"spoken" : "grab window","action" : "Takes a screenshot of the active window and saves it to the pictures folder. "},
			{"spoken" : "grab selection","action" : "Triggers an application that is capable of taking a screenshot of a portion of the screen. "},
			{"spoken" : "grab settings","action" : "Opens the settings UI for screenshots.. "},
			{"spoken" : "grab screen clip","action" : "Takes a screenshot of the entire screen and saves it to the clipboard.. "},
			{"spoken" : "grab screen  &lt;number-small&gt;   clip","action" : "Takes a screenshot of the entire screen and saves it to the clipboard.. "},
			{"spoken" : "grab window clip","action" : "Takes a screenshot of the active window and saves it to the clipboard. "},

		],
		"Splits": [
			{"spoken" : "split right","action" : "Move active tab to right split. "},
			{"spoken" : "split left","action" : "Move active tab to left split. "},
			{"spoken" : "split down","action" : "Move active tab to lower split. "},
			{"spoken" : "split up","action" : "Move active tab to upper split. "},
			{"spoken" : "split (vertically | vertical)","action" : "Splits window vertically. "},
			{"spoken" : "split (horizontally | horizontal)","action" : "Splits window horizontally. "},
			{"spoken" : "split flip","action" : "Flips the orietation of the active split. "},
			{"spoken" : "split max","action" : "Maximizes the active split. "},
			{"spoken" : "split reset","action" : "Resets the split sizes. "},
			{"spoken" : "split window","action" : "Splits the window. "},
			{"spoken" : "split clear","action" : "Clears the current split. "},
			{"spoken" : "split clear all","action" : "Clears all splits. "},
			{"spoken" : "split next","action" : "Goes to next split. "},
			{"spoken" : "split last","action" : "Goes to last split. "},
			{"spoken" : "go split  &lt;number&gt;  ","action" : "Navigates to a the specified split. "},

		],
		"Standard": [
			{"spoken" : "zoom in","action" : "Zoom in. "},
			{"spoken" : "zoom out","action" : "Zoom out. "},
			{"spoken" : "zoom reset","action" : "Zoom to original size. "},
			{"spoken" : "scroll up","action" : "Move cursor up one page. "},
			{"spoken" : "scroll down","action" : "Move cursor down one page. "},
			{"spoken" : "copy that","action" : "Copy selection to clipboard. "},
			{"spoken" : "cut that","action" : "Cut selection to clipboard. "},
			{"spoken" : "(pace | paste) that","action" : "Paste clipboard at cursor. "},
			{"spoken" : "(pace | paste) enter","action" : "Paste clipboard at cursor. Press enter. "},
			{"spoken" : "undo that","action" : "Undo. "},
			{"spoken" : "redo that","action" : "Redo. "},
			{"spoken" : "paste match","action" : "Paste clipboard without style information. "},
			{"spoken" : "file save","action" : "Save current document. "},
			{"spoken" : "file save all","action" : "Save all open documents. "},
			{"spoken" : "(pad | padding)","action" : "Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.. "},
			{"spoken" : "slap","action" : "Insert line below cursor. "},

		],
		"Tabs": [
			{"spoken" : "tab (open | new)","action" : "Open a new tab. "},
			{"spoken" : "tab (last | previous)","action" : "Switch to previous tab for this window. "},
			{"spoken" : "tab next","action" : "Switch to next tab for this window. "},
			{"spoken" : "tab close","action" : "Closes the current tab.. "},
			{"spoken" : "tab (reopen|restore)","action" : "Re-open the last-closed tab. "},
			{"spoken" : "go tab  &lt;number&gt;  ","action" : "Jumps to the specified tab. "},
			{"spoken" : "go tab final","action" : "Jumps to the final tab. "},
			{"spoken" : "tab duplicate","action" : "Duplicates the current tab.. "},

		],
		"Talon Helpers": [
			{"spoken" : "talon check updates","action" : "Check for updates. "},
			{"spoken" : "talon open log","action" : "Open Talon log. "},
			{"spoken" : "talon open rebel","action" : "Open Talon REPL. "},
			{"spoken" : "talon home","action" : "Open Talon config folder. "},
			{"spoken" : "talon copy context pie","action" : "Adds os-specific context info to the clipboard for the focused app for .py files. Assumes you've a Module named mod declared.. "},
			{"spoken" : "talon copy context","action" : "Adds os-specific context info to the clipboard for the focused app for .talon files. "},
			{"spoken" : "talon copy name","action" : "Let <name> be active app's name. Set clipboard text. "},
			{"spoken" : "talon copy executable","action" : "Let <executable> be active app's executable name. Set clipboard text. "},
			{"spoken" : "talon copy bundle","action" : "Let <bundle> be active app's bundle identifier. Set clipboard text. "},
			{"spoken" : "talon copy title","action" : "Let <title> be window title. Set clipboard text. "},
			{"spoken" : "talon dump version","action" : "Let <result> be talon & operation system verison information. Display an object in the log. "},
			{"spoken" : "talon insert version","action" : "Let <result> be talon & operation system verison information. Pastes text and preserves clipboard. "},
			{"spoken" : "talon dump context","action" : "Let <result> be active context info. Display an object in the log. "},
			{"spoken" : "talon test last","action" : "Let <phrase> be the history entry at the specified index. Sims the phrase in the active app and dumps to the log. "},
			{"spoken" : "talon test numb  &lt;number-small&gt;  ","action" : "Let <phrase> be the history entry at the specified index. Sims the phrase in the active app and dumps to the log. "},
			{"spoken" : "talon test  &lt;phrase&gt;  ","action" : "Sims the phrase in the active app and dumps to the log. "},
			{"spoken" : "talon debug action <a href=\"#user-talon-actions-list\">  {user.talon-actions}  </a>","action" : "Runs action.find for the provided action and dumps to the log. "},
			{"spoken" : "talon debug list <a href=\"#user-talon-lists-list\">  {user.talon-lists}  </a>","action" : "Dumps the contents of list to the console. "},
			{"spoken" : "talon copy list <a href=\"#user-talon-lists-list\">  {user.talon-lists}  </a>","action" : "Dumps the contents of list to the console. "},
			{"spoken" : "talon debug tags","action" : "Dumps the active tags to the console. "},
			{"spoken" : "talon debug modes","action" : "Dumps active modes to the console. "},
			{"spoken" : "talon debug scope <a href=\"#user-talon-scopes-list\">  {user.talon-scopes}  </a>","action" : "Dumps the active scope information to the console. "},
			{"spoken" : "talon debug setting <a href=\"#user-talon-settings-list\">  {user.talon-settings}  </a>","action" : "Dumps the current setting to the console. "},
			{"spoken" : "talon debug all settings","action" : "Dumps all settings to the console. "},
			{"spoken" : "talon debug active app","action" : "Let <result> be all active app info to the cliboard. Display an object in the log. Display an object in the log. Display an object in the log. "},
			{"spoken" : "talon copy active app","action" : "Let <result> be all active app info to the cliboard. Set clipboard text. "},
			{"spoken" : "talon (bug report|report bug)","action" : "Visit the given URL.. "},

		],
		"Vocabulary": [
			{"spoken" : "copy to vocab [as  &lt;phrase&gt;  ]","action" : "Permanently adds the currently selected text to the vocabulary with the provided. "},
			{"spoken" : "copy name to vocab [as  &lt;phrase&gt;  ]","action" : "Permanently adds the currently selected text to the vocabulary with the provided. "},
			{"spoken" : "copy noun to vocab [as  &lt;phrase&gt;  ]","action" : "Permanently adds the currently selected text to the vocabulary with the provided. "},
			{"spoken" : "copy to replacements as  &lt;phrase&gt;  ","action" : "Permanently adds the currently selected text as replacement for the provided. "},
			{"spoken" : "copy name to replacements as  &lt;phrase&gt;  ","action" : "Permanently adds the currently selected text as replacement for the provided. "},
			{"spoken" : "copy noun to replacements as  &lt;phrase&gt;  ","action" : "Permanently adds the currently selected text as replacement for the provided. "},

		],
		"Websites And Search Engines": [
			{"spoken" : "open <a href=\"#user-website-list\">  {user.website}  </a>","action" : "Visit the given URL.. "},
			{"spoken" : "<a href=\"#user-search-engine-list\">  {user.search-engine}  </a> hunt  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Search a search engine for given text. "},
			{"spoken" : "<a href=\"#user-search-engine-list\">  {user.search-engine}  </a> (that|this)","action" : "Let <text> be the selected text. Search a search engine for given text. "},

		],
		"Window Management (Windows)": [
			{"spoken" : "window (new|open)","action" : "Open a new window. "},
			{"spoken" : "window next","action" : "Switch to next window for this app. "},
			{"spoken" : "window last","action" : "Switch to previous window for this app. "},
			{"spoken" : "window close","action" : "Close the current window. "},
			{"spoken" : "focus  <a href=\"#user-running-applications-capture\"> &lt;user.running-applications&gt; </a> ","action" : "Focus a new application by name. "},
			{"spoken" : "focus","action" : "Open a menu of running apps to switch to. "},
			{"spoken" : "running list","action" : "Shows/hides all running applications. "},
			{"spoken" : "running close","action" : "Hides list of running applications. "},
			{"spoken" : "launch  <a href=\"#user-launch-applications-capture\"> &lt;user.launch-applications&gt; </a> ","action" : "Launch a new application by path (all OSes), or AppUserModel_ID path on Windows. "},
			{"spoken" : "snap  <a href=\"#user-window-snap-position-capture\"> &lt;user.window-snap-position&gt; </a> ","action" : "Move the active window to a specific position on-screen.. "},
			{"spoken" : "snap next [screen]","action" : "Move the active window to a specific screen.. "},
			{"spoken" : "snap last [screen]","action" : "Move the active window to the previous screen.. "},
			{"spoken" : "snap screen  &lt;number&gt;  ","action" : "Move the active window leftward by one.. "},
			{"spoken" : "snap  <a href=\"#user-running-applications-capture\"> &lt;user.running-applications&gt; </a>   <a href=\"#user-window-snap-position-capture\"> &lt;user.window-snap-position&gt; </a> ","action" : "Snap a specific application to another screen.. "},
			{"spoken" : "snap  <a href=\"#user-running-applications-capture\"> &lt;user.running-applications&gt; </a>  [screen]  &lt;number&gt;  ","action" : "Move a specific application to another screen.. "},

		],
		"Dictation Mode": [
			{"spoken" : "press  <a href=\"#user-modifiers-capture\"> &lt;user.modifiers&gt; </a> ","action" : "Press modifiers. "},
			{"spoken" : "press  <a href=\"#user-keys-capture\"> &lt;user.keys&gt; </a> ","action" : "Press keys. "},
			{"spoken" : " <a href=\"#user-raw-prose-capture\"> &lt;user.raw-prose&gt; </a> ","action" : "Insert \"<raw_prose>\". "},
			{"spoken" : "cap","action" : "Sets the dictation formatter to capitalize. "},
			{"spoken" : "(no cap | no-caps)","action" : "Sets the dictation formatter to not capitalize. "},
			{"spoken" : "(no space | no-space)","action" : "Sets the dictation formatter to not prepend a space. "},
			{"spoken" : "cap that","action" : "Capitalizes the last utterance. "},
			{"spoken" : "(no cap | no-caps) that","action" : "Lowercases the last utterance. "},
			{"spoken" : "(no space | no-space) that","action" : "Removes space before the last utterance. "},
			{"spoken" : "go up  &lt;number-small&gt;   (line|lines)","action" : "Move cursor up one row. Repeat <number_small> - 1 times. "},
			{"spoken" : "go down  &lt;number-small&gt;   (line|lines)","action" : "Move cursor down one row. Repeat <number_small> - 1 times. "},
			{"spoken" : "go left  &lt;number-small&gt;   (word|words)","action" : "Move cursor left one word. Repeat <number_small> - 1 times. "},
			{"spoken" : "go right  &lt;number-small&gt;   (word|words)","action" : "Move cursor right one word. Repeat <number_small> - 1 times. "},
			{"spoken" : "go line start","action" : "Move cursor to start of line. "},
			{"spoken" : "go line end","action" : "Move cursor to end of line. "},
			{"spoken" : "select left  &lt;number-small&gt;   (word|words)","action" : "Extend selection left one word. Repeat <number_small> - 1 times. "},
			{"spoken" : "select right  &lt;number-small&gt;   (word|words)","action" : "Extend selection right one word. Repeat <number_small> - 1 times. "},
			{"spoken" : "select left  &lt;number-small&gt;   (character|characters)","action" : "Extend selection left one column. Repeat <number_small> - 1 times. "},
			{"spoken" : "select right  &lt;number-small&gt;   (character|characters)","action" : "Extend selection right one column. Repeat <number_small> - 1 times. "},
			{"spoken" : "clear left  &lt;number-small&gt;   (word|words)","action" : "Extend selection left one word. Repeat <number_small> - 1 times. Delete selection. "},
			{"spoken" : "clear right  &lt;number-small&gt;   (word|words)","action" : "Extend selection right one word. Repeat <number_small> - 1 times. Delete selection. "},
			{"spoken" : "clear left  &lt;number-small&gt;   (character|characters)","action" : "Extend selection left one column. Repeat <number_small> - 1 times. Delete selection. "},
			{"spoken" : "clear right  &lt;number-small&gt;   (character|characters)","action" : "Extend selection right one column. Repeat <number_small> - 1 times. Delete selection. "},
			{"spoken" : "formatted  <a href=\"#user-format-text-capture\"> &lt;user.format-text&gt; </a> ","action" : "Inserts text as-is, without invoking the dictation formatter.. "},
			{"spoken" : "format selection  <a href=\"#user-formatters-capture\"> &lt;user.formatters&gt; </a> ","action" : "Reformats the current selection.. "},
			{"spoken" : "scratch that","action" : "Clears the last phrase. "},
			{"spoken" : "scratch selection","action" : "Delete selection. "},
			{"spoken" : "select that","action" : "Selects the last phrase. "},
			{"spoken" : "spell that  <a href=\"#user-letters-capture\"> &lt;user.letters&gt; </a> ","action" : "Insert \"<letters>\". "},
			{"spoken" : "spell that  <a href=\"#user-formatters-capture\"> &lt;user.formatters&gt; </a>   <a href=\"#user-letters-capture\"> &lt;user.letters&gt; </a> ","action" : "Let <result> be <letters> (formatted with <formatters>). Inserts text as-is, without invoking the dictation formatter.. "},
			{"spoken" : "escape  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Insert \"<user.text>\". "},

		],
		"Dragon Modes": [
			{"spoken" : "dragon mode","action" : "For windows and Mac with Dragon, disables Talon commands and exits Dragon's command mode. "},
			{"spoken" : "talon mode","action" : "For windows and Mac with Dragon, enables Talon commands and Dragon's command mode.. "},

		],
		"Language Modes": [
			{"spoken" : "force <a href=\"#user-language-mode-list\">  {user.language-mode}  </a>","action" : "Sets the active language mode, and disables extension matching. "},
			{"spoken" : "clear language modes","action" : "Clears the active language mode, and re-enables code.language: extension matching. "},
			{"spoken" : "[enable] debug mode","action" : "Enable a mode. "},
			{"spoken" : "disable debug mode","action" : "Disable a mode. "},

		],
		"Modes": [
			{"spoken" : "dictation mode","action" : "Disable a mode. Disable a mode. Enable a mode. Clears the active language mode, and re-enables code.language: extension matching. Disable a mode. "},
			{"spoken" : "command mode","action" : "Disable a mode. Disable a mode. Enable a mode. "},
			{"spoken" : "mixed mode","action" : "Disable a mode. Enable a mode. Enable a mode. "},

		],
		"Sleep Mode Wav2letter": [
			{"spoken" : " &lt;phrase&gt;  ","action" : "Do nothing. "},

		],
		"Wake Up": [
			{"spoken" : "welcome back","action" : "Enable control mouse, zoom mouse, and disables cursor. Enables the history. For windows and Mac with Dragon, enables Talon commands and Dragon's command mode.. "},
			{"spoken" : "sleep all [ &lt;phrase&gt;  ]","action" : "Hides list of running applications. Disables the history. Hides the homophones display. Hides the help. Disables control mouse, zoom mouse, and re-enables cursor. Disable speech recognition. Sleep the engine. "},
			{"spoken" : "talon sleep [ &lt;phrase&gt;  ]","action" : "Disable speech recognition. "},
			{"spoken" : "talon wake","action" : "Enable speech recognition. "},

		],
		"Mouse Grid": [
			{"spoken" : "M grid","action" : "Show a desktop notification. Brings up mouse grid. Show mouse grid. "},

		],
		"Mouse Grid Always": [
			{"spoken" : "mouse grid","action" : "Brings up mouse grid. Show mouse grid. "},
			{"spoken" : "grid win","action" : "Places the grid on the currently active window. Show mouse grid. "},
			{"spoken" : "grid  <a href=\"#user-number-key-capture\"> &lt;user.number-key&gt; </a> +","action" : "Show mouse grid. Choose fields multiple times in a row. "},
			{"spoken" : "grid screen [ &lt;number&gt;  ]","action" : "Brings up mouse grid. Show mouse grid. "},

		],
		"Mouse Grid Open": [
			{"spoken" : " <a href=\"#user-number-key-capture\"> &lt;user.number-key&gt; </a> ","action" : "Choose a field of the grid and narrow the selection down. "},
			{"spoken" : "grid off","action" : "Close the active grid. "},
			{"spoken" : "grid reset","action" : "Resets the grid to fill the whole screen again. "},
			{"spoken" : "grid back","action" : "Sets the grid state back to what it was before the last command. "},

		],
		"Draft Global (Windows)": [
			{"spoken" : "draft show","action" : "Hides draft window. Shows draft window. "},
			{"spoken" : "draft show  <a href=\"#user-draft-window-position-capture\"> &lt;user.draft-window-position&gt; </a> ","action" : "Hides draft window. Shows draft window. Lets you move the window to the top, bottom, left, right, or middle. "},
			{"spoken" : "draft show small","action" : "Hides draft window. Shows draft window. Resize the draft window.. "},
			{"spoken" : "draft show large","action" : "Hides draft window. Shows draft window. Resize the draft window.. "},
			{"spoken" : "draft empty","action" : "Shows draft window. "},
			{"spoken" : "draft edit","action" : "Let <text> be the selected text. Press backspace. Shows draft window. "},
			{"spoken" : "draft edit all","action" : "Select all text in the current document. Let <text> be the selected text. Press backspace. Shows draft window. "},

		],
		"Draft Window (Windows)": [
			{"spoken" : "replace  <a href=\"#user-draft-anchor-capture\"> &lt;user.draft-anchor&gt; </a>  with  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Selects text in the draft window. Let <result> be <text> (formatted with NOOP). Insert \"<result>\". "},
			{"spoken" : "(pre | cursor | cursor before)  <a href=\"#user-draft-anchor-capture\"> &lt;user.draft-anchor&gt; </a> ","action" : "Positions the caret in the draft window. "},
			{"spoken" : "(post | cursor after)  <a href=\"#user-draft-anchor-capture\"> &lt;user.draft-anchor&gt; </a> ","action" : "Positions the caret in the draft window. "},
			{"spoken" : "(take | select)  <a href=\"#user-draft-anchor-capture\"> &lt;user.draft-anchor&gt; </a> ","action" : "Selects text in the draft window. "},
			{"spoken" : "(take | select)  <a href=\"#user-draft-anchor-capture\"> &lt;user.draft-anchor&gt; </a>  (through | past)  <a href=\"#user-draft-anchor-capture\"> &lt;user.draft-anchor&gt; </a> ","action" : "Selects text in the draft window. "},
			{"spoken" : "(change | chuck | clear)  <a href=\"#user-draft-anchor-capture\"> &lt;user.draft-anchor&gt; </a> ","action" : "Selects text in the draft window. Press backspace. "},
			{"spoken" : "(change | chuck | clear)  <a href=\"#user-draft-anchor-capture\"> &lt;user.draft-anchor&gt; </a>  (through | past)  <a href=\"#user-draft-anchor-capture\"> &lt;user.draft-anchor&gt; </a> ","action" : "Selects text in the draft window. Press backspace. "},
			{"spoken" : " <a href=\"#user-formatters-capture\"> &lt;user.formatters&gt; </a>  word  <a href=\"#user-draft-anchor-capture\"> &lt;user.draft-anchor&gt; </a> ","action" : "Selects text in the draft window. Reformats the current selection.. "},
			{"spoken" : " <a href=\"#user-formatters-capture\"> &lt;user.formatters&gt; </a>   <a href=\"#user-draft-anchor-capture\"> &lt;user.draft-anchor&gt; </a>  (through | past)  <a href=\"#user-draft-anchor-capture\"> &lt;user.draft-anchor&gt; </a> ","action" : "Selects text in the draft window. Reformats the current selection.. "},

		],
		"Draft Window Open (Windows)": [
			{"spoken" : "draft hide","action" : "Hides draft window. "},
			{"spoken" : "draft submit","action" : "Let <content> be the text in the draft window. Hides draft window. Insert \"<content>\". "},

		],
		"Find And Replace": [
			{"spoken" : "hunt this","action" : "Finds text in current editor. "},
			{"spoken" : "hunt this (pace | paste)","action" : "Finds text in current editor. Paste clipboard at cursor. "},
			{"spoken" : "hunt this  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Finds text in current editor. "},
			{"spoken" : "hunt all","action" : "Finds text across project. "},
			{"spoken" : "hunt all (pace | paste)","action" : "Finds text across project. Paste clipboard at cursor. "},
			{"spoken" : "hunt all  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ","action" : "Finds text across project. "},
			{"spoken" : "hunt case","action" : "Toggles find match by case sensitivity. "},
			{"spoken" : "hunt word","action" : "Toggles find match by whole words. "},
			{"spoken" : "hunt expression","action" : "Toggles find match by regex. "},
			{"spoken" : "hunt next","action" : "Navigates to the next occurrence. "},
			{"spoken" : "hunt previous","action" : "Navigates to the previous occurrence. "},
			{"spoken" : "replace this [ <a href=\"#user-text-capture\"> &lt;user.text&gt; </a> ]","action" : "Search and replace for text in the active editor. "},
			{"spoken" : "replace all","action" : "Search and replaces for text in the entire project. "},
			{"spoken" : "replace  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  all","action" : "Search and replaces for text in the entire project. "},
			{"spoken" : "replace confirm that","action" : "Confirm replace at current position. "},
			{"spoken" : "replace confirm all","action" : "Confirm replace all. "},
			{"spoken" : "clear last  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Selects the previous occurrence of the text, and suppresses any find/replace dialogs.. Delete selection. "},
			{"spoken" : "clear next  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Selects the next occurrence of the text, and suppresses any find/replace dialogs.. Delete selection. "},
			{"spoken" : "clear last clip","action" : "Selects the previous occurrence of the text, and suppresses any find/replace dialogs.. Delete selection. "},
			{"spoken" : "clear next clip","action" : "Selects the next occurrence of the text, and suppresses any find/replace dialogs.. Delete selection. "},
			{"spoken" : "comment last  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Selects the previous occurrence of the text, and suppresses any find/replace dialogs.. Toggle comments on the current line(s). "},
			{"spoken" : "comment last clip","action" : "Selects the previous occurrence of the text, and suppresses any find/replace dialogs.. Toggle comments on the current line(s). "},
			{"spoken" : "comment next  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Selects the next occurrence of the text, and suppresses any find/replace dialogs.. Toggle comments on the current line(s). "},
			{"spoken" : "comment next clip","action" : "Selects the next occurrence of the text, and suppresses any find/replace dialogs.. Toggle comments on the current line(s). "},
			{"spoken" : "go last  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Selects the previous occurrence of the text, and suppresses any find/replace dialogs.. Move cursor right one column. "},
			{"spoken" : "go last clip","action" : "Selects the previous occurrence of the text, and suppresses any find/replace dialogs.. Move cursor right one column. "},
			{"spoken" : "go next  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Selects the next occurrence of the text, and suppresses any find/replace dialogs.. Move cursor right one column. "},
			{"spoken" : "go next clip","action" : "Selects the next occurrence of the text, and suppresses any find/replace dialogs.. Move cursor right one column. "},
			{"spoken" : "paste last  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Selects the previous occurrence of the text, and suppresses any find/replace dialogs.. Move cursor right one column. Paste clipboard at cursor. "},
			{"spoken" : "paste next  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Selects the next occurrence of the text, and suppresses any find/replace dialogs.. Move cursor right one column. Paste clipboard at cursor. "},
			{"spoken" : "replace last  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Selects the previous occurrence of the text, and suppresses any find/replace dialogs.. Paste clipboard at cursor. "},
			{"spoken" : "replace next  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Selects the next occurrence of the text, and suppresses any find/replace dialogs.. Paste clipboard at cursor. "},
			{"spoken" : "select last  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Selects the previous occurrence of the text, and suppresses any find/replace dialogs.. "},
			{"spoken" : "select next  <a href=\"#user-text-capture\"> &lt;user.text&gt; </a>  [over]","action" : "Selects the next occurrence of the text, and suppresses any find/replace dialogs.. "},
			{"spoken" : "select last clip","action" : "Selects the previous occurrence of the text, and suppresses any find/replace dialogs.. "},
			{"spoken" : "select next clip","action" : "Selects the next occurrence of the text, and suppresses any find/replace dialogs.. "},

		],
		"Generic Editor": [
			{"spoken" : "find it","action" : "Open Find dialog, optionally searching for text. "},
			{"spoken" : "next one","action" : "Select next Find result. "},
			{"spoken" : "go word left","action" : "Move cursor left one word. "},
			{"spoken" : "go word right","action" : "Move cursor right one word. "},
			{"spoken" : "go left","action" : "Move cursor left one column. "},
			{"spoken" : "go right","action" : "Move cursor right one column. "},
			{"spoken" : "go up","action" : "Move cursor up one row. "},
			{"spoken" : "go down","action" : "Move cursor down one row. "},
			{"spoken" : "go line start","action" : "Move cursor to start of line. "},
			{"spoken" : "go line end","action" : "Move cursor to end of line. "},
			{"spoken" : "go way left","action" : "Move cursor to start of line. Move cursor to start of line. "},
			{"spoken" : "go way right","action" : "Move cursor to end of line. "},
			{"spoken" : "go way down","action" : "Move cursor to end of file (start of line). "},
			{"spoken" : "go way up","action" : "Move cursor to start of file. "},
			{"spoken" : "go bottom","action" : "Move cursor to end of file (start of line). "},
			{"spoken" : "go top","action" : "Move cursor to start of file. "},
			{"spoken" : "go page down","action" : "Move cursor down one page. "},
			{"spoken" : "go page up","action" : "Move cursor up one page. "},
			{"spoken" : "select line","action" : "Select entire line <n>, or current line. "},
			{"spoken" : "select all","action" : "Select all text in the current document. "},
			{"spoken" : "select left","action" : "Extend selection left one column. "},
			{"spoken" : "select right","action" : "Extend selection right one column. "},
			{"spoken" : "select up","action" : "Extend selection up one full line. "},
			{"spoken" : "select down","action" : "Extend selection down one full line. "},
			{"spoken" : "select word","action" : "Select word under cursor. "},
			{"spoken" : "select word left","action" : "Extend selection left one word. "},
			{"spoken" : "select word right","action" : "Extend selection right one word. "},
			{"spoken" : "select way left","action" : "Extend selection to start of line. "},
			{"spoken" : "select way right","action" : "Extend selection to end of line. "},
			{"spoken" : "select way up","action" : "Extend selection to start of file. "},
			{"spoken" : "select way down","action" : "Extend selection to end of file. "},
			{"spoken" : "indent [more]","action" : "Add a tab stop of indentation. "},
			{"spoken" : "(indent less | out dent)","action" : "Remove a tab stop of indentation. "},
			{"spoken" : "clear line","action" : "Delete line under cursor. "},
			{"spoken" : "clear left","action" : "Press backspace. "},
			{"spoken" : "clear right","action" : "Press delete. "},
			{"spoken" : "clear up","action" : "Extend selection up one full line. Delete selection. "},
			{"spoken" : "clear down","action" : "Extend selection down one full line. Delete selection. "},
			{"spoken" : "clear word","action" : "Delete word under cursor. "},
			{"spoken" : "clear word left","action" : "Extend selection left one word. Delete selection. "},
			{"spoken" : "clear word right","action" : "Extend selection right one word. Delete selection. "},
			{"spoken" : "clear way left","action" : "Extend selection to start of line. Delete selection. "},
			{"spoken" : "clear way right","action" : "Extend selection to end of line. Delete selection. "},
			{"spoken" : "clear way up","action" : "Extend selection to start of file. Delete selection. "},
			{"spoken" : "clear way down","action" : "Extend selection to end of file. Delete selection. "},
			{"spoken" : "clear all","action" : "Select all text in the current document. Delete selection. "},
			{"spoken" : "copy all","action" : "Select all text in the current document. Copy selection to clipboard. "},
			{"spoken" : "copy word","action" : "Select word under cursor. Copy selection to clipboard. "},
			{"spoken" : "copy word left","action" : "Extend selection left one word. Copy selection to clipboard. "},
			{"spoken" : "copy word right","action" : "Extend selection right one word. Copy selection to clipboard. "},
			{"spoken" : "copy line","action" : "Select entire line <n>, or current line. Copy selection to clipboard. "},
			{"spoken" : "cut all","action" : "Select all text in the current document. Cut selection to clipboard. "},
			{"spoken" : "cut word","action" : "Select word under cursor. Cut selection to clipboard. "},
			{"spoken" : "cut word left","action" : "Extend selection left one word. Cut selection to clipboard. "},
			{"spoken" : "cut word right","action" : "Extend selection right one word. Cut selection to clipboard. "},
			{"spoken" : "cut line","action" : "Select entire line <n>, or current line. Cut selection to clipboard. "},
			{"spoken" : "(pace | paste) all","action" : "Select all text in the current document. Paste clipboard at cursor. "},

		],
		"Homophones": [
			{"spoken" : "phones  <a href=\"#user-homophones-canonical-capture\"> &lt;user.homophones-canonical&gt; </a> ","action" : "Show the homophones display. "},
			{"spoken" : "phones that","action" : "Show the homophones display for the selected text. "},
			{"spoken" : "phones force  <a href=\"#user-homophones-canonical-capture\"> &lt;user.homophones-canonical&gt; </a> ","action" : "Show the homophones display forcibly. "},
			{"spoken" : "phones force","action" : "Show the homophones display for the selected text forcibly. "},
			{"spoken" : "phones hide","action" : "Hides the homophones display. "},
			{"spoken" : "phones word","action" : "Select word under cursor. Show the homophones display for the selected text. "},
			{"spoken" : "phones [ <a href=\"#user-ordinals-capture\"> &lt;user.ordinals&gt; </a> ] word left","action" : "Let <n> be <ordinals> or 1. Moves left by n words.. Extend selection left one word. Show the homophones display for the selected text. "},
			{"spoken" : "phones [ <a href=\"#user-ordinals-capture\"> &lt;user.ordinals&gt; </a> ] word right","action" : "Let <n> be <ordinals> or 1. Moves right by n words.. Extend selection right one word. Show the homophones display for the selected text. "},

		],
		"Homophones Open": [
			{"spoken" : "choose  &lt;number-small&gt;  ","action" : "Let <result> be homophone #<number_small>. Insert \"<result>\". Hides the homophones display. "},
			{"spoken" : "choose  <a href=\"#user-formatters-capture\"> &lt;user.formatters&gt; </a>   &lt;number-small&gt;  ","action" : "Let <result> be homophone #<number_small>. Insert \"<result> (formatted with <formatters>)\". Hides the homophones display. "},

		],
		"Line Commands": [
			{"spoken" : "lend","action" : "Move cursor to end of line. "},
			{"spoken" : "bend","action" : "Move cursor to start of line. "},
			{"spoken" : "go  &lt;number&gt;  ","action" : "Move cursor to line <n>. "},
			{"spoken" : "go  &lt;number&gt;   end","action" : "Move cursor to line <n>. Move cursor to end of line. "},
			{"spoken" : "comment [line]  &lt;number&gt;  ","action" : "Selects lines from line_start to line line_end. Toggle comments on the current line(s). "},
			{"spoken" : "comment  &lt;number&gt;   until  &lt;number&gt;  ","action" : "Selects lines from line_start to line line_end. Toggle comments on the current line(s). "},
			{"spoken" : "clear [line]  &lt;number&gt;  ","action" : "Move cursor to line <n>. Selects lines from line_start to line line_end. Delete selection. "},
			{"spoken" : "clear  &lt;number&gt;   until  &lt;number&gt;  ","action" : "Selects lines from line_start to line line_end. Delete selection. "},
			{"spoken" : "copy [line]  &lt;number&gt;  ","action" : "Selects lines from line_start to line line_end. Copy selection to clipboard. "},
			{"spoken" : "copy  &lt;number&gt;   until  &lt;number&gt;  ","action" : "Selects lines from line_start to line line_end. Copy selection to clipboard. "},
			{"spoken" : "cut [line]  &lt;number&gt;  ","action" : "Selects lines from line_start to line line_end. Cut selection to clipboard. "},
			{"spoken" : "cut [line]  &lt;number&gt;   until  &lt;number&gt;  ","action" : "Selects lines from line_start to line line_end. Cut selection to clipboard. "},
			{"spoken" : "(paste | replace)  &lt;number&gt;   until  &lt;number&gt;  ","action" : "Selects lines from line_start to line line_end. Paste clipboard at cursor. "},
			{"spoken" : "(select | cell | sell) [line]  &lt;number&gt;  ","action" : "Selects lines from line_start to line line_end. "},
			{"spoken" : "(select | cell | sell)  &lt;number&gt;   until  &lt;number&gt;  ","action" : "Selects lines from line_start to line line_end. "},
			{"spoken" : "tab that","action" : "Add a tab stop of indentation. "},
			{"spoken" : "tab [line]  &lt;number&gt;  ","action" : "Move cursor to line <n>. Add a tab stop of indentation. "},
			{"spoken" : "tab  &lt;number&gt;   until  &lt;number&gt;  ","action" : "Selects lines from line_start to line line_end. Add a tab stop of indentation. "},
			{"spoken" : "retab that","action" : "Remove a tab stop of indentation. "},
			{"spoken" : "retab [line]  &lt;number&gt;  ","action" : "Selects lines from line_start to line line_end. Remove a tab stop of indentation. "},
			{"spoken" : "retab  &lt;number&gt;   until  &lt;number&gt;  ","action" : "Selects lines from line_start to line line_end. Remove a tab stop of indentation. "},
			{"spoken" : "drag [line] down","action" : "Swap the current line with the line below. "},
			{"spoken" : "drag [line] up","action" : "Swap the current line with the line above. "},
			{"spoken" : "drag up [line]  &lt;number&gt;  ","action" : "Selects lines from line_start to line line_end. Swap the current line with the line above. "},
			{"spoken" : "drag up  &lt;number&gt;   until  &lt;number&gt;  ","action" : "Selects lines from line_start to line line_end. Swap the current line with the line above. "},
			{"spoken" : "drag down [line]  &lt;number&gt;  ","action" : "Selects lines from line_start to line line_end. Swap the current line with the line below. "},
			{"spoken" : "drag down  &lt;number&gt;   until  &lt;number&gt;  ","action" : "Selects lines from line_start to line line_end. Swap the current line with the line below. "},
			{"spoken" : "clone (line|that)","action" : "Create a new line identical to the current line. "},
			{"spoken" : "select camel left","action" : "Extends the selection by camel/subword to the left. "},
			{"spoken" : "select camel right","action" : "Extends the selection by camel/subword to the right. "},
			{"spoken" : "go camel left","action" : "Moves cursor to the left by camel case/subword. "},
			{"spoken" : "go camel right","action" : "Move cursor to the right by camel case/subword. "},

		],
		"Numbers": [
			{"spoken" : " <a href=\"#user-number-string-capture\"> &lt;user.number-string&gt; </a> ","action" : "Insert \"<number_string>\". "},

		],
		"Symbols": [
			{"spoken" : "double dash","action" : "Insert \"--\". "},
			{"spoken" : "triple quote","action" : "Insert \"'''\". "},
			{"spoken" : "(triple grave | triple back tick | gravy)","action" : "Insert \"```\". "},
			{"spoken" : "(dot dot | dotdot)","action" : "Insert \"..\". "},
			{"spoken" : "ellipses","action" : "Insert \"...\". "},
			{"spoken" : "(comma and | spamma)","action" : "Insert \", \". "},
			{"spoken" : "arrow","action" : "Insert \"->\". "},
			{"spoken" : "dub arrow","action" : "Insert \"=>\". "},
			{"spoken" : "new line","action" : "Insert \"\\n\". "},
			{"spoken" : "carriage return","action" : "Insert \"\\r\". "},
			{"spoken" : "line feed","action" : "Insert \"\\r\\n\". "},
			{"spoken" : "empty dubstring","action" : "Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.. "},
			{"spoken" : "empty escaped (dubstring|dub quotes)","action" : "Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.. "},
			{"spoken" : "empty string","action" : "Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.. "},
			{"spoken" : "empty escaped string","action" : "Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.. "},
			{"spoken" : "(inside parens | args)","action" : "Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.. "},
			{"spoken" : "inside (squares | square brackets | list)","action" : "Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.. "},
			{"spoken" : "inside (bracket | braces)","action" : "Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.. "},
			{"spoken" : "inside percent","action" : "Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.. "},
			{"spoken" : "inside (quotes | string)","action" : "Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.. "},
			{"spoken" : "inside (double quotes | dubquotes)","action" : "Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.. "},
			{"spoken" : "inside (graves | back ticks)","action" : "Insert `before + after`, leaving cursor between `before` and `after`. Not entirely reliable if `after` contains newlines.. "},
			{"spoken" : "angle that","action" : "Let <text> be the selected text. Pastes text and preserves clipboard. "},
			{"spoken" : "(square | square bracket) that","action" : "Let <text> be the selected text. Pastes text and preserves clipboard. "},
			{"spoken" : "(bracket | brace) that","action" : "Let <text> be the selected text. Pastes text and preserves clipboard. "},
			{"spoken" : "(parens | args) that","action" : "Let <text> be the selected text. Pastes text and preserves clipboard. "},
			{"spoken" : "percent that","action" : "Let <text> be the selected text. Pastes text and preserves clipboard. "},
			{"spoken" : "quote that","action" : "Let <text> be the selected text. Pastes text and preserves clipboard. "},
			{"spoken" : "(double quote | dubquote) that","action" : "Let <text> be the selected text. Pastes text and preserves clipboard. "},
			{"spoken" : "(grave | back tick) that","action" : "Let <text> be the selected text. Pastes text and preserves clipboard. "},

		],
		"Text Navigation": [
			{"spoken" : "navigate [<a href=\"#user-arrow-key-list\">  {user.arrow-key}  </a>] [<a href=\"#user-navigation-action-list\">  {user.navigation-action}  </a>] [<a href=\"#user-navigation-target-name-list\">  {user.navigation-target-name}  </a>] [<a href=\"#user-before-or-after-list\">  {user.before-or-after}  </a>] [ <a href=\"#user-ordinals-capture\"> &lt;user.ordinals&gt; </a> ]  <a href=\"#user-navigation-target-capture\"> &lt;user.navigation-target&gt; </a> ","action" : "Navigate in `direction` to the occurrence_number-th time that `regex` occurs, then execute `navigation_action` at the given `before_or_after` position.. "},
			{"spoken" : "word neck [ &lt;number-small&gt;  ]","action" : "Like user.navigation, but to a named target.. "},
			{"spoken" : "word pre [ &lt;number-small&gt;  ]","action" : "Like user.navigation, but to a named target.. "},
			{"spoken" : "small word neck [ &lt;number-small&gt;  ]","action" : "Like user.navigation, but to a named target.. "},
			{"spoken" : "small word pre [ &lt;number-small&gt;  ]","action" : "Like user.navigation, but to a named target.. "},
			{"spoken" : "big word neck [ &lt;number-small&gt;  ]","action" : "Like user.navigation, but to a named target.. "},
			{"spoken" : "big word pre [ &lt;number-small&gt;  ]","action" : "Like user.navigation, but to a named target.. "},

		],
		"Latex": [
			{"spoken" : "document class <a href=\"#user-tex-document-classes-list\">  {user.tex-document-classes}  </a>","action" : "Insert \"\\documentclass { <tex_document_classes> }\". "},
			{"spoken" : "use package <a href=\"#user-tex-packages-list\">  {user.tex-packages}  </a>","action" : "Insert \"\\usepackage { <tex_packages> }\". "},
			{"spoken" : "use package bib latex","action" : "Insert \"\\usepackage[style=authoryear] { biblatex}\". "},
			{"spoken" : "begin <a href=\"#user-tex-environments-list\">  {user.tex-environments}  </a>","action" : "Insert \"\\begin { <tex_environments> }\". Press enter:2. Insert \"\\end { <tex_environments> }\". Press up. "},
			{"spoken" : "insert <a href=\"#user-tex-commands-list\">  {user.tex-commands}  </a>","action" : "Insert \"\\ <tex_commands> { }\". Press left. "},
			{"spoken" : "insert <a href=\"#user-tex-commands-noarg-list\">  {user.tex-commands-noarg}  </a>","action" : "Insert \"\\ <tex_commands_noarg>  \". "},
			{"spoken" : "greek <a href=\"#user-greek-letters-list\">  {user.greek-letters}  </a>","action" : "Insert \"\\ <greek_letters>  \". "},
			{"spoken" : "symbol <a href=\"#user-tex-symbols-list\">  {user.tex-symbols}  </a>","action" : "Insert \"\\ <tex_symbols>  \". "},
			{"spoken" : "template <a href=\"#user-tex-templates-list\">  {user.tex-templates}  </a>","action" : "Pastes text and preserves clipboard. "},

		],
		"Lyx": [
			{"spoken" : "add matrix row","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "(delete | remove) matrix row","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "add matrix column","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "(delete | remove) matrix column","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "square root","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "generic root","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "brackets","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "square brackets","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "curly brackets","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "absolute","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "accent hat","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "accent tilde","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "accent dot","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "accent double dot","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "accent bar","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "accent vector","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "blank summation","action" : "Insert \"\\sum \". "},
			{"spoken" : "summation","action" : "Insert \"\\stackrelthree \". Press down. Insert \"\\sum \". Press down. "},
			{"spoken" : "blank product","action" : "Insert \"\\prod \". "},
			{"spoken" : "product","action" : "Insert \"\\stackrelthree \". Press down. Insert \"\\prod \". Press down. "},
			{"spoken" : "blank limit","action" : "Insert \"\\lim \". "},
			{"spoken" : "limit","action" : "Insert \"\\underset \\lim \". Press down. "},
			{"spoken" : "label above","action" : "Insert \"\\overset \". "},
			{"spoken" : "label below","action" : "Insert \"\\underset \". "},
			{"spoken" : "prime","action" : "Superscript. "},
			{"spoken" : "degrees","action" : "Superscript. "},
			{"spoken" : "exponential","action" : "Insert \"\\exp \". Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "expectation","action" : "Insert \"E\". Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "variance","action" : "Insert \"Var\". Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "real numbers","action" : "Insert \"\\mathbb R\". Press right. "},
			{"spoken" : "complex numbers","action" : "Insert \"\\mathbb C\". Press right. "},
			{"spoken" : "integer numbers","action" : "Insert \"\\mathbb Z\". Press right. "},
			{"spoken" : "rational numbers","action" : "Insert \"\\mathbb Q\". Press right. "},
			{"spoken" : "natural numbers","action" : "Insert \"\\mathbb N\". Press right. "},
			{"spoken" : "text roman","action" : "Insert \"\\mathrm \". "},
			{"spoken" : "text bold","action" : "Insert \"\\mathbf \". "},
			{"spoken" : "text sans serif","action" : "Insert \"\\mathsf \". "},
			{"spoken" : "text italic","action" : "Insert \"\\mathit \". "},
			{"spoken" : "text typewriter","action" : "Insert \"\\mathtt \". "},
			{"spoken" : "text (beebee|blackboard bold | blackboard)","action" : "Insert \"\\mathbb \". "},
			{"spoken" : "new file","action" : "Press ctrl-n. "},
			{"spoken" : "open file","action" : "Press ctrl-o. "},
			{"spoken" : "save as","action" : "Press ctrl-shift-s. "},
			{"spoken" : "(math | maths) mode","action" : "Press ctrl-m. "},
			{"spoken" : "display mode","action" : "Press ctrl-shift-m. "},
			{"spoken" : "normal mode","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "view PDF","action" : "Press ctrl-r. "},
			{"spoken" : "update PDF","action" : "Press ctrl-shift-r. "},
			{"spoken" : "next tab","action" : "Press ctrl-pgdown. "},
			{"spoken" : "(prior | previous) tab","action" : "Press ctrl-pgup. "},
			{"spoken" : "close tab","action" : "Press ctrl-w. "},
			{"spoken" : "move line up","action" : "Press alt-up. "},
			{"spoken" : "move line down","action" : "Press alt-down. "},
			{"spoken" : "insert (in line formula | in line)","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "insert (numbered formula)","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "insert (display formula | display)","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "insert equation array","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "insert [bulleted] list","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "insert numbered list","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "insert description","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "insert part","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "insert (section | heading)","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "insert sub (section | heading)","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "insert sub sub (section | heading)","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "insert paragraph","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "insert sub paragraph","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "insert title","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "insert author","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "insert date","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "insert abstract","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "insert address","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "insert bibliography","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "insert quotation","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "insert quote","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},
			{"spoken" : "insert verse","action" : "Press a sequence of keys prefixed with a lyx control chord (ctrl-{type} on mac, alt-{type} otherwise). "},

		],
		"Maths": [
			{"spoken" : "help (math | maths)","action" : "Show help dialogue. "},
			{"spoken" : "show (math | maths) help","action" : "Show help dialogue. "},
			{"spoken" : "hide maths help","action" : "Hide help dialogue. "},
			{"spoken" : "greek <a href=\"#user-greek-letters-list\">  {user.greek-letters}  </a>","action" : "Insert a greek letter (one of those in the greek_letters list). "},
			{"spoken" : "<a href=\"#user-tex-symbols-list\">  {user.tex-symbols}  </a>","action" : "Insert a TeX symbol (one of those in the tex_symbols list). "},
			{"spoken" : "matrix  &lt;number&gt;   by  &lt;number&gt;  ","action" : "Insert a matrix (rows x columns). "},
			{"spoken" : "fraction","action" : "Begin a fraction. "},
			{"spoken" : "over","action" : "Press shift-left. Begin a fraction. Press down. "},
			{"spoken" : " &lt;number&gt;   <a href=\"#user-maths-fractions-list\">  {user.maths-fractions}  </a>","action" : "Begin a fraction. Insert \"<number>\". Press down. Insert \"<maths_fractions>\". Press right. "},
			{"spoken" : "(super script | to the power)","action" : "Begin superscript. "},
			{"spoken" : "inverse","action" : "Superscript. "},
			{"spoken" : "squared","action" : "Superscript. "},
			{"spoken" : "cubed","action" : "Superscript. "},
			{"spoken" : "sub script","action" : "Begin subscript. "},

		],
		"Scientific Notebook 55": [
			{"spoken" : "(parens | parentheses | prens)","action" : "Press ctrl-0. "},
			{"spoken" : "(squares | square brackets)","action" : "Press ctrl-6. "},
			{"spoken" : "absolute","action" : "Press ctrl-\\. "},
			{"spoken" : "norma","action" : "Press ctrl-shift-\\. "},
			{"spoken" : "chi squared","action" : "Press ctrl-g q ctrl-h 2 right. "},
			{"spoken" : "(radical | square root)","action" : "Press ctrl-r. "},
			{"spoken" : "summation","action" : "Press ctrl-7. "},
			{"spoken" : "accent hat","action" : "Press ctrl-^. "},
			{"spoken" : "accent tilde","action" : "Press ctrl-~. "},
			{"spoken" : "accent dot","action" : "Press ctrl-.. "},
			{"spoken" : "accent double dot","action" : "Press ctrl-\\\". "},
			{"spoken" : "accent bar","action" : "Press ctrl-_. "},
			{"spoken" : "accent vector","action" : "Press ctrl--. "},
			{"spoken" : "new file","action" : "Press f10 f enter. "},
			{"spoken" : "open file","action" : "Press ctrl-o. "},
			{"spoken" : "save file","action" : "Press f10 f s. "},
			{"spoken" : "save as","action" : "Press f10 f down:5 enter. "},
			{"spoken" : "print file","action" : "Press ctrl-p. "},
			{"spoken" : "export document","action" : "Press f10 f down:7 enter. "},
			{"spoken" : "page preview","action" : "Press f10 f down:17 enter. "},
			{"spoken" : "body (math | maths)","action" : "Press alt-2 down enter. "},
			{"spoken" : "body text","action" : "Press alt-2 down:2 enter. "},
			{"spoken" : "(begin | insert) [bulleted] list","action" : "Press alt-1 down:2 enter. "},
			{"spoken" : "(begin | insert) numbered list","action" : "Press alt-1 down:4 enter. "},
			{"spoken" : "end [(bulleted | numbered)] list","action" : "Press alt-1 up enter. "},
			{"spoken" : "insert normal text","action" : "Press alt-3 down enter. "},
			{"spoken" : "insert big text","action" : "Press alt-3 down:2 enter. "},
			{"spoken" : "insert small text","action" : "Press alt-3 down:9 enter. "},
			{"spoken" : "insert bold text","action" : "Press alt-3 down:3 enter. "},
			{"spoken" : "insert italic text","action" : "Press alt-3 down:6 enter. "},
			{"spoken" : "insert bold symbols","action" : "Press alt-3 down:4 enter. "},
			{"spoken" : "insert centred text","action" : "Press alt-2 down:3 enter. "},
			{"spoken" : "insert left text","action" : "Press alt-2 down:4 enter. "},
			{"spoken" : "insert right text","action" : "Press alt-2 down:5 enter. "},
			{"spoken" : "insert quotation","action" : "Press alt-2 down:11 enter. "},
			{"spoken" : "insert (heading | title) [one]","action" : "Press alt-2 down:6 enter. "},
			{"spoken" : "insert (heading | title) two","action" : "Press alt-2 down:7 enter. "},
			{"spoken" : "insert (heading | title) three","action" : "Press alt-2 down:8 enter. "},
			{"spoken" : "insert (heading | title) four","action" : "Press alt-2 down:9 enter. "},
			{"spoken" : "insert (heading | title) five","action" : "Press alt-2 down:10 enter. "},
			{"spoken" : "evaluate","action" : "Press ctrl-e. "},
			{"spoken" : "evaluate numerically","action" : "Press f10 c down enter. "},
			{"spoken" : "toggle (math | maths)","action" : "Press ctrl-m. "},
			{"spoken" : "toggle text","action" : "Press ctrl-t. "},
			{"spoken" : "label above","action" : "Press f10 i down:11 enter a enter. "},
			{"spoken" : "label below","action" : "Press f10 i down:11 enter b enter. "},
			{"spoken" : "add matrix row","action" : "Press f10 e up up enter enter. "},
			{"spoken" : "add matrix column","action" : "Press f10 e up enter enter. "},

		],
		"Rango": [
			{"spoken" : "click  <a href=\"#user-rango-target-capture\"> &lt;user.rango-target&gt; </a> ","action" : "Executes a Rango command. "},
			{"spoken" : "blank  <a href=\"#user-rango-target-capture\"> &lt;user.rango-target&gt; </a> ","action" : "Executes a Rango command. "},
			{"spoken" : "stash  <a href=\"#user-rango-target-capture\"> &lt;user.rango-target&gt; </a> ","action" : "Executes a Rango command. "},
			{"spoken" : "tab close other","action" : "Executes a Rango command without a target. "},
			{"spoken" : "tab close left","action" : "Executes a Rango command without a target. "},
			{"spoken" : "tab close right","action" : "Executes a Rango command without a target. "},
			{"spoken" : "tab close first [ &lt;number-small&gt;  ]","action" : "Executes a Rango command without a target. "},
			{"spoken" : "tab close final [ &lt;number-small&gt;  ]","action" : "Executes a Rango command without a target. "},
			{"spoken" : "tab close previous [ &lt;number-small&gt;  ]","action" : "Executes a Rango command without a target. "},
			{"spoken" : "tab close next [ &lt;number-small&gt;  ]","action" : "Executes a Rango command without a target. "},
			{"spoken" : "tab clone","action" : "Executes a Rango command without a target. "},
			{"spoken" : "hover  <a href=\"#user-rango-target-capture\"> &lt;user.rango-target&gt; </a> ","action" : "Executes a Rango command. "},
			{"spoken" : "dismiss","action" : "Executes a Rango command without a target. "},
			{"spoken" : "show  <a href=\"#user-rango-target-capture\"> &lt;user.rango-target&gt; </a> ","action" : "Executes a Rango command. "},
			{"spoken" : "upper","action" : "Executes a Rango command without a target. "},
			{"spoken" : "tiny up","action" : "Executes a Rango command without a target. "},
			{"spoken" : "downer","action" : "Executes a Rango command without a target. "},
			{"spoken" : "tiny down","action" : "Executes a Rango command without a target. "},
			{"spoken" : "upper  <a href=\"#user-rango-target-capture\"> &lt;user.rango-target&gt; </a> ","action" : "Executes a Rango command. "},
			{"spoken" : "tiny up  <a href=\"#user-rango-target-capture\"> &lt;user.rango-target&gt; </a> ","action" : "Executes a Rango command. "},
			{"spoken" : "downer  <a href=\"#user-rango-target-capture\"> &lt;user.rango-target&gt; </a> ","action" : "Executes a Rango command. "},
			{"spoken" : "tiny down  <a href=\"#user-rango-target-capture\"> &lt;user.rango-target&gt; </a> ","action" : "Executes a Rango command. "},
			{"spoken" : "up again","action" : "Executes a Rango command without a target. "},
			{"spoken" : "down again","action" : "Executes a Rango command without a target. "},
			{"spoken" : "crown  <a href=\"#user-rango-target-capture\"> &lt;user.rango-target&gt; </a> ","action" : "Executes a Rango command. "},
			{"spoken" : "bottom  <a href=\"#user-rango-target-capture\"> &lt;user.rango-target&gt; </a> ","action" : "Executes a Rango command. "},
			{"spoken" : "center  <a href=\"#user-rango-target-capture\"> &lt;user.rango-target&gt; </a> ","action" : "Executes a Rango command. "},
			{"spoken" : "copy [link]  <a href=\"#user-rango-target-capture\"> &lt;user.rango-target&gt; </a> ","action" : "Executes a Rango command. "},
			{"spoken" : "copy mark  <a href=\"#user-rango-target-capture\"> &lt;user.rango-target&gt; </a> ","action" : "Executes a Rango command. "},
			{"spoken" : "copy text  <a href=\"#user-rango-target-capture\"> &lt;user.rango-target&gt; </a> ","action" : "Executes a Rango command. "},
			{"spoken" : "copy page <a href=\"#user-rango-page-location-property-list\">  {user.rango-page-location-property}  </a>","action" : "Executes a Rango command without a target. "},
			{"spoken" : "copy mark address","action" : "Executes a Rango command without a target. "},
			{"spoken" : "hint bigger","action" : "Executes a Rango command without a target. "},
			{"spoken" : "hint smaller","action" : "Executes a Rango command without a target. "},
			{"spoken" : "hint <a href=\"#user-rango-hint-styles-list\">  {user.rango-hint-styles}  </a>","action" : "Executes a Rango command without a target. "},
			{"spoken" : "hint weight <a href=\"#user-rango-hint-weights-list\">  {user.rango-hint-weights}  </a>","action" : "Executes a Rango command without a target. "},
			{"spoken" : "hint exclude singles","action" : "Executes a Rango command without a target. "},
			{"spoken" : "hint include singles","action" : "Executes a Rango command without a target. "},
			{"spoken" : "hints refresh","action" : "Executes a Rango command without a target. "},
			{"spoken" : "hints toggle","action" : "Executes a Rango command without a target. "},
			{"spoken" : "hints on [<a href=\"#user-rango-hints-toggle-levels-list\">  {user.rango-hints-toggle-levels}  </a>]","action" : "Executes a Rango command without a target. "},
			{"spoken" : "hints off [<a href=\"#user-rango-hints-toggle-levels-list\">  {user.rango-hints-toggle-levels}  </a>]","action" : "Executes a Rango command without a target. "},
			{"spoken" : "hints reset <a href=\"#user-rango-hints-toggle-levels-list\">  {user.rango-hints-toggle-levels}  </a>","action" : "Executes a Rango command without a target. "},
			{"spoken" : "keyboard toggle","action" : "Executes a Rango command without a target. "},
			{"spoken" : "address in title on","action" : "Executes a Rango command without a target. "},
			{"spoken" : "address in title off","action" : "Executes a Rango command without a target. "},
			{"spoken" : "rango explicit","action" : "Disables rango direct mode. "},
			{"spoken" : "rango direct","action" : "Enables rango direct mode so that the user doesn't have to say 'click' before the hint letters. "},

		],
		"Rango Direct Clicking": [
			{"spoken" : " <a href=\"#user-rango-target-capture\"> &lt;user.rango-target&gt; </a> ","action" : "Executes a Rango command. "},

		],
		"Choice Commands": [
			{"spoken" : "[option] <a href=\"#user-talon-hud-choices-list\">  {user.talon-hud-choices}  </a>","action" : "Activate a choice available on the screen. "},
			{"spoken" : "option <a href=\"#user-talon-hud-numerical-choices-list\">  {user.talon-hud-numerical-choices}  </a>+","action" : "Activate multiple choices available on the screen. "},
			{"spoken" : "option <a href=\"#user-talon-hud-numerical-choices-list\">  {user.talon-hud-numerical-choices}  </a>+ <a href=\"#user-talon-hud-choices-list\">  {user.talon-hud-choices}  </a>","action" : "Activate multiple choices available on the screen. Activate a choice available on the screen. "},
			{"spoken" : "<a href=\"#user-talon-hud-widget-enabled-voice-commands-list\">  {user.talon-hud-widget-enabled-voice-commands}  </a>","action" : "Activate a defined voice command attached to an enabled widget. "},

		],
		"Commands": [
			{"spoken" : "head up (show|open)","action" : "Enables the HUD. "},
			{"spoken" : "head up theme <a href=\"#user-talon-hud-themes-list\">  {user.talon-hud-themes}  </a>","action" : "Switches the UI theme. "},
			{"spoken" : "head up (drop|stop|confirm)","action" : "Starts a setup mode which can change position. "},
			{"spoken" : "head up cancel","action" : "Starts a setup mode which can change position. "},
			{"spoken" : "head up (hide|close)","action" : "Disables the HUD. "},
			{"spoken" : "head up (show|open) <a href=\"#user-talon-hud-widget-names-list\">  {user.talon-hud-widget-names}  </a>","action" : "Enables a specific HUD element. "},
			{"spoken" : "head up (hide|close) <a href=\"#user-talon-hud-widget-names-list\">  {user.talon-hud-widget-names}  </a>","action" : "Disables a specific HUD element. "},
			{"spoken" : "head up resize <a href=\"#user-talon-hud-widget-names-list\">  {user.talon-hud-widget-names}  </a>","action" : "Starts a setup mode which can change position. "},
			{"spoken" : "head up expand <a href=\"#user-talon-hud-widget-names-list\">  {user.talon-hud-widget-names}  </a>","action" : "Starts a setup mode which can change position. "},
			{"spoken" : "head up text scale <a href=\"#user-talon-hud-widget-names-list\">  {user.talon-hud-widget-names}  </a>","action" : "Starts a setup mode which can change position. "},
			{"spoken" : "head up drag <a href=\"#user-talon-hud-widget-names-list\">  {user.talon-hud-widget-names}  </a>+","action" : "Starts a setup mode which can change position for multiple widgets at the same time. "},
			{"spoken" : "head up basic <a href=\"#user-talon-hud-widget-names-list\">  {user.talon-hud-widget-names}  </a>","action" : "Set a specific widget preference. "},
			{"spoken" : "head up fancy <a href=\"#user-talon-hud-widget-names-list\">  {user.talon-hud-widget-names}  </a>","action" : "Set a specific widget preference. "},
			{"spoken" : "head up hide <a href=\"#user-talon-hud-widget-names-list\">  {user.talon-hud-widget-names}  </a> on sleep","action" : "Set a specific widget preference. "},
			{"spoken" : "head up show <a href=\"#user-talon-hud-widget-names-list\">  {user.talon-hud-widget-names}  </a> on sleep","action" : "Set a specific widget preference. "},
			{"spoken" : "head up align <a href=\"#user-talon-hud-widget-names-list\">  {user.talon-hud-widget-names}  </a> right","action" : "Set a specific widget preference. "},
			{"spoken" : "head up align <a href=\"#user-talon-hud-widget-names-list\">  {user.talon-hud-widget-names}  </a> left","action" : "Set a specific widget preference. "},
			{"spoken" : "head up align <a href=\"#user-talon-hud-widget-names-list\">  {user.talon-hud-widget-names}  </a> center","action" : "Set a specific widget preference. "},
			{"spoken" : "head up align <a href=\"#user-talon-hud-widget-names-list\">  {user.talon-hud-widget-names}  </a> top","action" : "Set a specific widget preference. "},
			{"spoken" : "head up align <a href=\"#user-talon-hud-widget-names-list\">  {user.talon-hud-widget-names}  </a> bottom","action" : "Set a specific widget preference. "},
			{"spoken" : "<a href=\"#user-talon-hud-widget-names-list\">  {user.talon-hud-widget-names}  </a> (show|open)","action" : "Enables a specific HUD element. "},
			{"spoken" : "<a href=\"#user-talon-hud-widget-names-list\">  {user.talon-hud-widget-names}  </a> (hide|close)","action" : "Disables a specific HUD element. "},
			{"spoken" : "<a href=\"#user-talon-hud-widget-names-list\">  {user.talon-hud-widget-names}  </a> minimize","action" : "Set a specific widget preference. "},
			{"spoken" : "<a href=\"#user-talon-hud-widget-names-list\">  {user.talon-hud-widget-names}  </a> maximize","action" : "Set a specific widget preference. "},
			{"spoken" : "<a href=\"#user-talon-hud-widget-names-list\">  {user.talon-hud-widget-names}  </a> next","action" : "Increase the content page of the widget if it has pages available. "},
			{"spoken" : "<a href=\"#user-talon-hud-widget-names-list\">  {user.talon-hud-widget-names}  </a> (back|previous)","action" : "Decrease the content page of the widget if it has pages available. "},
			{"spoken" : "<a href=\"#user-talon-hud-widget-names-list\">  {user.talon-hud-widget-names}  </a> options","action" : "Connect the widget to the context menu to show the options. "},
			{"spoken" : "head up development start","action" : "Watch the theme and preferences directories for changes - This gives a performance penalty and should only be used during development. Enable watching for changes in the walkthrough files for quicker development. Enable watching for changes in the documentation files for quicker development. "},
			{"spoken" : "head up development stop","action" : "Stop watching for changes in the theme directories. Disable watching for changes in the walkthrough files for quicker development. Disable watching for changes in the documentation files for quicker development. "},

		],
		"Toolkit": [
			{"spoken" : "toolkit options","action" : "Shows the content available in the HUD toolkit. "},
			{"spoken" : "toolkit debugging","action" : "Shows the content available in the debug menu of the HUD toolkit. "},
			{"spoken" : "toolkit scope","action" : "Start debugging the Talon scope in the Talon HUD. "},
			{"spoken" : "toolkit speech","action" : "Start displaying the phrase debugging tools. "},
			{"spoken" : "toolkit lists","action" : "Show available  lists to view for the Talon HUD. "},
			{"spoken" : "toolkit microphones","action" : "Show the microphone options in a choice panel. "},
			{"spoken" : "toolkit documentation","action" : "Show the general documentation. "},
			{"spoken" : "toolkit walkthroughs","action" : "Show all the currently available walk through options. "},

		],
		"Walkthrough": [
			{"spoken" : "(continue|skip step)","action" : "Skip the current walk through step. "},
			{"spoken" : "(previous [step]|last step)","action" : "Skip the current walk through step. "},
			{"spoken" : "skip everything","action" : "Skip the current walk through step. "},
			{"spoken" : "head up theme dark","action" : "sleep(0.5)
user.switch_hud_theme('dark')"},
			{"spoken" : "head up theme light","action" : "sleep(1.5)
user.switch_hud_theme('light')"},
			{"spoken" : "music and video playlist","action" : "Visit the given URL.. "},

		],
		"Widget Quick Choices": [
			{"spoken" : "<a href=\"#user-talon-hud-quick-choices-list\">  {user.talon-hud-quick-choices}  </a>","action" : "Activate a choice available on the screen. "},

		],

},
}
